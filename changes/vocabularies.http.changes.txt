ns.aml.vocabularies.apiContract;

./api-request-editor/src/ApiRequestEditor.js:    const key = this._getAmfKey(this.ns.raml.vocabularies.http + 'header');
./api-request-editor/src/ApiRequestEditor.js:    const key = this._getAmfKey(this.ns.raml.vocabularies.http + 'payload');
./api-documentation/api-documentation.js:      name = this._getValue(item, this.ns.raml.vocabularies.http + 'path');
./api-documentation/api-documentation.js:    if (this._hasType(model, this.ns.raml.vocabularies.http + 'EndPoint')) {
./api-documentation/api-documentation.js:    const ekey = this._getAmfKey(this.ns.raml.vocabularies.http + 'endpoint');
./api-documentation/api-documentation.js:    if (this._hasType(model, this.ns.raml.vocabularies.http + 'EndPoint')) {
./api-documentation/api-documentation.js:    const ekey = this._getAmfKey(this.ns.raml.vocabularies.http + 'endpoint');
./api-documentation/api-documentation.js:    if (this._hasType(model, this.ns.raml.vocabularies.http + 'EndPoint')) {
./api-documentation/api-documentation.js:    if (this._hasType(model, this.ns.raml.vocabularies.http + 'EndPoint')) {
./api-documentation/api-documentation.js:    return this._hasType(model, this.ns.raml.vocabularies.http + 'EndPoint');
./api-documentation/api-documentation.js:    const key = this._getAmfKey(this.ns.raml.vocabularies.http + 'accepts');

./api-endpoint-documentation/api-endpoint-documentation.js:    return this._getValue(endpoint, this.ns.raml.vocabularies.http + 'path');
./api-endpoint-documentation/api-endpoint-documentation.js:    let mt = this._getValue(payload, this.ns.raml.vocabularies.http + 'mediaType');
./api-endpoint-documentation/api-endpoint-documentation.js:    const key = this._getAmfKey(this.ns.raml.vocabularies.http + 'schema');

./auth-methods/auth-method-custom.js:    const hKey = this._getAmfKey(this.ns.raml.vocabularies.http + 'header');
./auth-methods/auth-method-custom.js:    const pKey = this._getAmfKey(this.ns.raml.vocabularies.http + 'parameter');
./auth-methods/auth-method-custom.js:    const qKey = this._getAmfKey(this.ns.raml.vocabularies.http + 'queryString');
./auth-methods/auth-method-oauth2.js:    const http = this.ns.raml.vocabularies.http;
