[
  {
    "@id": "",
    "@type": [
      "doc:Document",
      "doc:Fragment",
      "doc:Module",
      "doc:Unit"
    ],
    "doc:encodes": [
      {
        "@id": "#/web-api",
        "@type": [
          "apiContract:WebAPI",
          "doc:RootDomainElement",
          "doc:DomainElement"
        ],
        "core:name": [
          {
            "@value": "Navigation demo API"
          }
        ],
        "apiContract:server": [
          {
            "@id": "#/web-api/https%3A%2F%2Fapi.mulesoft.com%2F%7Bversion%7D",
            "@type": [
              "apiContract:Server",
              "doc:DomainElement"
            ],
            "core:urlTemplate": [
              {
                "@value": "https://api.mulesoft.com/{version}"
              }
            ],
            "apiContract:variable": [
              {
                "@id": "#/web-api/https%3A%2F%2Fapi.mulesoft.com%2F%7Bversion%7D/parameter/version",
                "@type": [
                  "apiContract:Parameter",
                  "doc:DomainElement"
                ],
                "core:name": [
                  {
                    "@value": "version"
                  }
                ],
                "apiContract:required": [
                  {
                    "@value": true
                  }
                ],
                "apiContract:binding": [
                  {
                    "@value": "path"
                  }
                ],
                "raml-shapes:schema": [
                  {
                    "@id": "#/web-api/https%3A%2F%2Fapi.mulesoft.com%2F%7Bversion%7D/parameter/version/scalar/version",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "version"
                      }
                    ]
                  }
                ],
                "smaps": {
                  "synthesized-field": {
                    "#/web-api/https%3A%2F%2Fapi.mulesoft.com%2F%7Bversion%7D/parameter/version": "true"
                  }
                }
              }
            ],
            "smaps": {
              "lexical": {
                "core:urlTemplate": "[(5,0)-(6,0)]"
              },
              "synthesized-field": {
                "#/web-api/https%3A%2F%2Fapi.mulesoft.com%2F%7Bversion%7D": "true"
              }
            }
          }
        ],
        "apiContract:accepts": [
          {
            "@value": "application/json"
          }
        ],
        "apiContract:contentType": [
          {
            "@value": "application/json"
          }
        ],
        "apiContract:scheme": [
          {
            "@value": "HTTPS"
          }
        ],
        "core:version": [
          {
            "@value": "v2"
          }
        ],
        "core:documentation": [
          {
            "@id": "#/web-api/creative-work/How%20to%20begin",
            "@type": [
              "core:CreativeWork",
              "doc:DomainElement"
            ],
            "core:title": [
              {
                "@value": "How to begin"
              }
            ],
            "core:description": [
              {
                "@value": "Example content\n"
              }
            ],
            "smaps": {
              "lexical": {
                "core:description": "[(23,4)-(25,0)]",
                "#/web-api/creative-work/How%20to%20begin": "[(22,4)-(25,0)]",
                "core:title": "[(22,4)-(23,0)]"
              }
            }
          },
          {
            "@id": "#/web-api/creative-work/Other%20documentation%20entry",
            "@type": [
              "core:CreativeWork",
              "doc:DomainElement"
            ],
            "core:title": [
              {
                "@value": "Other documentation entry"
              }
            ],
            "core:description": [
              {
                "@value": "Example content\n"
              }
            ],
            "smaps": {
              "lexical": {
                "core:description": "[(26,4)-(28,0)]",
                "#/web-api/creative-work/Other%20documentation%20entry": "[(25,4)-(28,0)]",
                "core:title": "[(25,4)-(26,0)]"
              }
            }
          }
        ],
        "apiContract:endpoint": [
          {
            "@id": "#/web-api/end-points/%2Ffiles",
            "@type": [
              "apiContract:EndPoint",
              "doc:DomainElement"
            ],
            "apiContract:path": [
              {
                "@value": "/files"
              }
            ],
            "core:name": [
              {
                "@value": "Files"
              }
            ],
            "apiContract:supportedOperation": [
              {
                "@id": "#/web-api/end-points/%2Ffiles/post",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "post"
                  }
                ],
                "core:name": [
                  {
                    "@value": "Insert"
                  }
                ],
                "core:description": [
                  {
                    "@value": "Insert a new file.\nThis method supports an /upload URI and accepts uploaded media with the following characteristics:\n\n- Maximum file size: 5120GB\n- Accepted Media MIME types: */*\n\nNote: Apps creating shortcuts with files.insert must specify the MIME type `application/vnd.google-apps.drive-sdk`.\n\nApps should specify a file extension in the title property when inserting files with the API. For example, an operation to insert a JPEG file should specify something like `\"title\": \"cat.jpg\"` in the metadata.\n\nSubsequent GET requests include the read-only fileExtension property populated with the extension originally specified in the title property. When a Google Drive user requests to download a file, or when the file is downloaded through the sync client, Drive builds a full filename (with extension) based on the title. In cases where the extension is missing, Google Drive attempts to determine the extension based on the file's MIME type.\n\n### HTTP request\n\nThis method provides media upload functionality through two separate URIs. For more details, see the document on media upload.\n\n- Upload URI, for media upload requests: `POST https://www.googleapis.com/upload/drive/v2/files`\n- Metadata URI, for metadata-only requests: `POST https://www.googleapis.com/drive/v2/files`\n"
                  }
                ],
                "smaps": {
                  "lexical": {
                    "core:description": "[(96,4)-(115,0)]",
                    "#/web-api/end-points/%2Ffiles/post": "[(94,2)-(115,0)]",
                    "core:name": "[(95,4)-(96,0)]"
                  }
                }
              },
              {
                "@id": "#/web-api/end-points/%2Ffiles/get",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "get"
                  }
                ],
                "core:name": [
                  {
                    "@value": "list"
                  }
                ],
                "core:description": [
                  {
                    "@value": "Lists the user's files. Try it now or see an example.\n\nRequests with `files.list` accept the `q` parameter, which is a search query combining one or more search terms. For more information, see Search for files.\n\nNote: Note: This method returns all files by default. This includes files with trashed=true in the results. Use the trashed=false query parameter to filter these from the results.\n"
                  }
                ],
                "security:security": [
                  {
                    "@id": "#/web-api/end-points/%2Ffiles/get/basic",
                    "@type": [
                      "security:ParametrizedSecurityScheme",
                      "doc:DomainElement"
                    ],
                    "core:name": [
                      {
                        "@value": "basic"
                      }
                    ],
                    "security:scheme": [
                      {
                        "@id": "#/declarations/securitySchemes/basic",
                        "@type": [
                          "security:SecurityScheme",
                          "doc:DomainElement"
                        ],
                        "core:name": [
                          {
                            "@value": "basic"
                          }
                        ],
                        "security:type": [
                          {
                            "@value": "Basic Authentication"
                          }
                        ],
                        "core:description": [
                          {
                            "@value": "Test basic auth method\n"
                          }
                        ],
                        "smaps": {
                          "declared-element": {
                            "#/declarations/securitySchemes/basic": ""
                          },
                          "lexical": {
                            "core:description": "[(15,4)-(17,0)]",
                            "core:name": "[(13,2)-(13,7)]",
                            "#/declarations/securitySchemes/basic": "[(13,2)-(17,0)]",
                            "security:type": "[(14,4)-(15,0)]"
                          }
                        }
                      }
                    ],
                    "smaps": {
                      "lexical": {
                        "#/web-api/end-points/%2Ffiles/get/basic": "[(116,16)-(116,21)]"
                      }
                    }
                  }
                ],
                "smaps": {
                  "lexical": {
                    "security:security": "[(116,4)-(117,0)]",
                    "core:name": "[(117,4)-(118,0)]",
                    "#/web-api/end-points/%2Ffiles/get": "[(115,2)-(124,0)]",
                    "core:description": "[(118,4)-(124,0)]"
                  }
                }
              }
            ],
            "smaps": {
              "lexical": {
                "core:name": "[(93,2)-(94,0)]",
                "#/web-api/end-points/%2Ffiles": "[(92,0)-(300,0)]"
              }
            }
          },
          {
            "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D",
            "@type": [
              "apiContract:EndPoint",
              "doc:DomainElement"
            ],
            "apiContract:path": [
              {
                "@value": "/files/{fileId}"
              }
            ],
            "core:name": [
              {
                "@value": "Get file"
              }
            ],
            "apiContract:supportedOperation": [
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D/get",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "get"
                  }
                ],
                "core:description": [
                  {
                    "@value": "Gets a file's metadata by ID."
                  }
                ],
                "smaps": {
                  "lexical": {
                    "core:description": "[(127,6)-(128,0)]",
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D/get": "[(126,4)-(128,0)]"
                  }
                }
              },
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D/patch",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "patch"
                  }
                ],
                "core:description": [
                  {
                    "@value": "Updates file metadata. This method supports patch semantics."
                  }
                ],
                "smaps": {
                  "lexical": {
                    "core:description": "[(129,6)-(130,0)]",
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D/patch": "[(128,4)-(130,0)]"
                  }
                }
              },
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D/put",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "put"
                  }
                ],
                "core:description": [
                  {
                    "@value": "Updates file metadata and/or content."
                  }
                ],
                "smaps": {
                  "lexical": {
                    "core:description": "[(131,6)-(132,0)]",
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D/put": "[(130,4)-(132,0)]"
                  }
                }
              },
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D/delete",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "delete"
                  }
                ],
                "core:description": [
                  {
                    "@value": "Permanently deletes a file by ID. Skips the trash. The currently authenticated user must own the file."
                  }
                ],
                "smaps": {
                  "lexical": {
                    "core:description": "[(133,6)-(134,0)]",
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D/delete": "[(132,4)-(134,0)]"
                  }
                }
              }
            ],
            "apiContract:parameter": [
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D/parameter/fileId",
                "@type": [
                  "apiContract:Parameter",
                  "doc:DomainElement"
                ],
                "core:name": [
                  {
                    "@value": "fileId"
                  }
                ],
                "apiContract:paramName": [
                  {
                    "@value": "fileId"
                  }
                ],
                "apiContract:required": [
                  {
                    "@value": true
                  }
                ],
                "apiContract:binding": [
                  {
                    "@value": "path"
                  }
                ],
                "raml-shapes:schema": [
                  {
                    "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D/parameter/fileId/scalar/fileId",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "fileId"
                      }
                    ]
                  }
                ],
                "smaps": {
                  "synthesized-field": {
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D/parameter/fileId": "true"
                  }
                }
              }
            ],
            "smaps": {
              "parent-end-point": {
                "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/demo-api.raml#/web-api/end-points/%2Ffiles"
              },
              "lexical": {
                "core:name": "[(125,4)-(126,0)]",
                "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D": "[(124,2)-(285,0)]"
              }
            }
          },
          {
            "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcopy",
            "@type": [
              "apiContract:EndPoint",
              "doc:DomainElement"
            ],
            "apiContract:path": [
              {
                "@value": "/files/{fileId}/copy"
              }
            ],
            "apiContract:supportedOperation": [
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcopy/post",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "post"
                  }
                ],
                "core:description": [
                  {
                    "@value": "Creates a copy of the specified file."
                  }
                ],
                "smaps": {
                  "lexical": {
                    "core:description": "[(136,8)-(137,0)]",
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcopy/post": "[(135,6)-(137,0)]"
                  }
                }
              }
            ],
            "apiContract:parameter": [
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcopy/parameter/fileId",
                "@type": [
                  "apiContract:Parameter",
                  "doc:DomainElement"
                ],
                "core:name": [
                  {
                    "@value": "fileId"
                  }
                ],
                "apiContract:paramName": [
                  {
                    "@value": "fileId"
                  }
                ],
                "apiContract:required": [
                  {
                    "@value": true
                  }
                ],
                "apiContract:binding": [
                  {
                    "@value": "path"
                  }
                ],
                "raml-shapes:schema": [
                  {
                    "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcopy/parameter/fileId/scalar/fileId",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "fileId"
                      }
                    ]
                  }
                ],
                "smaps": {
                  "synthesized-field": {
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcopy/parameter/fileId": "true"
                  }
                }
              }
            ],
            "smaps": {
              "parent-end-point": {
                "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcopy": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/demo-api.raml#/web-api/end-points/%2Ffiles%2F%7BfileId%7D"
              },
              "lexical": {
                "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcopy": "[(134,4)-(137,0)]"
              }
            }
          },
          {
            "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Ftouch",
            "@type": [
              "apiContract:EndPoint",
              "doc:DomainElement"
            ],
            "apiContract:path": [
              {
                "@value": "/files/{fileId}/touch"
              }
            ],
            "apiContract:supportedOperation": [
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Ftouch/post",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "post"
                  }
                ],
                "core:description": [
                  {
                    "@value": "Set the file's updated time to the current server time."
                  }
                ],
                "smaps": {
                  "lexical": {
                    "core:description": "[(139,8)-(140,0)]",
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Ftouch/post": "[(138,6)-(140,0)]"
                  }
                }
              }
            ],
            "apiContract:parameter": [
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Ftouch/parameter/fileId",
                "@type": [
                  "apiContract:Parameter",
                  "doc:DomainElement"
                ],
                "core:name": [
                  {
                    "@value": "fileId"
                  }
                ],
                "apiContract:paramName": [
                  {
                    "@value": "fileId"
                  }
                ],
                "apiContract:required": [
                  {
                    "@value": true
                  }
                ],
                "apiContract:binding": [
                  {
                    "@value": "path"
                  }
                ],
                "raml-shapes:schema": [
                  {
                    "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Ftouch/parameter/fileId/scalar/fileId",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "fileId"
                      }
                    ]
                  }
                ],
                "smaps": {
                  "synthesized-field": {
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Ftouch/parameter/fileId": "true"
                  }
                }
              }
            ],
            "smaps": {
              "parent-end-point": {
                "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Ftouch": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/demo-api.raml#/web-api/end-points/%2Ffiles%2F%7BfileId%7D"
              },
              "lexical": {
                "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Ftouch": "[(137,4)-(140,0)]"
              }
            }
          },
          {
            "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Ftrash",
            "@type": [
              "apiContract:EndPoint",
              "doc:DomainElement"
            ],
            "apiContract:path": [
              {
                "@value": "/files/{fileId}/trash"
              }
            ],
            "apiContract:supportedOperation": [
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Ftrash/post",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "post"
                  }
                ],
                "core:description": [
                  {
                    "@value": "Moves a file to the trash. The currently authenticated user must own the file."
                  }
                ],
                "smaps": {
                  "lexical": {
                    "core:description": "[(142,8)-(143,0)]",
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Ftrash/post": "[(141,6)-(143,0)]"
                  }
                }
              }
            ],
            "apiContract:parameter": [
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Ftrash/parameter/fileId",
                "@type": [
                  "apiContract:Parameter",
                  "doc:DomainElement"
                ],
                "core:name": [
                  {
                    "@value": "fileId"
                  }
                ],
                "apiContract:paramName": [
                  {
                    "@value": "fileId"
                  }
                ],
                "apiContract:required": [
                  {
                    "@value": true
                  }
                ],
                "apiContract:binding": [
                  {
                    "@value": "path"
                  }
                ],
                "raml-shapes:schema": [
                  {
                    "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Ftrash/parameter/fileId/scalar/fileId",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "fileId"
                      }
                    ]
                  }
                ],
                "smaps": {
                  "synthesized-field": {
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Ftrash/parameter/fileId": "true"
                  }
                }
              }
            ],
            "smaps": {
              "parent-end-point": {
                "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Ftrash": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/demo-api.raml#/web-api/end-points/%2Ffiles%2F%7BfileId%7D"
              },
              "lexical": {
                "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Ftrash": "[(140,4)-(143,0)]"
              }
            }
          },
          {
            "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Funtrash",
            "@type": [
              "apiContract:EndPoint",
              "doc:DomainElement"
            ],
            "apiContract:path": [
              {
                "@value": "/files/{fileId}/untrash"
              }
            ],
            "apiContract:supportedOperation": [
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Funtrash/post",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "post"
                  }
                ],
                "core:description": [
                  {
                    "@value": "Restores a file from the trash."
                  }
                ],
                "smaps": {
                  "lexical": {
                    "core:description": "[(145,8)-(146,0)]",
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Funtrash/post": "[(144,6)-(146,0)]"
                  }
                }
              }
            ],
            "apiContract:parameter": [
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Funtrash/parameter/fileId",
                "@type": [
                  "apiContract:Parameter",
                  "doc:DomainElement"
                ],
                "core:name": [
                  {
                    "@value": "fileId"
                  }
                ],
                "apiContract:paramName": [
                  {
                    "@value": "fileId"
                  }
                ],
                "apiContract:required": [
                  {
                    "@value": true
                  }
                ],
                "apiContract:binding": [
                  {
                    "@value": "path"
                  }
                ],
                "raml-shapes:schema": [
                  {
                    "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Funtrash/parameter/fileId/scalar/fileId",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "fileId"
                      }
                    ]
                  }
                ],
                "smaps": {
                  "synthesized-field": {
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Funtrash/parameter/fileId": "true"
                  }
                }
              }
            ],
            "smaps": {
              "parent-end-point": {
                "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Funtrash": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/demo-api.raml#/web-api/end-points/%2Ffiles%2F%7BfileId%7D"
              },
              "lexical": {
                "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Funtrash": "[(143,4)-(146,0)]"
              }
            }
          },
          {
            "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fparents",
            "@type": [
              "apiContract:EndPoint",
              "doc:DomainElement"
            ],
            "apiContract:path": [
              {
                "@value": "/files/{fileId}/parents"
              }
            ],
            "apiContract:supportedOperation": [
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fparents/get",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "get"
                  }
                ],
                "core:description": [
                  {
                    "@value": "Lists a file's parents."
                  }
                ],
                "smaps": {
                  "lexical": {
                    "core:description": "[(148,8)-(149,0)]",
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fparents/get": "[(147,6)-(149,0)]"
                  }
                }
              },
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fparents/post",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "post"
                  }
                ],
                "core:description": [
                  {
                    "@value": "Adds a parent folder for a file."
                  }
                ],
                "smaps": {
                  "lexical": {
                    "core:description": "[(150,8)-(151,0)]",
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fparents/post": "[(149,6)-(151,0)]"
                  }
                }
              }
            ],
            "apiContract:parameter": [
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fparents/parameter/fileId",
                "@type": [
                  "apiContract:Parameter",
                  "doc:DomainElement"
                ],
                "core:name": [
                  {
                    "@value": "fileId"
                  }
                ],
                "apiContract:paramName": [
                  {
                    "@value": "fileId"
                  }
                ],
                "apiContract:required": [
                  {
                    "@value": true
                  }
                ],
                "apiContract:binding": [
                  {
                    "@value": "path"
                  }
                ],
                "raml-shapes:schema": [
                  {
                    "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fparents/parameter/fileId/scalar/fileId",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "fileId"
                      }
                    ]
                  }
                ],
                "smaps": {
                  "synthesized-field": {
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fparents/parameter/fileId": "true"
                  }
                }
              }
            ],
            "smaps": {
              "parent-end-point": {
                "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fparents": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/demo-api.raml#/web-api/end-points/%2Ffiles%2F%7BfileId%7D"
              },
              "lexical": {
                "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fparents": "[(146,4)-(160,0)]"
              }
            }
          },
          {
            "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fparents%2F%7BparentId%7D",
            "@type": [
              "apiContract:EndPoint",
              "doc:DomainElement"
            ],
            "apiContract:path": [
              {
                "@value": "/files/{fileId}/parents/{parentId}"
              }
            ],
            "apiContract:supportedOperation": [
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fparents%2F%7BparentId%7D/get",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "get"
                  }
                ],
                "core:description": [
                  {
                    "@value": "Gets a specific parent reference."
                  }
                ],
                "smaps": {
                  "lexical": {
                    "core:description": "[(157,10)-(158,0)]",
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fparents%2F%7BparentId%7D/get": "[(156,8)-(158,0)]"
                  }
                }
              },
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fparents%2F%7BparentId%7D/delete",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "delete"
                  }
                ],
                "core:description": [
                  {
                    "@value": "Removes a parent from a file."
                  }
                ],
                "smaps": {
                  "lexical": {
                    "core:description": "[(159,10)-(160,0)]",
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fparents%2F%7BparentId%7D/delete": "[(158,8)-(160,0)]"
                  }
                }
              }
            ],
            "apiContract:parameter": [
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fparents%2F%7BparentId%7D/parameter/fileId",
                "@type": [
                  "apiContract:Parameter",
                  "doc:DomainElement"
                ],
                "core:name": [
                  {
                    "@value": "fileId"
                  }
                ],
                "apiContract:paramName": [
                  {
                    "@value": "fileId"
                  }
                ],
                "apiContract:required": [
                  {
                    "@value": true
                  }
                ],
                "apiContract:binding": [
                  {
                    "@value": "path"
                  }
                ],
                "raml-shapes:schema": [
                  {
                    "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fparents%2F%7BparentId%7D/parameter/fileId/scalar/fileId",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "fileId"
                      }
                    ]
                  }
                ],
                "smaps": {
                  "synthesized-field": {
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fparents%2F%7BparentId%7D/parameter/fileId": "true"
                  }
                }
              },
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fparents%2F%7BparentId%7D/parameter/parentId",
                "@type": [
                  "apiContract:Parameter",
                  "doc:DomainElement"
                ],
                "core:name": [
                  {
                    "@value": "parentId"
                  }
                ],
                "apiContract:paramName": [
                  {
                    "@value": "parentId"
                  }
                ],
                "core:description": [
                  {
                    "@value": "The ID of the parent."
                  }
                ],
                "apiContract:required": [
                  {
                    "@value": true
                  }
                ],
                "apiContract:binding": [
                  {
                    "@value": "path"
                  }
                ],
                "raml-shapes:schema": [
                  {
                    "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fparents%2F%7BparentId%7D/parameter/parentId/scalar/schema",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "schema"
                      }
                    ],
                    "core:description": [
                      {
                        "@value": "The ID of the parent."
                      }
                    ],
                    "smaps": {
                      "type-property-lexical-info": {
                        "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fparents%2F%7BparentId%7D/parameter/parentId/scalar/schema": "[(154,12)-(154,16)]"
                      },
                      "lexical": {
                        "core:description": "[(155,12)-(156,0)]",
                        "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fparents%2F%7BparentId%7D/parameter/parentId/scalar/schema": "[(153,10)-(156,0)]",
                        "shacl:datatype": "[(154,12)-(155,0)]"
                      }
                    }
                  }
                ],
                "smaps": {
                  "lexical": {
                    "raml-shapes:schema": "[(153,10)-(156,0)]",
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fparents%2F%7BparentId%7D/parameter/parentId": "[(153,10)-(156,0)]",
                    "core:description": "[(155,12)-(156,0)]"
                  }
                }
              }
            ],
            "smaps": {
              "parent-end-point": {
                "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fparents%2F%7BparentId%7D": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/demo-api.raml#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fparents"
              },
              "lexical": {
                "apiContract:parameter": "[(152,22)-(156,0)]",
                "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fparents%2F%7BparentId%7D": "[(151,6)-(160,0)]"
              }
            }
          },
          {
            "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fpermissions",
            "@type": [
              "apiContract:EndPoint",
              "doc:DomainElement"
            ],
            "apiContract:path": [
              {
                "@value": "/files/{fileId}/permissions"
              }
            ],
            "apiContract:supportedOperation": [
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fpermissions/get",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "get"
                  }
                ],
                "core:description": [
                  {
                    "@value": "Lists a file's permissions."
                  }
                ],
                "smaps": {
                  "lexical": {
                    "core:description": "[(162,8)-(163,0)]",
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fpermissions/get": "[(161,6)-(163,0)]"
                  }
                }
              },
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fpermissions/post",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "post"
                  }
                ],
                "core:description": [
                  {
                    "@value": "Inserts a permission for a file.\n\nWarning: Concurrent permissions operations on the same file are not supported; only the last update is applied.\n"
                  }
                ],
                "smaps": {
                  "lexical": {
                    "core:description": "[(164,8)-(168,0)]",
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fpermissions/post": "[(163,6)-(168,0)]"
                  }
                }
              }
            ],
            "apiContract:parameter": [
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fpermissions/parameter/fileId",
                "@type": [
                  "apiContract:Parameter",
                  "doc:DomainElement"
                ],
                "core:name": [
                  {
                    "@value": "fileId"
                  }
                ],
                "apiContract:paramName": [
                  {
                    "@value": "fileId"
                  }
                ],
                "apiContract:required": [
                  {
                    "@value": true
                  }
                ],
                "apiContract:binding": [
                  {
                    "@value": "path"
                  }
                ],
                "raml-shapes:schema": [
                  {
                    "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fpermissions/parameter/fileId/scalar/fileId",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "fileId"
                      }
                    ]
                  }
                ],
                "smaps": {
                  "synthesized-field": {
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fpermissions/parameter/fileId": "true"
                  }
                }
              }
            ],
            "smaps": {
              "parent-end-point": {
                "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fpermissions": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/demo-api.raml#/web-api/end-points/%2Ffiles%2F%7BfileId%7D"
              },
              "lexical": {
                "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fpermissions": "[(160,4)-(192,0)]"
              }
            }
          },
          {
            "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fpermissions%2F%7BpermissionId%7D",
            "@type": [
              "apiContract:EndPoint",
              "doc:DomainElement"
            ],
            "apiContract:path": [
              {
                "@value": "/files/{fileId}/permissions/{permissionId}"
              }
            ],
            "apiContract:supportedOperation": [
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fpermissions%2F%7BpermissionId%7D/get",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "get"
                  }
                ],
                "core:description": [
                  {
                    "@value": "Gets a permission by ID."
                  }
                ],
                "smaps": {
                  "lexical": {
                    "core:description": "[(174,10)-(175,0)]",
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fpermissions%2F%7BpermissionId%7D/get": "[(173,8)-(175,0)]"
                  }
                }
              },
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fpermissions%2F%7BpermissionId%7D/put",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "put"
                  }
                ],
                "core:description": [
                  {
                    "@value": "Updates a permission.\n\n**Warning**: Concurrent permissions operations on the same file are not supported; only the last update is applied.\n"
                  }
                ],
                "smaps": {
                  "lexical": {
                    "core:description": "[(176,10)-(180,0)]",
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fpermissions%2F%7BpermissionId%7D/put": "[(175,8)-(180,0)]"
                  }
                }
              },
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fpermissions%2F%7BpermissionId%7D/delete",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "delete"
                  }
                ],
                "core:description": [
                  {
                    "@value": "Deletes a permission from a file.\n\nWarning: Concurrent permissions operations on the same file are not supported; only the last update is applied.\n"
                  }
                ],
                "apiContract:returns": [
                  {
                    "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fpermissions%2F%7BpermissionId%7D/delete/204",
                    "@type": [
                      "apiContract:Response",
                      "doc:DomainElement"
                    ],
                    "core:name": [
                      {
                        "@value": "204"
                      }
                    ],
                    "apiContract:statusCode": [
                      {
                        "@value": "204"
                      }
                    ],
                    "smaps": {
                      "lexical": {
                        "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fpermissions%2F%7BpermissionId%7D/delete/204": "[(186,12)-(187,0)]"
                      }
                    }
                  }
                ],
                "smaps": {
                  "lexical": {
                    "apiContract:returns": "[(185,10)-(187,0)]",
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fpermissions%2F%7BpermissionId%7D/delete": "[(180,8)-(187,0)]",
                    "core:description": "[(181,10)-(185,0)]"
                  }
                }
              },
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fpermissions%2F%7BpermissionId%7D/patch",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "patch"
                  }
                ],
                "core:description": [
                  {
                    "@value": "Updates a permission. This method supports patch semantics.\n\n**Warning**: Concurrent permissions operations on the same file are not supported; only the last update is applied.\n"
                  }
                ],
                "smaps": {
                  "lexical": {
                    "core:description": "[(188,10)-(192,0)]",
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fpermissions%2F%7BpermissionId%7D/patch": "[(187,8)-(192,0)]"
                  }
                }
              }
            ],
            "apiContract:parameter": [
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fpermissions%2F%7BpermissionId%7D/parameter/fileId",
                "@type": [
                  "apiContract:Parameter",
                  "doc:DomainElement"
                ],
                "core:name": [
                  {
                    "@value": "fileId"
                  }
                ],
                "apiContract:paramName": [
                  {
                    "@value": "fileId"
                  }
                ],
                "apiContract:required": [
                  {
                    "@value": true
                  }
                ],
                "apiContract:binding": [
                  {
                    "@value": "path"
                  }
                ],
                "raml-shapes:schema": [
                  {
                    "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fpermissions%2F%7BpermissionId%7D/parameter/fileId/scalar/fileId",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "fileId"
                      }
                    ]
                  }
                ],
                "smaps": {
                  "synthesized-field": {
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fpermissions%2F%7BpermissionId%7D/parameter/fileId": "true"
                  }
                }
              },
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fpermissions%2F%7BpermissionId%7D/parameter/permissionId",
                "@type": [
                  "apiContract:Parameter",
                  "doc:DomainElement"
                ],
                "core:name": [
                  {
                    "@value": "permissionId"
                  }
                ],
                "apiContract:paramName": [
                  {
                    "@value": "permissionId"
                  }
                ],
                "core:description": [
                  {
                    "@value": "The ID for the permission."
                  }
                ],
                "apiContract:required": [
                  {
                    "@value": true
                  }
                ],
                "apiContract:binding": [
                  {
                    "@value": "path"
                  }
                ],
                "raml-shapes:schema": [
                  {
                    "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fpermissions%2F%7BpermissionId%7D/parameter/permissionId/scalar/schema",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "schema"
                      }
                    ],
                    "core:description": [
                      {
                        "@value": "The ID for the permission."
                      }
                    ],
                    "smaps": {
                      "type-property-lexical-info": {
                        "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fpermissions%2F%7BpermissionId%7D/parameter/permissionId/scalar/schema": "[(171,12)-(171,16)]"
                      },
                      "lexical": {
                        "core:description": "[(172,12)-(173,0)]",
                        "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fpermissions%2F%7BpermissionId%7D/parameter/permissionId/scalar/schema": "[(170,10)-(173,0)]",
                        "shacl:datatype": "[(171,12)-(172,0)]"
                      }
                    }
                  }
                ],
                "smaps": {
                  "lexical": {
                    "raml-shapes:schema": "[(170,10)-(173,0)]",
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fpermissions%2F%7BpermissionId%7D/parameter/permissionId": "[(170,10)-(173,0)]",
                    "core:description": "[(172,12)-(173,0)]"
                  }
                }
              }
            ],
            "smaps": {
              "parent-end-point": {
                "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fpermissions%2F%7BpermissionId%7D": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/demo-api.raml#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fpermissions"
              },
              "lexical": {
                "apiContract:parameter": "[(169,22)-(173,0)]",
                "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fpermissions%2F%7BpermissionId%7D": "[(168,6)-(192,0)]"
              }
            }
          },
          {
            "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Frevisions",
            "@type": [
              "apiContract:EndPoint",
              "doc:DomainElement"
            ],
            "apiContract:path": [
              {
                "@value": "/files/{fileId}/revisions"
              }
            ],
            "apiContract:supportedOperation": [
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Frevisions/get",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "get"
                  }
                ],
                "smaps": {
                  "lexical": {
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Frevisions/get": "[(193,6)-(194,0)]"
                  }
                }
              }
            ],
            "apiContract:parameter": [
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Frevisions/parameter/fileId",
                "@type": [
                  "apiContract:Parameter",
                  "doc:DomainElement"
                ],
                "core:name": [
                  {
                    "@value": "fileId"
                  }
                ],
                "apiContract:paramName": [
                  {
                    "@value": "fileId"
                  }
                ],
                "apiContract:required": [
                  {
                    "@value": true
                  }
                ],
                "apiContract:binding": [
                  {
                    "@value": "path"
                  }
                ],
                "raml-shapes:schema": [
                  {
                    "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Frevisions/parameter/fileId/scalar/fileId",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "fileId"
                      }
                    ]
                  }
                ],
                "smaps": {
                  "synthesized-field": {
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Frevisions/parameter/fileId": "true"
                  }
                }
              }
            ],
            "smaps": {
              "parent-end-point": {
                "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Frevisions": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/demo-api.raml#/web-api/end-points/%2Ffiles%2F%7BfileId%7D"
              },
              "lexical": {
                "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Frevisions": "[(192,4)-(208,0)]"
              }
            }
          },
          {
            "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Frevisions%2F%7BrevisionId%7D",
            "@type": [
              "apiContract:EndPoint",
              "doc:DomainElement"
            ],
            "apiContract:path": [
              {
                "@value": "/files/{fileId}/revisions/{revisionId}"
              }
            ],
            "apiContract:supportedOperation": [
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Frevisions%2F%7BrevisionId%7D/get",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "get"
                  }
                ],
                "smaps": {
                  "lexical": {
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Frevisions%2F%7BrevisionId%7D/get": "[(200,8)-(202,0)]"
                  }
                }
              },
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Frevisions%2F%7BrevisionId%7D/put",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "put"
                  }
                ],
                "smaps": {
                  "lexical": {
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Frevisions%2F%7BrevisionId%7D/put": "[(202,8)-(204,0)]"
                  }
                }
              },
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Frevisions%2F%7BrevisionId%7D/delete",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "delete"
                  }
                ],
                "smaps": {
                  "lexical": {
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Frevisions%2F%7BrevisionId%7D/delete": "[(204,8)-(206,0)]"
                  }
                }
              },
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Frevisions%2F%7BrevisionId%7D/patch",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "patch"
                  }
                ],
                "smaps": {
                  "lexical": {
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Frevisions%2F%7BrevisionId%7D/patch": "[(206,8)-(208,0)]"
                  }
                }
              }
            ],
            "apiContract:parameter": [
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Frevisions%2F%7BrevisionId%7D/parameter/fileId",
                "@type": [
                  "apiContract:Parameter",
                  "doc:DomainElement"
                ],
                "core:name": [
                  {
                    "@value": "fileId"
                  }
                ],
                "apiContract:paramName": [
                  {
                    "@value": "fileId"
                  }
                ],
                "apiContract:required": [
                  {
                    "@value": true
                  }
                ],
                "apiContract:binding": [
                  {
                    "@value": "path"
                  }
                ],
                "raml-shapes:schema": [
                  {
                    "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Frevisions%2F%7BrevisionId%7D/parameter/fileId/scalar/fileId",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "fileId"
                      }
                    ]
                  }
                ],
                "smaps": {
                  "synthesized-field": {
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Frevisions%2F%7BrevisionId%7D/parameter/fileId": "true"
                  }
                }
              },
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Frevisions%2F%7BrevisionId%7D/parameter/revisionId",
                "@type": [
                  "apiContract:Parameter",
                  "doc:DomainElement"
                ],
                "core:name": [
                  {
                    "@value": "revisionId"
                  }
                ],
                "apiContract:paramName": [
                  {
                    "@value": "revisionId"
                  }
                ],
                "core:description": [
                  {
                    "@value": "The ID of the revision."
                  }
                ],
                "apiContract:required": [
                  {
                    "@value": true
                  }
                ],
                "apiContract:binding": [
                  {
                    "@value": "path"
                  }
                ],
                "raml-shapes:schema": [
                  {
                    "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Frevisions%2F%7BrevisionId%7D/parameter/revisionId/scalar/schema",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "schema"
                      }
                    ],
                    "core:description": [
                      {
                        "@value": "The ID of the revision."
                      }
                    ],
                    "shacl:defaultValue": [
                      {
                        "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Frevisions%2F%7BrevisionId%7D/parameter/revisionId/scalar/schema/default/scalar_1",
                        "@type": [
                          "data:Scalar",
                          "data:Node",
                          "doc:DomainElement"
                        ],
                        "data:value": [
                          {
                            "@value": "defaultRevision"
                          }
                        ],
                        "shacl:datatype": [
                          {
                            "@id": "http://www.w3.org/2001/XMLSchema#string"
                          }
                        ],
                        "core:name": [
                          {
                            "@value": "scalar_1"
                          }
                        ],
                        "smaps": {
                          "lexical": {
                            "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Frevisions%2F%7BrevisionId%7D/parameter/revisionId/scalar/schema/default/scalar_1": "[(199,21)-(199,36)]"
                          }
                        }
                      }
                    ],
                    "shacl:defaultValueStr": [
                      {
                        "@value": "defaultRevision"
                      }
                    ],
                    "smaps": {
                      "type-property-lexical-info": {
                        "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Frevisions%2F%7BrevisionId%7D/parameter/revisionId/scalar/schema": "[(197,12)-(197,16)]"
                      },
                      "lexical": {
                        "shacl:defaultValueStr": "[(199,12)-(200,0)]",
                        "core:description": "[(198,12)-(199,0)]",
                        "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Frevisions%2F%7BrevisionId%7D/parameter/revisionId/scalar/schema": "[(196,10)-(200,0)]",
                        "shacl:datatype": "[(197,12)-(198,0)]",
                        "shacl:defaultValue": "[(199,12)-(200,0)]"
                      }
                    }
                  }
                ],
                "smaps": {
                  "lexical": {
                    "raml-shapes:schema": "[(196,10)-(200,0)]",
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Frevisions%2F%7BrevisionId%7D/parameter/revisionId": "[(196,10)-(200,0)]",
                    "core:description": "[(198,12)-(199,0)]"
                  }
                }
              }
            ],
            "smaps": {
              "parent-end-point": {
                "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Frevisions%2F%7BrevisionId%7D": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/demo-api.raml#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Frevisions"
              },
              "lexical": {
                "apiContract:parameter": "[(195,22)-(200,0)]",
                "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Frevisions%2F%7BrevisionId%7D": "[(194,6)-(208,0)]"
              }
            }
          },
          {
            "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments",
            "@type": [
              "apiContract:EndPoint",
              "doc:DomainElement"
            ],
            "apiContract:path": [
              {
                "@value": "/files/{fileId}/comments"
              }
            ],
            "apiContract:supportedOperation": [
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments/get",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "get"
                  }
                ],
                "smaps": {
                  "lexical": {
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments/get": "[(209,6)-(211,0)]"
                  }
                }
              },
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments/post",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "post"
                  }
                ],
                "core:description": [
                  {
                    "@value": "Creates a new comment on the given file."
                  }
                ],
                "smaps": {
                  "lexical": {
                    "core:description": "[(212,8)-(213,0)]",
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments/post": "[(211,6)-(213,0)]"
                  }
                }
              }
            ],
            "apiContract:parameter": [
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments/parameter/fileId",
                "@type": [
                  "apiContract:Parameter",
                  "doc:DomainElement"
                ],
                "core:name": [
                  {
                    "@value": "fileId"
                  }
                ],
                "apiContract:paramName": [
                  {
                    "@value": "fileId"
                  }
                ],
                "apiContract:required": [
                  {
                    "@value": true
                  }
                ],
                "apiContract:binding": [
                  {
                    "@value": "path"
                  }
                ],
                "raml-shapes:schema": [
                  {
                    "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments/parameter/fileId/scalar/fileId",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "fileId"
                      }
                    ]
                  }
                ],
                "smaps": {
                  "synthesized-field": {
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments/parameter/fileId": "true"
                  }
                }
              }
            ],
            "smaps": {
              "parent-end-point": {
                "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/demo-api.raml#/web-api/end-points/%2Ffiles%2F%7BfileId%7D"
              },
              "lexical": {
                "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments": "[(208,4)-(250,0)]"
              }
            }
          },
          {
            "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D",
            "@type": [
              "apiContract:EndPoint",
              "doc:DomainElement"
            ],
            "apiContract:path": [
              {
                "@value": "/files/{fileId}/comments/{commentId}"
              }
            ],
            "apiContract:supportedOperation": [
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D/get",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "get"
                  }
                ],
                "core:description": [
                  {
                    "@value": "Gets a comment by ID."
                  }
                ],
                "smaps": {
                  "lexical": {
                    "core:description": "[(219,10)-(221,0)]",
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D/get": "[(218,8)-(221,0)]"
                  }
                }
              },
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D/put",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "put"
                  }
                ],
                "smaps": {
                  "lexical": {
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D/put": "[(221,8)-(223,0)]"
                  }
                }
              },
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D/delete",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "delete"
                  }
                ],
                "core:description": [
                  {
                    "@value": "Deletes a comment."
                  }
                ],
                "smaps": {
                  "lexical": {
                    "core:description": "[(224,10)-(226,0)]",
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D/delete": "[(223,8)-(226,0)]"
                  }
                }
              },
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D/patch",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "patch"
                  }
                ],
                "smaps": {
                  "lexical": {
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D/patch": "[(226,8)-(228,0)]"
                  }
                }
              }
            ],
            "apiContract:parameter": [
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D/parameter/fileId",
                "@type": [
                  "apiContract:Parameter",
                  "doc:DomainElement"
                ],
                "core:name": [
                  {
                    "@value": "fileId"
                  }
                ],
                "apiContract:paramName": [
                  {
                    "@value": "fileId"
                  }
                ],
                "apiContract:required": [
                  {
                    "@value": true
                  }
                ],
                "apiContract:binding": [
                  {
                    "@value": "path"
                  }
                ],
                "raml-shapes:schema": [
                  {
                    "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D/parameter/fileId/scalar/fileId",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "fileId"
                      }
                    ]
                  }
                ],
                "smaps": {
                  "synthesized-field": {
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D/parameter/fileId": "true"
                  }
                }
              },
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D/parameter/commentId",
                "@type": [
                  "apiContract:Parameter",
                  "doc:DomainElement"
                ],
                "core:name": [
                  {
                    "@value": "commentId"
                  }
                ],
                "apiContract:paramName": [
                  {
                    "@value": "commentId"
                  }
                ],
                "apiContract:required": [
                  {
                    "@value": true
                  }
                ],
                "apiContract:binding": [
                  {
                    "@value": "path"
                  }
                ],
                "raml-shapes:schema": [
                  {
                    "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D/parameter/commentId/scalar/schema",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "schema"
                      }
                    ],
                    "apiContract:examples": [
                      {
                        "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D/parameter/commentId/scalar/schema/example/default-example",
                        "@type": [
                          "apiContract:Example",
                          "doc:DomainElement"
                        ],
                        "doc:strict": [
                          {
                            "@value": true
                          }
                        ],
                        "doc:structuredValue": [
                          {
                            "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D/parameter/commentId/scalar/schema/example/default-example/scalar_1",
                            "@type": [
                              "data:Scalar",
                              "data:Node",
                              "doc:DomainElement"
                            ],
                            "data:value": [
                              {
                                "@value": "commant-id"
                              }
                            ],
                            "shacl:datatype": [
                              {
                                "@id": "http://www.w3.org/2001/XMLSchema#string"
                              }
                            ],
                            "core:name": [
                              {
                                "@value": "scalar_1"
                              }
                            ],
                            "smaps": {
                              "lexical": {
                                "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D/parameter/commentId/scalar/schema/example/default-example/scalar_1": "[(217,21)-(217,31)]"
                              }
                            }
                          }
                        ],
                        "doc:raw": [
                          {
                            "@value": "commant-id"
                          }
                        ],
                        "smaps": {
                          "synthesized-field": {
                            "doc:strict": "true"
                          },
                          "lexical": {
                            "doc:raw": "[(217,21)-(217,31)]",
                            "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D/parameter/commentId/scalar/schema/example/default-example": "[(217,21)-(217,31)]",
                            "doc:structuredValue": "[(217,21)-(217,31)]"
                          },
                          "tracked-element": {
                            "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D/parameter/commentId/scalar/schema/example/default-example": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/demo-api.raml#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D/parameter/commentId"
                          }
                        }
                      }
                    ],
                    "smaps": {
                      "type-property-lexical-info": {
                        "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D/parameter/commentId/scalar/schema": "[(216,12)-(216,16)]"
                      },
                      "lexical": {
                        "shacl:datatype": "[(216,12)-(217,0)]",
                        "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D/parameter/commentId/scalar/schema": "[(215,10)-(218,0)]"
                      }
                    }
                  }
                ],
                "smaps": {
                  "lexical": {
                    "raml-shapes:schema": "[(215,10)-(218,0)]",
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D/parameter/commentId": "[(215,10)-(218,0)]"
                  }
                }
              }
            ],
            "smaps": {
              "parent-end-point": {
                "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/demo-api.raml#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments"
              },
              "lexical": {
                "apiContract:parameter": "[(214,22)-(218,0)]",
                "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D": "[(213,6)-(250,0)]"
              }
            }
          },
          {
            "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D%2Freplies",
            "@type": [
              "apiContract:EndPoint",
              "doc:DomainElement"
            ],
            "apiContract:path": [
              {
                "@value": "/files/{fileId}/comments/{commentId}/replies"
              }
            ],
            "apiContract:supportedOperation": [
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D%2Freplies/get",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "get"
                  }
                ],
                "smaps": {
                  "lexical": {
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D%2Freplies/get": "[(229,10)-(231,0)]"
                  }
                }
              },
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D%2Freplies/post",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "post"
                  }
                ],
                "smaps": {
                  "lexical": {
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D%2Freplies/post": "[(231,10)-(233,0)]"
                  }
                }
              }
            ],
            "apiContract:parameter": [
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D%2Freplies/parameter/fileId",
                "@type": [
                  "apiContract:Parameter",
                  "doc:DomainElement"
                ],
                "core:name": [
                  {
                    "@value": "fileId"
                  }
                ],
                "apiContract:paramName": [
                  {
                    "@value": "fileId"
                  }
                ],
                "apiContract:required": [
                  {
                    "@value": true
                  }
                ],
                "apiContract:binding": [
                  {
                    "@value": "path"
                  }
                ],
                "raml-shapes:schema": [
                  {
                    "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D%2Freplies/parameter/fileId/scalar/fileId",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "fileId"
                      }
                    ]
                  }
                ],
                "smaps": {
                  "synthesized-field": {
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D%2Freplies/parameter/fileId": "true"
                  }
                }
              },
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D%2Freplies/parameter/commentId",
                "@type": [
                  "apiContract:Parameter",
                  "doc:DomainElement"
                ],
                "core:name": [
                  {
                    "@value": "commentId"
                  }
                ],
                "apiContract:paramName": [
                  {
                    "@value": "commentId"
                  }
                ],
                "apiContract:required": [
                  {
                    "@value": true
                  }
                ],
                "apiContract:binding": [
                  {
                    "@value": "path"
                  }
                ],
                "raml-shapes:schema": [
                  {
                    "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D%2Freplies/parameter/commentId/scalar/schema",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "schema"
                      }
                    ],
                    "apiContract:examples": [
                      {
                        "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D/parameter/commentId/scalar/schema/example/default-example",
                        "@type": [
                          "apiContract:Example",
                          "doc:DomainElement"
                        ],
                        "doc:strict": [
                          {
                            "@value": true
                          }
                        ],
                        "doc:structuredValue": [
                          {
                            "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D/parameter/commentId/scalar/schema/example/default-example/scalar_1",
                            "@type": [
                              "data:Scalar",
                              "data:Node",
                              "doc:DomainElement"
                            ],
                            "data:value": [
                              {
                                "@value": "commant-id"
                              }
                            ],
                            "shacl:datatype": [
                              {
                                "@id": "http://www.w3.org/2001/XMLSchema#string"
                              }
                            ],
                            "core:name": [
                              {
                                "@value": "scalar_1"
                              }
                            ],
                            "smaps": {
                              "lexical": {
                                "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D/parameter/commentId/scalar/schema/example/default-example/scalar_1": "[(217,21)-(217,31)]"
                              }
                            }
                          }
                        ],
                        "doc:raw": [
                          {
                            "@value": "commant-id"
                          }
                        ],
                        "smaps": {
                          "synthesized-field": {
                            "doc:strict": "true"
                          },
                          "lexical": {
                            "doc:raw": "[(217,21)-(217,31)]",
                            "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D/parameter/commentId/scalar/schema/example/default-example": "[(217,21)-(217,31)]",
                            "doc:structuredValue": "[(217,21)-(217,31)]"
                          },
                          "tracked-element": {
                            "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D/parameter/commentId/scalar/schema/example/default-example": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/demo-api.raml#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D/parameter/commentId"
                          }
                        }
                      }
                    ],
                    "smaps": {
                      "type-property-lexical-info": {
                        "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D%2Freplies/parameter/commentId/scalar/schema": "[(216,12)-(216,16)]"
                      },
                      "lexical": {
                        "shacl:datatype": "[(216,12)-(217,0)]",
                        "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D%2Freplies/parameter/commentId/scalar/schema": "[(215,10)-(218,0)]"
                      }
                    }
                  }
                ],
                "smaps": {
                  "synthesized-field": {
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D%2Freplies/parameter/commentId": "true"
                  },
                  "lexical": {
                    "raml-shapes:schema": "[(215,10)-(218,0)]",
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D%2Freplies/parameter/commentId": "[(215,10)-(218,0)]"
                  }
                }
              }
            ],
            "smaps": {
              "parent-end-point": {
                "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D%2Freplies": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/demo-api.raml#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D"
              },
              "lexical": {
                "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D%2Freplies": "[(228,8)-(250,0)]"
              }
            }
          },
          {
            "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D%2Freplies%2F%7BreplyId%7D",
            "@type": [
              "apiContract:EndPoint",
              "doc:DomainElement"
            ],
            "apiContract:path": [
              {
                "@value": "/files/{fileId}/comments/{commentId}/replies/{replyId}"
              }
            ],
            "apiContract:supportedOperation": [
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D%2Freplies%2F%7BreplyId%7D/get",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "get"
                  }
                ],
                "core:description": [
                  {
                    "@value": "Gets a reply."
                  }
                ],
                "smaps": {
                  "lexical": {
                    "core:description": "[(239,14)-(241,0)]",
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D%2Freplies%2F%7BreplyId%7D/get": "[(238,12)-(241,0)]"
                  }
                }
              },
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D%2Freplies%2F%7BreplyId%7D/put",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "put"
                  }
                ],
                "core:description": [
                  {
                    "@value": "Updates an existing reply."
                  }
                ],
                "smaps": {
                  "lexical": {
                    "core:description": "[(242,14)-(244,0)]",
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D%2Freplies%2F%7BreplyId%7D/put": "[(241,12)-(244,0)]"
                  }
                }
              },
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D%2Freplies%2F%7BreplyId%7D/delete",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "delete"
                  }
                ],
                "core:description": [
                  {
                    "@value": "Deletes a reply."
                  }
                ],
                "smaps": {
                  "lexical": {
                    "core:description": "[(245,14)-(247,0)]",
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D%2Freplies%2F%7BreplyId%7D/delete": "[(244,12)-(247,0)]"
                  }
                }
              },
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D%2Freplies%2F%7BreplyId%7D/patch",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "patch"
                  }
                ],
                "core:description": [
                  {
                    "@value": "Updates an existing reply. This method supports patch semantics."
                  }
                ],
                "smaps": {
                  "lexical": {
                    "core:description": "[(248,14)-(250,0)]",
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D%2Freplies%2F%7BreplyId%7D/patch": "[(247,12)-(250,0)]"
                  }
                }
              }
            ],
            "apiContract:parameter": [
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D%2Freplies%2F%7BreplyId%7D/parameter/fileId",
                "@type": [
                  "apiContract:Parameter",
                  "doc:DomainElement"
                ],
                "core:name": [
                  {
                    "@value": "fileId"
                  }
                ],
                "apiContract:paramName": [
                  {
                    "@value": "fileId"
                  }
                ],
                "apiContract:required": [
                  {
                    "@value": true
                  }
                ],
                "apiContract:binding": [
                  {
                    "@value": "path"
                  }
                ],
                "raml-shapes:schema": [
                  {
                    "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D%2Freplies%2F%7BreplyId%7D/parameter/fileId/scalar/fileId",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "fileId"
                      }
                    ]
                  }
                ],
                "smaps": {
                  "synthesized-field": {
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D%2Freplies%2F%7BreplyId%7D/parameter/fileId": "true"
                  }
                }
              },
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D%2Freplies%2F%7BreplyId%7D/parameter/commentId",
                "@type": [
                  "apiContract:Parameter",
                  "doc:DomainElement"
                ],
                "core:name": [
                  {
                    "@value": "commentId"
                  }
                ],
                "apiContract:paramName": [
                  {
                    "@value": "commentId"
                  }
                ],
                "apiContract:required": [
                  {
                    "@value": true
                  }
                ],
                "apiContract:binding": [
                  {
                    "@value": "path"
                  }
                ],
                "raml-shapes:schema": [
                  {
                    "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D%2Freplies%2F%7BreplyId%7D/parameter/commentId/scalar/schema",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "schema"
                      }
                    ],
                    "apiContract:examples": [
                      {
                        "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D/parameter/commentId/scalar/schema/example/default-example",
                        "@type": [
                          "apiContract:Example",
                          "doc:DomainElement"
                        ],
                        "doc:strict": [
                          {
                            "@value": true
                          }
                        ],
                        "doc:structuredValue": [
                          {
                            "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D/parameter/commentId/scalar/schema/example/default-example/scalar_1",
                            "@type": [
                              "data:Scalar",
                              "data:Node",
                              "doc:DomainElement"
                            ],
                            "data:value": [
                              {
                                "@value": "commant-id"
                              }
                            ],
                            "shacl:datatype": [
                              {
                                "@id": "http://www.w3.org/2001/XMLSchema#string"
                              }
                            ],
                            "core:name": [
                              {
                                "@value": "scalar_1"
                              }
                            ],
                            "smaps": {
                              "lexical": {
                                "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D/parameter/commentId/scalar/schema/example/default-example/scalar_1": "[(217,21)-(217,31)]"
                              }
                            }
                          }
                        ],
                        "doc:raw": [
                          {
                            "@value": "commant-id"
                          }
                        ],
                        "smaps": {
                          "synthesized-field": {
                            "doc:strict": "true"
                          },
                          "lexical": {
                            "doc:raw": "[(217,21)-(217,31)]",
                            "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D/parameter/commentId/scalar/schema/example/default-example": "[(217,21)-(217,31)]",
                            "doc:structuredValue": "[(217,21)-(217,31)]"
                          },
                          "tracked-element": {
                            "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D/parameter/commentId/scalar/schema/example/default-example": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/demo-api.raml#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D/parameter/commentId"
                          }
                        }
                      }
                    ],
                    "smaps": {
                      "type-property-lexical-info": {
                        "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D%2Freplies%2F%7BreplyId%7D/parameter/commentId/scalar/schema": "[(216,12)-(216,16)]"
                      },
                      "lexical": {
                        "shacl:datatype": "[(216,12)-(217,0)]",
                        "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D%2Freplies%2F%7BreplyId%7D/parameter/commentId/scalar/schema": "[(215,10)-(218,0)]"
                      }
                    }
                  }
                ],
                "smaps": {
                  "synthesized-field": {
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D%2Freplies%2F%7BreplyId%7D/parameter/commentId": "true"
                  },
                  "lexical": {
                    "raml-shapes:schema": "[(215,10)-(218,0)]",
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D%2Freplies%2F%7BreplyId%7D/parameter/commentId": "[(215,10)-(218,0)]"
                  }
                }
              },
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D%2Freplies%2F%7BreplyId%7D/parameter/replyId",
                "@type": [
                  "apiContract:Parameter",
                  "doc:DomainElement"
                ],
                "core:name": [
                  {
                    "@value": "replyId"
                  }
                ],
                "apiContract:paramName": [
                  {
                    "@value": "replyId"
                  }
                ],
                "core:description": [
                  {
                    "@value": "The ID of the reply."
                  }
                ],
                "apiContract:required": [
                  {
                    "@value": true
                  }
                ],
                "apiContract:binding": [
                  {
                    "@value": "path"
                  }
                ],
                "raml-shapes:schema": [
                  {
                    "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D%2Freplies%2F%7BreplyId%7D/parameter/replyId/scalar/schema",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "schema"
                      }
                    ],
                    "core:description": [
                      {
                        "@value": "The ID of the reply."
                      }
                    ],
                    "smaps": {
                      "type-property-lexical-info": {
                        "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D%2Freplies%2F%7BreplyId%7D/parameter/replyId/scalar/schema": "[(236,16)-(236,20)]"
                      },
                      "lexical": {
                        "core:description": "[(237,16)-(238,0)]",
                        "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D%2Freplies%2F%7BreplyId%7D/parameter/replyId/scalar/schema": "[(235,14)-(238,0)]",
                        "shacl:datatype": "[(236,16)-(237,0)]"
                      }
                    }
                  }
                ],
                "smaps": {
                  "lexical": {
                    "raml-shapes:schema": "[(235,14)-(238,0)]",
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D%2Freplies%2F%7BreplyId%7D/parameter/replyId": "[(235,14)-(238,0)]",
                    "core:description": "[(237,16)-(238,0)]"
                  }
                }
              }
            ],
            "smaps": {
              "parent-end-point": {
                "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D%2Freplies%2F%7BreplyId%7D": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/demo-api.raml#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D%2Freplies"
              },
              "lexical": {
                "apiContract:parameter": "[(234,26)-(238,0)]",
                "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fcomments%2F%7BcommentId%7D%2Freplies%2F%7BreplyId%7D": "[(233,10)-(250,0)]"
              }
            }
          },
          {
            "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Frealtime",
            "@type": [
              "apiContract:EndPoint",
              "doc:DomainElement"
            ],
            "apiContract:path": [
              {
                "@value": "/files/{fileId}/realtime"
              }
            ],
            "apiContract:supportedOperation": [
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Frealtime/get",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "get"
                  }
                ],
                "core:description": [
                  {
                    "@value": "Exports the contents of the Realtime API data model associated with this file as JSON."
                  }
                ],
                "smaps": {
                  "lexical": {
                    "core:description": "[(253,8)-(255,0)]",
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Frealtime/get": "[(252,6)-(255,0)]"
                  }
                }
              },
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Frealtime/put",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "put"
                  }
                ],
                "core:name": [
                  {
                    "@value": "update"
                  }
                ],
                "core:description": [
                  {
                    "@value": "Overwrites the Realtime API data model associated with this file with the provided JSON data model.\n\nThis method supports an /upload URI and accepts uploaded media with the following characteristics:\n\n- **Maximum file size**: 10MB\n- **Accepted Media MIME** types: */*\n"
                  }
                ],
                "smaps": {
                  "lexical": {
                    "core:description": "[(257,8)-(265,0)]",
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Frealtime/put": "[(255,6)-(265,0)]",
                    "core:name": "[(256,8)-(257,0)]"
                  }
                }
              }
            ],
            "apiContract:parameter": [
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Frealtime/parameter/fileId",
                "@type": [
                  "apiContract:Parameter",
                  "doc:DomainElement"
                ],
                "core:name": [
                  {
                    "@value": "fileId"
                  }
                ],
                "apiContract:paramName": [
                  {
                    "@value": "fileId"
                  }
                ],
                "apiContract:required": [
                  {
                    "@value": true
                  }
                ],
                "apiContract:binding": [
                  {
                    "@value": "path"
                  }
                ],
                "raml-shapes:schema": [
                  {
                    "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Frealtime/parameter/fileId/scalar/fileId",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "fileId"
                      }
                    ]
                  }
                ],
                "smaps": {
                  "synthesized-field": {
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Frealtime/parameter/fileId": "true"
                  }
                }
              }
            ],
            "smaps": {
              "parent-end-point": {
                "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Frealtime": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/demo-api.raml#/web-api/end-points/%2Ffiles%2F%7BfileId%7D"
              },
              "lexical": {
                "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Frealtime": "[(250,4)-(265,0)]"
              }
            }
          },
          {
            "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fproperties",
            "@type": [
              "apiContract:EndPoint",
              "doc:DomainElement"
            ],
            "apiContract:path": [
              {
                "@value": "/files/{fileId}/properties"
              }
            ],
            "apiContract:supportedOperation": [
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fproperties/get",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "get"
                  }
                ],
                "core:description": [
                  {
                    "@value": "Lists a file's properties."
                  }
                ],
                "smaps": {
                  "lexical": {
                    "core:description": "[(267,8)-(269,0)]",
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fproperties/get": "[(266,6)-(269,0)]"
                  }
                }
              },
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fproperties/post",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "post"
                  }
                ],
                "core:description": [
                  {
                    "@value": "Adds a property to a file."
                  }
                ],
                "smaps": {
                  "lexical": {
                    "core:description": "[(270,8)-(272,0)]",
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fproperties/post": "[(269,6)-(272,0)]"
                  }
                }
              }
            ],
            "apiContract:parameter": [
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fproperties/parameter/fileId",
                "@type": [
                  "apiContract:Parameter",
                  "doc:DomainElement"
                ],
                "core:name": [
                  {
                    "@value": "fileId"
                  }
                ],
                "apiContract:paramName": [
                  {
                    "@value": "fileId"
                  }
                ],
                "apiContract:required": [
                  {
                    "@value": true
                  }
                ],
                "apiContract:binding": [
                  {
                    "@value": "path"
                  }
                ],
                "raml-shapes:schema": [
                  {
                    "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fproperties/parameter/fileId/scalar/fileId",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "fileId"
                      }
                    ]
                  }
                ],
                "smaps": {
                  "synthesized-field": {
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fproperties/parameter/fileId": "true"
                  }
                }
              }
            ],
            "smaps": {
              "parent-end-point": {
                "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fproperties": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/demo-api.raml#/web-api/end-points/%2Ffiles%2F%7BfileId%7D"
              },
              "lexical": {
                "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fproperties": "[(265,4)-(285,0)]"
              }
            }
          },
          {
            "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fproperties%2F%7BpropertyKey%7D",
            "@type": [
              "apiContract:EndPoint",
              "doc:DomainElement"
            ],
            "apiContract:path": [
              {
                "@value": "/files/{fileId}/properties/{propertyKey}"
              }
            ],
            "apiContract:supportedOperation": [
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fproperties%2F%7BpropertyKey%7D/get",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "get"
                  }
                ],
                "smaps": {
                  "lexical": {
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fproperties%2F%7BpropertyKey%7D/get": "[(277,8)-(279,0)]"
                  }
                }
              },
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fproperties%2F%7BpropertyKey%7D/put",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "put"
                  }
                ],
                "smaps": {
                  "lexical": {
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fproperties%2F%7BpropertyKey%7D/put": "[(279,8)-(281,0)]"
                  }
                }
              },
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fproperties%2F%7BpropertyKey%7D/delete",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "delete"
                  }
                ],
                "smaps": {
                  "lexical": {
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fproperties%2F%7BpropertyKey%7D/delete": "[(281,8)-(283,0)]"
                  }
                }
              },
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fproperties%2F%7BpropertyKey%7D/patch",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "patch"
                  }
                ],
                "smaps": {
                  "lexical": {
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fproperties%2F%7BpropertyKey%7D/patch": "[(283,8)-(285,0)]"
                  }
                }
              }
            ],
            "apiContract:parameter": [
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fproperties%2F%7BpropertyKey%7D/parameter/fileId",
                "@type": [
                  "apiContract:Parameter",
                  "doc:DomainElement"
                ],
                "core:name": [
                  {
                    "@value": "fileId"
                  }
                ],
                "apiContract:paramName": [
                  {
                    "@value": "fileId"
                  }
                ],
                "apiContract:required": [
                  {
                    "@value": true
                  }
                ],
                "apiContract:binding": [
                  {
                    "@value": "path"
                  }
                ],
                "raml-shapes:schema": [
                  {
                    "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fproperties%2F%7BpropertyKey%7D/parameter/fileId/scalar/fileId",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "fileId"
                      }
                    ]
                  }
                ],
                "smaps": {
                  "synthesized-field": {
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fproperties%2F%7BpropertyKey%7D/parameter/fileId": "true"
                  }
                }
              },
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fproperties%2F%7BpropertyKey%7D/parameter/propertyKey",
                "@type": [
                  "apiContract:Parameter",
                  "doc:DomainElement"
                ],
                "core:name": [
                  {
                    "@value": "propertyKey"
                  }
                ],
                "apiContract:paramName": [
                  {
                    "@value": "propertyKey"
                  }
                ],
                "core:description": [
                  {
                    "@value": "The key of the property."
                  }
                ],
                "apiContract:required": [
                  {
                    "@value": true
                  }
                ],
                "apiContract:binding": [
                  {
                    "@value": "path"
                  }
                ],
                "raml-shapes:schema": [
                  {
                    "@id": "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fproperties%2F%7BpropertyKey%7D/parameter/propertyKey/scalar/schema",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "schema"
                      }
                    ],
                    "core:description": [
                      {
                        "@value": "The key of the property."
                      }
                    ],
                    "smaps": {
                      "type-property-lexical-info": {
                        "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fproperties%2F%7BpropertyKey%7D/parameter/propertyKey/scalar/schema": "[(275,12)-(275,16)]"
                      },
                      "lexical": {
                        "core:description": "[(276,12)-(277,0)]",
                        "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fproperties%2F%7BpropertyKey%7D/parameter/propertyKey/scalar/schema": "[(274,10)-(277,0)]",
                        "shacl:datatype": "[(275,12)-(276,0)]"
                      }
                    }
                  }
                ],
                "smaps": {
                  "lexical": {
                    "raml-shapes:schema": "[(274,10)-(277,0)]",
                    "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fproperties%2F%7BpropertyKey%7D/parameter/propertyKey": "[(274,10)-(277,0)]",
                    "core:description": "[(276,12)-(277,0)]"
                  }
                }
              }
            ],
            "smaps": {
              "parent-end-point": {
                "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fproperties%2F%7BpropertyKey%7D": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/demo-api.raml#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fproperties"
              },
              "lexical": {
                "apiContract:parameter": "[(273,22)-(277,0)]",
                "#/web-api/end-points/%2Ffiles%2F%7BfileId%7D%2Fproperties%2F%7BpropertyKey%7D": "[(272,6)-(285,0)]"
              }
            }
          },
          {
            "@id": "#/web-api/end-points/%2Ffiles%2Ftrash",
            "@type": [
              "apiContract:EndPoint",
              "doc:DomainElement"
            ],
            "apiContract:path": [
              {
                "@value": "/files/trash"
              }
            ],
            "apiContract:supportedOperation": [
              {
                "@id": "#/web-api/end-points/%2Ffiles%2Ftrash/delete",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "delete"
                  }
                ],
                "core:description": [
                  {
                    "@value": "Permanently deletes all of the user's trashed files."
                  }
                ],
                "smaps": {
                  "lexical": {
                    "core:description": "[(287,6)-(288,0)]",
                    "#/web-api/end-points/%2Ffiles%2Ftrash/delete": "[(286,4)-(288,0)]"
                  }
                }
              }
            ],
            "smaps": {
              "parent-end-point": {
                "#/web-api/end-points/%2Ffiles%2Ftrash": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/demo-api.raml#/web-api/end-points/%2Ffiles"
              },
              "lexical": {
                "#/web-api/end-points/%2Ffiles%2Ftrash": "[(285,2)-(288,0)]"
              }
            }
          },
          {
            "@id": "#/web-api/end-points/%2Ffiles%2F%7BfolderId%7D%2Fchildren",
            "@type": [
              "apiContract:EndPoint",
              "doc:DomainElement"
            ],
            "apiContract:path": [
              {
                "@value": "/files/{folderId}/children"
              }
            ],
            "apiContract:supportedOperation": [
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfolderId%7D%2Fchildren/post",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "post"
                  }
                ],
                "core:description": [
                  {
                    "@value": "Inserts a file into a folder."
                  }
                ],
                "smaps": {
                  "lexical": {
                    "core:description": "[(290,6)-(292,0)]",
                    "#/web-api/end-points/%2Ffiles%2F%7BfolderId%7D%2Fchildren/post": "[(289,4)-(292,0)]"
                  }
                }
              },
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfolderId%7D%2Fchildren/get",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "get"
                  }
                ],
                "core:description": [
                  {
                    "@value": "Lists a folder's children. To list all children of the root folder, use the alias root for the folderId value."
                  }
                ],
                "smaps": {
                  "lexical": {
                    "core:description": "[(293,6)-(295,0)]",
                    "#/web-api/end-points/%2Ffiles%2F%7BfolderId%7D%2Fchildren/get": "[(292,4)-(295,0)]"
                  }
                }
              }
            ],
            "apiContract:parameter": [
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfolderId%7D%2Fchildren/parameter/folderId",
                "@type": [
                  "apiContract:Parameter",
                  "doc:DomainElement"
                ],
                "core:name": [
                  {
                    "@value": "folderId"
                  }
                ],
                "apiContract:paramName": [
                  {
                    "@value": "folderId"
                  }
                ],
                "apiContract:required": [
                  {
                    "@value": true
                  }
                ],
                "apiContract:binding": [
                  {
                    "@value": "path"
                  }
                ],
                "raml-shapes:schema": [
                  {
                    "@id": "#/web-api/end-points/%2Ffiles%2F%7BfolderId%7D%2Fchildren/parameter/folderId/scalar/folderId",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "folderId"
                      }
                    ]
                  }
                ],
                "smaps": {
                  "synthesized-field": {
                    "#/web-api/end-points/%2Ffiles%2F%7BfolderId%7D%2Fchildren/parameter/folderId": "true"
                  }
                }
              }
            ],
            "smaps": {
              "parent-end-point": {
                "#/web-api/end-points/%2Ffiles%2F%7BfolderId%7D%2Fchildren": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/demo-api.raml#/web-api/end-points/%2Ffiles"
              },
              "lexical": {
                "#/web-api/end-points/%2Ffiles%2F%7BfolderId%7D%2Fchildren": "[(288,2)-(300,0)]"
              }
            }
          },
          {
            "@id": "#/web-api/end-points/%2Ffiles%2F%7BfolderId%7D%2Fchildren%2F%7BchildId%7D",
            "@type": [
              "apiContract:EndPoint",
              "doc:DomainElement"
            ],
            "apiContract:path": [
              {
                "@value": "/files/{folderId}/children/{childId}"
              }
            ],
            "apiContract:supportedOperation": [
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfolderId%7D%2Fchildren%2F%7BchildId%7D/delete",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "delete"
                  }
                ],
                "core:description": [
                  {
                    "@value": "Removes a child from a folder."
                  }
                ],
                "smaps": {
                  "lexical": {
                    "core:description": "[(297,8)-(298,0)]",
                    "#/web-api/end-points/%2Ffiles%2F%7BfolderId%7D%2Fchildren%2F%7BchildId%7D/delete": "[(296,6)-(298,0)]"
                  }
                }
              },
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfolderId%7D%2Fchildren%2F%7BchildId%7D/get",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "get"
                  }
                ],
                "core:description": [
                  {
                    "@value": "Gets a specific child reference."
                  }
                ],
                "smaps": {
                  "lexical": {
                    "core:description": "[(299,8)-(300,0)]",
                    "#/web-api/end-points/%2Ffiles%2F%7BfolderId%7D%2Fchildren%2F%7BchildId%7D/get": "[(298,6)-(300,0)]"
                  }
                }
              }
            ],
            "apiContract:parameter": [
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfolderId%7D%2Fchildren%2F%7BchildId%7D/parameter/folderId",
                "@type": [
                  "apiContract:Parameter",
                  "doc:DomainElement"
                ],
                "core:name": [
                  {
                    "@value": "folderId"
                  }
                ],
                "apiContract:paramName": [
                  {
                    "@value": "folderId"
                  }
                ],
                "apiContract:required": [
                  {
                    "@value": true
                  }
                ],
                "apiContract:binding": [
                  {
                    "@value": "path"
                  }
                ],
                "raml-shapes:schema": [
                  {
                    "@id": "#/web-api/end-points/%2Ffiles%2F%7BfolderId%7D%2Fchildren%2F%7BchildId%7D/parameter/folderId/scalar/folderId",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "folderId"
                      }
                    ]
                  }
                ],
                "smaps": {
                  "synthesized-field": {
                    "#/web-api/end-points/%2Ffiles%2F%7BfolderId%7D%2Fchildren%2F%7BchildId%7D/parameter/folderId": "true"
                  }
                }
              },
              {
                "@id": "#/web-api/end-points/%2Ffiles%2F%7BfolderId%7D%2Fchildren%2F%7BchildId%7D/parameter/childId",
                "@type": [
                  "apiContract:Parameter",
                  "doc:DomainElement"
                ],
                "core:name": [
                  {
                    "@value": "childId"
                  }
                ],
                "apiContract:paramName": [
                  {
                    "@value": "childId"
                  }
                ],
                "apiContract:required": [
                  {
                    "@value": true
                  }
                ],
                "apiContract:binding": [
                  {
                    "@value": "path"
                  }
                ],
                "raml-shapes:schema": [
                  {
                    "@id": "#/web-api/end-points/%2Ffiles%2F%7BfolderId%7D%2Fchildren%2F%7BchildId%7D/parameter/childId/scalar/childId",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "childId"
                      }
                    ]
                  }
                ],
                "smaps": {
                  "synthesized-field": {
                    "#/web-api/end-points/%2Ffiles%2F%7BfolderId%7D%2Fchildren%2F%7BchildId%7D/parameter/childId": "true"
                  }
                }
              }
            ],
            "smaps": {
              "parent-end-point": {
                "#/web-api/end-points/%2Ffiles%2F%7BfolderId%7D%2Fchildren%2F%7BchildId%7D": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/demo-api.raml#/web-api/end-points/%2Ffiles%2F%7BfolderId%7D%2Fchildren"
              },
              "lexical": {
                "#/web-api/end-points/%2Ffiles%2F%7BfolderId%7D%2Fchildren%2F%7BchildId%7D": "[(295,4)-(300,0)]"
              }
            }
          },
          {
            "@id": "#/web-api/end-points/%2Fabout",
            "@type": [
              "apiContract:EndPoint",
              "doc:DomainElement"
            ],
            "apiContract:path": [
              {
                "@value": "/about"
              }
            ],
            "core:name": [
              {
                "@value": "About"
              }
            ],
            "apiContract:supportedOperation": [
              {
                "@id": "#/web-api/end-points/%2Fabout/get",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "get"
                  }
                ],
                "core:description": [
                  {
                    "@value": "Gets the information about the current user along with Drive API settings."
                  }
                ],
                "smaps": {
                  "lexical": {
                    "core:description": "[(303,4)-(305,0)]",
                    "#/web-api/end-points/%2Fabout/get": "[(302,2)-(305,0)]"
                  }
                }
              }
            ],
            "smaps": {
              "lexical": {
                "core:name": "[(301,2)-(302,0)]",
                "#/web-api/end-points/%2Fabout": "[(300,0)-(305,0)]"
              }
            }
          },
          {
            "@id": "#/web-api/end-points/%2Fchanges",
            "@type": [
              "apiContract:EndPoint",
              "doc:DomainElement"
            ],
            "apiContract:path": [
              {
                "@value": "/changes"
              }
            ],
            "core:name": [
              {
                "@value": "Changes"
              }
            ],
            "apiContract:supportedOperation": [
              {
                "@id": "#/web-api/end-points/%2Fchanges/get",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "get"
                  }
                ],
                "smaps": {
                  "lexical": {
                    "#/web-api/end-points/%2Fchanges/get": "[(307,2)-(309,0)]"
                  }
                }
              }
            ],
            "smaps": {
              "lexical": {
                "core:name": "[(306,2)-(307,0)]",
                "#/web-api/end-points/%2Fchanges": "[(305,0)-(334,0)]"
              }
            }
          },
          {
            "@id": "#/web-api/end-points/%2Fchanges%2F%7BchangeId%7D",
            "@type": [
              "apiContract:EndPoint",
              "doc:DomainElement"
            ],
            "apiContract:path": [
              {
                "@value": "/changes/{changeId}"
              }
            ],
            "apiContract:supportedOperation": [
              {
                "@id": "#/web-api/end-points/%2Fchanges%2F%7BchangeId%7D/get",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "get"
                  }
                ],
                "core:description": [
                  {
                    "@value": "Gets a specific change."
                  }
                ],
                "smaps": {
                  "lexical": {
                    "core:description": "[(315,6)-(317,0)]",
                    "#/web-api/end-points/%2Fchanges%2F%7BchangeId%7D/get": "[(314,4)-(317,0)]"
                  }
                }
              }
            ],
            "apiContract:parameter": [
              {
                "@id": "#/web-api/end-points/%2Fchanges%2F%7BchangeId%7D/parameter/changeId",
                "@type": [
                  "apiContract:Parameter",
                  "doc:DomainElement"
                ],
                "core:name": [
                  {
                    "@value": "changeId"
                  }
                ],
                "apiContract:paramName": [
                  {
                    "@value": "changeId"
                  }
                ],
                "core:description": [
                  {
                    "@value": "The ID of the change."
                  }
                ],
                "apiContract:required": [
                  {
                    "@value": true
                  }
                ],
                "apiContract:binding": [
                  {
                    "@value": "path"
                  }
                ],
                "raml-shapes:schema": [
                  {
                    "@id": "#/web-api/end-points/%2Fchanges%2F%7BchangeId%7D/parameter/changeId/scalar/schema",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "schema"
                      }
                    ],
                    "core:description": [
                      {
                        "@value": "The ID of the change."
                      }
                    ],
                    "smaps": {
                      "type-property-lexical-info": {
                        "#/web-api/end-points/%2Fchanges%2F%7BchangeId%7D/parameter/changeId/scalar/schema": "[(312,8)-(312,12)]"
                      },
                      "lexical": {
                        "core:description": "[(313,8)-(314,0)]",
                        "#/web-api/end-points/%2Fchanges%2F%7BchangeId%7D/parameter/changeId/scalar/schema": "[(311,6)-(314,0)]",
                        "shacl:datatype": "[(312,8)-(313,0)]"
                      }
                    }
                  }
                ],
                "smaps": {
                  "lexical": {
                    "raml-shapes:schema": "[(311,6)-(314,0)]",
                    "#/web-api/end-points/%2Fchanges%2F%7BchangeId%7D/parameter/changeId": "[(311,6)-(314,0)]",
                    "core:description": "[(313,8)-(314,0)]"
                  }
                }
              }
            ],
            "smaps": {
              "parent-end-point": {
                "#/web-api/end-points/%2Fchanges%2F%7BchangeId%7D": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/demo-api.raml#/web-api/end-points/%2Fchanges"
              },
              "lexical": {
                "apiContract:parameter": "[(310,18)-(314,0)]",
                "#/web-api/end-points/%2Fchanges%2F%7BchangeId%7D": "[(309,2)-(317,0)]"
              }
            }
          },
          {
            "@id": "#/web-api/end-points/%2Fchanges%2Fwatch",
            "@type": [
              "apiContract:EndPoint",
              "doc:DomainElement"
            ],
            "apiContract:path": [
              {
                "@value": "/changes/watch"
              }
            ],
            "apiContract:supportedOperation": [
              {
                "@id": "#/web-api/end-points/%2Fchanges%2Fwatch/post",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "post"
                  }
                ],
                "core:description": [
                  {
                    "@value": "Watch for all changes to a user's Drive."
                  }
                ],
                "apiContract:expects": [
                  {
                    "@id": "#/web-api/end-points/%2Fchanges%2Fwatch/post/request",
                    "@type": [
                      "apiContract:Request",
                      "doc:DomainElement"
                    ],
                    "apiContract:parameter": [
                      {
                        "@id": "#/web-api/end-points/%2Fchanges%2Fwatch/post/request/parameter/spaces",
                        "@type": [
                          "apiContract:Parameter",
                          "doc:DomainElement"
                        ],
                        "core:name": [
                          {
                            "@value": "spaces"
                          }
                        ],
                        "apiContract:paramName": [
                          {
                            "@value": "spaces"
                          }
                        ],
                        "core:description": [
                          {
                            "@value": "A comma-separated list of spaces to query. Supported values are:\n\n- **drive**\n- **appDataFolder**\n- **photos**\n"
                          }
                        ],
                        "apiContract:required": [
                          {
                            "@value": false
                          }
                        ],
                        "apiContract:binding": [
                          {
                            "@value": "query"
                          }
                        ],
                        "raml-shapes:schema": [
                          {
                            "@id": "#/web-api/end-points/%2Fchanges%2Fwatch/post/request/parameter/spaces/scalar/schema",
                            "@type": [
                              "raml-shapes:ScalarShape",
                              "raml-shapes:AnyShape",
                              "shacl:Shape",
                              "raml-shapes:Shape",
                              "doc:DomainElement"
                            ],
                            "shacl:datatype": [
                              {
                                "@id": "http://www.w3.org/2001/XMLSchema#string"
                              }
                            ],
                            "shacl:name": [
                              {
                                "@value": "schema"
                              }
                            ],
                            "core:description": [
                              {
                                "@value": "A comma-separated list of spaces to query. Supported values are:\n\n- **drive**\n- **appDataFolder**\n- **photos**\n"
                              }
                            ],
                            "smaps": {
                              "type-property-lexical-info": {
                                "#/web-api/end-points/%2Fchanges%2Fwatch/post/request/parameter/spaces/scalar/schema": "[(321,10)-(321,14)]"
                              },
                              "lexical": {
                                "core:description": "[(323,10)-(329,0)]",
                                "#/web-api/end-points/%2Fchanges%2Fwatch/post/request/parameter/spaces/scalar/schema": "[(320,8)-(329,0)]",
                                "shacl:datatype": "[(321,10)-(322,0)]"
                              }
                            }
                          }
                        ],
                        "smaps": {
                          "lexical": {
                            "raml-shapes:schema": "[(320,8)-(329,0)]",
                            "core:description": "[(323,10)-(329,0)]",
                            "#/web-api/end-points/%2Fchanges%2Fwatch/post/request/parameter/spaces": "[(320,8)-(329,0)]",
                            "apiContract:required": "[(322,10)-(323,0)]"
                          }
                        }
                      }
                    ],
                    "apiContract:header": [
                      {
                        "@id": "#/web-api/end-points/%2Fchanges%2Fwatch/post/request/parameter/x-test",
                        "@type": [
                          "apiContract:Parameter",
                          "doc:DomainElement"
                        ],
                        "core:name": [
                          {
                            "@value": "x-test"
                          }
                        ],
                        "apiContract:paramName": [
                          {
                            "@value": "x-test"
                          }
                        ],
                        "apiContract:required": [
                          {
                            "@value": true
                          }
                        ],
                        "apiContract:binding": [
                          {
                            "@value": "header"
                          }
                        ],
                        "raml-shapes:schema": [
                          {
                            "@id": "#/web-api/end-points/%2Fchanges%2Fwatch/post/request/parameter/x-test/scalar/schema",
                            "@type": [
                              "raml-shapes:ScalarShape",
                              "raml-shapes:AnyShape",
                              "shacl:Shape",
                              "raml-shapes:Shape",
                              "doc:DomainElement"
                            ],
                            "shacl:datatype": [
                              {
                                "@id": "http://www.w3.org/2001/XMLSchema#string"
                              }
                            ],
                            "shacl:name": [
                              {
                                "@value": "schema"
                              }
                            ]
                          }
                        ],
                        "smaps": {
                          "lexical": {
                            "#/web-api/end-points/%2Fchanges%2Fwatch/post/request/parameter/x-test": "[(331,8)-(332,0)]"
                          }
                        }
                      }
                    ],
                    "smaps": {
                      "lexical": {
                        "apiContract:header": "[(330,6)-(332,0)]",
                        "#/web-api/end-points/%2Fchanges%2Fwatch/post/request": "[(319,0)-(332,0)]",
                        "apiContract:parameter": "[(319,6)-(329,0)]"
                      }
                    }
                  }
                ],
                "smaps": {
                  "synthesized-field": {
                    "apiContract:expects": "true"
                  },
                  "lexical": {
                    "core:description": "[(329,6)-(330,0)]",
                    "#/web-api/end-points/%2Fchanges%2Fwatch/post": "[(318,4)-(332,0)]"
                  }
                }
              },
              {
                "@id": "#/web-api/end-points/%2Fchanges%2Fwatch/get",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "get"
                  }
                ],
                "core:description": [
                  {
                    "@value": "Dummy function"
                  }
                ],
                "smaps": {
                  "lexical": {
                    "core:description": "[(333,6)-(334,0)]",
                    "#/web-api/end-points/%2Fchanges%2Fwatch/get": "[(332,4)-(334,0)]"
                  }
                }
              }
            ],
            "smaps": {
              "parent-end-point": {
                "#/web-api/end-points/%2Fchanges%2Fwatch": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/demo-api.raml#/web-api/end-points/%2Fchanges"
              },
              "lexical": {
                "#/web-api/end-points/%2Fchanges%2Fwatch": "[(317,2)-(334,0)]"
              }
            }
          },
          {
            "@id": "#/web-api/end-points/%2FpermissionIds%2F%7Bemail%7D",
            "@type": [
              "apiContract:EndPoint",
              "doc:DomainElement"
            ],
            "apiContract:path": [
              {
                "@value": "/permissionIds/{email}"
              }
            ],
            "apiContract:supportedOperation": [
              {
                "@id": "#/web-api/end-points/%2FpermissionIds%2F%7Bemail%7D/get",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "get"
                  }
                ],
                "core:description": [
                  {
                    "@value": "Returns the permission ID for an email address."
                  }
                ],
                "smaps": {
                  "lexical": {
                    "core:description": "[(340,4)-(342,0)]",
                    "#/web-api/end-points/%2FpermissionIds%2F%7Bemail%7D/get": "[(339,2)-(342,0)]"
                  }
                }
              }
            ],
            "apiContract:parameter": [
              {
                "@id": "#/web-api/end-points/%2FpermissionIds%2F%7Bemail%7D/parameter/email",
                "@type": [
                  "apiContract:Parameter",
                  "doc:DomainElement"
                ],
                "core:name": [
                  {
                    "@value": "email"
                  }
                ],
                "apiContract:paramName": [
                  {
                    "@value": "email"
                  }
                ],
                "core:description": [
                  {
                    "@value": "The email address for which to return a permission ID"
                  }
                ],
                "apiContract:required": [
                  {
                    "@value": true
                  }
                ],
                "apiContract:binding": [
                  {
                    "@value": "path"
                  }
                ],
                "raml-shapes:schema": [
                  {
                    "@id": "#/web-api/end-points/%2FpermissionIds%2F%7Bemail%7D/parameter/email/scalar/schema",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "schema"
                      }
                    ],
                    "core:description": [
                      {
                        "@value": "The email address for which to return a permission ID"
                      }
                    ],
                    "smaps": {
                      "type-property-lexical-info": {
                        "#/web-api/end-points/%2FpermissionIds%2F%7Bemail%7D/parameter/email/scalar/schema": "[(337,6)-(337,10)]"
                      },
                      "lexical": {
                        "core:description": "[(338,6)-(339,0)]",
                        "#/web-api/end-points/%2FpermissionIds%2F%7Bemail%7D/parameter/email/scalar/schema": "[(336,4)-(339,0)]",
                        "shacl:datatype": "[(337,6)-(338,0)]"
                      }
                    }
                  }
                ],
                "smaps": {
                  "lexical": {
                    "raml-shapes:schema": "[(336,4)-(339,0)]",
                    "#/web-api/end-points/%2FpermissionIds%2F%7Bemail%7D/parameter/email": "[(336,4)-(339,0)]",
                    "core:description": "[(338,6)-(339,0)]"
                  }
                }
              }
            ],
            "smaps": {
              "lexical": {
                "apiContract:parameter": "[(335,16)-(339,0)]",
                "#/web-api/end-points/%2FpermissionIds%2F%7Bemail%7D": "[(334,0)-(342,0)]"
              }
            }
          },
          {
            "@id": "#/web-api/end-points/%2Fapps",
            "@type": [
              "apiContract:EndPoint",
              "doc:DomainElement"
            ],
            "apiContract:path": [
              {
                "@value": "/apps"
              }
            ],
            "core:name": [
              {
                "@value": "Apps"
              }
            ],
            "apiContract:supportedOperation": [
              {
                "@id": "#/web-api/end-points/%2Fapps/get",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "get"
                  }
                ],
                "core:description": [
                  {
                    "@value": "Lists a user's installed apps."
                  }
                ],
                "smaps": {
                  "lexical": {
                    "core:description": "[(345,4)-(346,0)]",
                    "#/web-api/end-points/%2Fapps/get": "[(344,2)-(346,0)]"
                  }
                }
              }
            ],
            "smaps": {
              "lexical": {
                "core:name": "[(343,2)-(344,0)]",
                "#/web-api/end-points/%2Fapps": "[(342,0)-(353,0)]"
              }
            }
          },
          {
            "@id": "#/web-api/end-points/%2Fapps%2F%7BappId%7D",
            "@type": [
              "apiContract:EndPoint",
              "doc:DomainElement"
            ],
            "apiContract:path": [
              {
                "@value": "/apps/{appId}"
              }
            ],
            "apiContract:supportedOperation": [
              {
                "@id": "#/web-api/end-points/%2Fapps%2F%7BappId%7D/get",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "get"
                  }
                ],
                "core:description": [
                  {
                    "@value": "Gets a specific app."
                  }
                ],
                "smaps": {
                  "lexical": {
                    "core:description": "[(352,6)-(353,0)]",
                    "#/web-api/end-points/%2Fapps%2F%7BappId%7D/get": "[(351,4)-(353,0)]"
                  }
                }
              }
            ],
            "apiContract:parameter": [
              {
                "@id": "#/web-api/end-points/%2Fapps%2F%7BappId%7D/parameter/appId",
                "@type": [
                  "apiContract:Parameter",
                  "doc:DomainElement"
                ],
                "core:name": [
                  {
                    "@value": "appId"
                  }
                ],
                "apiContract:paramName": [
                  {
                    "@value": "appId"
                  }
                ],
                "core:description": [
                  {
                    "@value": "The ID of the app."
                  }
                ],
                "apiContract:required": [
                  {
                    "@value": true
                  }
                ],
                "apiContract:binding": [
                  {
                    "@value": "path"
                  }
                ],
                "raml-shapes:schema": [
                  {
                    "@id": "#/web-api/end-points/%2Fapps%2F%7BappId%7D/parameter/appId/scalar/schema",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "schema"
                      }
                    ],
                    "core:description": [
                      {
                        "@value": "The ID of the app."
                      }
                    ],
                    "smaps": {
                      "type-property-lexical-info": {
                        "#/web-api/end-points/%2Fapps%2F%7BappId%7D/parameter/appId/scalar/schema": "[(349,8)-(349,12)]"
                      },
                      "lexical": {
                        "core:description": "[(350,8)-(351,0)]",
                        "#/web-api/end-points/%2Fapps%2F%7BappId%7D/parameter/appId/scalar/schema": "[(348,6)-(351,0)]",
                        "shacl:datatype": "[(349,8)-(350,0)]"
                      }
                    }
                  }
                ],
                "smaps": {
                  "lexical": {
                    "raml-shapes:schema": "[(348,6)-(351,0)]",
                    "#/web-api/end-points/%2Fapps%2F%7BappId%7D/parameter/appId": "[(348,6)-(351,0)]",
                    "core:description": "[(350,8)-(351,0)]"
                  }
                }
              }
            ],
            "smaps": {
              "parent-end-point": {
                "#/web-api/end-points/%2Fapps%2F%7BappId%7D": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/demo-api.raml#/web-api/end-points/%2Fapps"
              },
              "lexical": {
                "apiContract:parameter": "[(347,18)-(351,0)]",
                "#/web-api/end-points/%2Fapps%2F%7BappId%7D": "[(346,2)-(353,0)]"
              }
            }
          },
          {
            "@id": "#/web-api/end-points/%2Fchannels%2Fstop",
            "@type": [
              "apiContract:EndPoint",
              "doc:DomainElement"
            ],
            "apiContract:path": [
              {
                "@value": "/channels/stop"
              }
            ],
            "apiContract:supportedOperation": [
              {
                "@id": "#/web-api/end-points/%2Fchannels%2Fstop/post",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "post"
                  }
                ],
                "core:description": [
                  {
                    "@value": "Stop watching for changes to a resource.\nIf successful, this method returns an empty response body.\n"
                  }
                ],
                "smaps": {
                  "lexical": {
                    "core:description": "[(355,4)-(358,0)]",
                    "#/web-api/end-points/%2Fchannels%2Fstop/post": "[(354,2)-(358,0)]"
                  }
                }
              }
            ],
            "smaps": {
              "lexical": {
                "#/web-api/end-points/%2Fchannels%2Fstop": "[(353,0)-(358,0)]"
              }
            }
          },
          {
            "@id": "#/web-api/end-points/%2Fteamdrives",
            "@type": [
              "apiContract:EndPoint",
              "doc:DomainElement"
            ],
            "apiContract:path": [
              {
                "@value": "/teamdrives"
              }
            ],
            "core:name": [
              {
                "@value": "Teamdrives"
              }
            ],
            "apiContract:supportedOperation": [
              {
                "@id": "#/web-api/end-points/%2Fteamdrives/post",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "post"
                  }
                ],
                "core:name": [
                  {
                    "@value": "insert"
                  }
                ],
                "core:description": [
                  {
                    "@value": "Creates a new Team Drive."
                  }
                ],
                "smaps": {
                  "lexical": {
                    "core:description": "[(362,4)-(364,0)]",
                    "#/web-api/end-points/%2Fteamdrives/post": "[(360,2)-(364,0)]",
                    "core:name": "[(361,4)-(362,0)]"
                  }
                }
              },
              {
                "@id": "#/web-api/end-points/%2Fteamdrives/get",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "get"
                  }
                ],
                "core:name": [
                  {
                    "@value": "list"
                  }
                ],
                "core:description": [
                  {
                    "@value": "Lists the user's Team Drives."
                  }
                ],
                "smaps": {
                  "lexical": {
                    "core:description": "[(366,4)-(367,0)]",
                    "#/web-api/end-points/%2Fteamdrives/get": "[(364,2)-(367,0)]",
                    "core:name": "[(365,4)-(366,0)]"
                  }
                }
              }
            ],
            "smaps": {
              "lexical": {
                "core:name": "[(359,2)-(360,0)]",
                "#/web-api/end-points/%2Fteamdrives": "[(358,0)-(378,0)]"
              }
            }
          },
          {
            "@id": "#/web-api/end-points/%2Fteamdrives%2F%7BteamDriveId%7D",
            "@type": [
              "apiContract:EndPoint",
              "doc:DomainElement"
            ],
            "apiContract:path": [
              {
                "@value": "/teamdrives/{teamDriveId}"
              }
            ],
            "apiContract:supportedOperation": [
              {
                "@id": "#/web-api/end-points/%2Fteamdrives%2F%7BteamDriveId%7D/delete",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "delete"
                  }
                ],
                "core:description": [
                  {
                    "@value": "Permanently deletes a Team Drive for which the user is an organizer. The Team Drive cannot contain any untrashed items.\n"
                  }
                ],
                "smaps": {
                  "lexical": {
                    "core:description": "[(372,6)-(374,0)]",
                    "#/web-api/end-points/%2Fteamdrives%2F%7BteamDriveId%7D/delete": "[(371,4)-(374,0)]"
                  }
                }
              },
              {
                "@id": "#/web-api/end-points/%2Fteamdrives%2F%7BteamDriveId%7D/get",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "get"
                  }
                ],
                "core:description": [
                  {
                    "@value": "Gets a Team Drive's metadata by ID."
                  }
                ],
                "smaps": {
                  "lexical": {
                    "core:description": "[(375,6)-(376,0)]",
                    "#/web-api/end-points/%2Fteamdrives%2F%7BteamDriveId%7D/get": "[(374,4)-(376,0)]"
                  }
                }
              },
              {
                "@id": "#/web-api/end-points/%2Fteamdrives%2F%7BteamDriveId%7D/put",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "put"
                  }
                ],
                "core:description": [
                  {
                    "@value": "Updates a Team Drive's metadata"
                  }
                ],
                "smaps": {
                  "lexical": {
                    "core:description": "[(377,6)-(378,0)]",
                    "#/web-api/end-points/%2Fteamdrives%2F%7BteamDriveId%7D/put": "[(376,4)-(378,0)]"
                  }
                }
              }
            ],
            "apiContract:parameter": [
              {
                "@id": "#/web-api/end-points/%2Fteamdrives%2F%7BteamDriveId%7D/parameter/teamDriveId",
                "@type": [
                  "apiContract:Parameter",
                  "doc:DomainElement"
                ],
                "core:name": [
                  {
                    "@value": "teamDriveId"
                  }
                ],
                "apiContract:paramName": [
                  {
                    "@value": "teamDriveId"
                  }
                ],
                "core:description": [
                  {
                    "@value": "The ID of the Team Drive"
                  }
                ],
                "apiContract:required": [
                  {
                    "@value": true
                  }
                ],
                "apiContract:binding": [
                  {
                    "@value": "path"
                  }
                ],
                "raml-shapes:schema": [
                  {
                    "@id": "#/web-api/end-points/%2Fteamdrives%2F%7BteamDriveId%7D/parameter/teamDriveId/scalar/schema",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "schema"
                      }
                    ],
                    "core:description": [
                      {
                        "@value": "The ID of the Team Drive"
                      }
                    ],
                    "smaps": {
                      "default-node": {
                        "#/web-api/end-points/%2Fteamdrives%2F%7BteamDriveId%7D/parameter/teamDriveId/scalar/schema": ""
                      },
                      "lexical": {
                        "core:description": "[(370,8)-(371,0)]",
                        "#/web-api/end-points/%2Fteamdrives%2F%7BteamDriveId%7D/parameter/teamDriveId/scalar/schema": "[(369,6)-(371,0)]"
                      }
                    }
                  }
                ],
                "smaps": {
                  "lexical": {
                    "raml-shapes:schema": "[(369,6)-(371,0)]",
                    "#/web-api/end-points/%2Fteamdrives%2F%7BteamDriveId%7D/parameter/teamDriveId": "[(369,6)-(371,0)]",
                    "core:description": "[(370,8)-(371,0)]"
                  }
                }
              }
            ],
            "smaps": {
              "parent-end-point": {
                "#/web-api/end-points/%2Fteamdrives%2F%7BteamDriveId%7D": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/demo-api.raml#/web-api/end-points/%2Fteamdrives"
              },
              "lexical": {
                "apiContract:parameter": "[(368,18)-(371,0)]",
                "#/web-api/end-points/%2Fteamdrives%2F%7BteamDriveId%7D": "[(367,2)-(378,0)]"
              }
            }
          },
          {
            "@id": "#/web-api/end-points/%2FtypeFromLibraryEndpoint",
            "@type": [
              "apiContract:EndPoint",
              "doc:DomainElement"
            ],
            "apiContract:path": [
              {
                "@value": "/typeFromLibraryEndpoint"
              }
            ],
            "apiContract:supportedOperation": [
              {
                "@id": "#/web-api/end-points/%2FtypeFromLibraryEndpoint/post",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "post"
                  }
                ],
                "apiContract:expects": [
                  {
                    "@id": "#/web-api/end-points/%2FtypeFromLibraryEndpoint/post/request",
                    "@type": [
                      "apiContract:Request",
                      "doc:DomainElement"
                    ],
                    "apiContract:payload": [
                      {
                        "@id": "#/web-api/end-points/%2FtypeFromLibraryEndpoint/post/request/default",
                        "@type": [
                          "apiContract:Payload",
                          "doc:DomainElement"
                        ],
                        "raml-shapes:schema": [
                          {
                            "@id": "#/web-api/end-points/%2FtypeFromLibraryEndpoint/post/request/default/default",
                            "@type": [
                              "shacl:NodeShape",
                              "raml-shapes:AnyShape",
                              "shacl:Shape",
                              "raml-shapes:Shape",
                              "doc:DomainElement"
                            ],
                            "shacl:closed": [
                              {
                                "@value": false
                              }
                            ],
                            "shacl:name": [
                              {
                                "@value": "default"
                              }
                            ],
                            "raml-shapes:inherits": [
                              {
                                "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/library.raml#/declarations/types/TypeFromLibray/linked_1",
                                "@type": [
                                  "shacl:NodeShape",
                                  "raml-shapes:AnyShape",
                                  "shacl:Shape",
                                  "raml-shapes:Shape",
                                  "doc:DomainElement"
                                ],
                                "doc:link-target": [
                                  {
                                    "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/library.raml#/declarations/types/TypeFromLibray"
                                  }
                                ],
                                "doc:link-label": [
                                  {
                                    "@value": "myLib.TypeFromLibray"
                                  }
                                ],
                                "shacl:name": [
                                  {
                                    "@value": "TypeFromLibray"
                                  }
                                ],
                                "smaps": {
                                  "auto-generated-name": {
                                    "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/library.raml#/declarations/types/TypeFromLibray/linked_1": ""
                                  },
                                  "lexical": {
                                    "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/library.raml#/declarations/types/TypeFromLibray/linked_1": "[(381,12)-(381,32)]"
                                  }
                                }
                              }
                            ],
                            "smaps": {
                              "auto-generated-name": {
                                "#/web-api/end-points/%2FtypeFromLibraryEndpoint/post/request/default/default": ""
                              },
                              "lexical": {
                                "raml-shapes:inherits": "[(381,6)-(382,0)]",
                                "#/web-api/end-points/%2FtypeFromLibraryEndpoint/post/request/default/default": "[(380,4)-(382,0)]"
                              },
                              "type-property-lexical-info": {
                                "#/web-api/end-points/%2FtypeFromLibraryEndpoint/post/request/default/default": "[(381,6)-(381,10)]"
                              }
                            }
                          }
                        ],
                        "smaps": {
                          "lexical": {
                            "#/web-api/end-points/%2FtypeFromLibraryEndpoint/post/request/default": "[(380,4)-(382,0)]"
                          }
                        }
                      }
                    ],
                    "smaps": {
                      "lexical": {
                        "apiContract:payload": "[(380,4)-(382,0)]",
                        "#/web-api/end-points/%2FtypeFromLibraryEndpoint/post/request": "[(380,0)-(384,0)]"
                      }
                    }
                  }
                ],
                "apiContract:returns": [
                  {
                    "@id": "#/web-api/end-points/%2FtypeFromLibraryEndpoint/post/200",
                    "@type": [
                      "apiContract:Response",
                      "doc:DomainElement"
                    ],
                    "core:name": [
                      {
                        "@value": "200"
                      }
                    ],
                    "apiContract:statusCode": [
                      {
                        "@value": "200"
                      }
                    ],
                    "smaps": {
                      "lexical": {
                        "#/web-api/end-points/%2FtypeFromLibraryEndpoint/post/200": "[(383,6)-(384,0)]"
                      }
                    }
                  }
                ],
                "smaps": {
                  "synthesized-field": {
                    "apiContract:expects": "true"
                  },
                  "lexical": {
                    "apiContract:returns": "[(382,4)-(384,0)]",
                    "#/web-api/end-points/%2FtypeFromLibraryEndpoint/post": "[(379,2)-(384,0)]"
                  }
                }
              }
            ],
            "smaps": {
              "lexical": {
                "#/web-api/end-points/%2FtypeFromLibraryEndpoint": "[(378,0)-(384,0)]"
              }
            }
          },
          {
            "@id": "#/web-api/end-points/%2FreferenceId",
            "@type": [
              "apiContract:EndPoint",
              "doc:DomainElement"
            ],
            "apiContract:path": [
              {
                "@value": "/referenceId"
              }
            ],
            "apiContract:supportedOperation": [
              {
                "@id": "#/web-api/end-points/%2FreferenceId/post",
                "@type": [
                  "apiContract:Operation",
                  "doc:DomainElement"
                ],
                "apiContract:method": [
                  {
                    "@value": "post"
                  }
                ],
                "apiContract:expects": [
                  {
                    "@id": "#/web-api/end-points/%2FreferenceId/post/request",
                    "@type": [
                      "apiContract:Request",
                      "doc:DomainElement"
                    ],
                    "apiContract:payload": [
                      {
                        "@id": "#/web-api/end-points/%2FreferenceId/post/request/application%2Fjson",
                        "@type": [
                          "apiContract:Payload",
                          "doc:DomainElement"
                        ],
                        "core:mediaType": [
                          {
                            "@value": "application/json"
                          }
                        ],
                        "raml-shapes:schema": [
                          {
                            "@id": "#/web-api/end-points/%2FreferenceId/post/request/application%2Fjson/schema",
                            "@type": [
                              "shacl:NodeShape",
                              "raml-shapes:AnyShape",
                              "shacl:Shape",
                              "raml-shapes:Shape",
                              "doc:DomainElement"
                            ],
                            "shacl:closed": [
                              {
                                "@value": false
                              }
                            ],
                            "shacl:name": [
                              {
                                "@value": "schema"
                              }
                            ],
                            "raml-shapes:inherits": [
                              {
                                "@id": "#/declarations/types/SchemaPerson/linked_2",
                                "@type": [
                                  "shacl:NodeShape",
                                  "raml-shapes:AnyShape",
                                  "shacl:Shape",
                                  "raml-shapes:Shape",
                                  "doc:DomainElement"
                                ],
                                "doc:link-target": [
                                  {
                                    "@id": "#/declarations/types/SchemaPerson"
                                  }
                                ],
                                "doc:link-label": [
                                  {
                                    "@value": "SchemaPerson"
                                  }
                                ],
                                "shacl:name": [
                                  {
                                    "@value": "SchemaPerson"
                                  }
                                ],
                                "smaps": {
                                  "auto-generated-name": {
                                    "#/declarations/types/SchemaPerson/linked_2": ""
                                  },
                                  "lexical": {
                                    "#/declarations/types/SchemaPerson/linked_2": "[(388,14)-(388,26)]"
                                  }
                                }
                              }
                            ],
                            "smaps": {
                              "auto-generated-name": {
                                "#/web-api/end-points/%2FreferenceId/post/request/application%2Fjson/schema": ""
                              },
                              "lexical": {
                                "raml-shapes:inherits": "[(388,8)-(389,0)]",
                                "#/web-api/end-points/%2FreferenceId/post/request/application%2Fjson/schema": "[(387,6)-(389,0)]"
                              },
                              "type-property-lexical-info": {
                                "#/web-api/end-points/%2FreferenceId/post/request/application%2Fjson/schema": "[(388,8)-(388,12)]"
                              }
                            }
                          }
                        ],
                        "smaps": {
                          "lexical": {
                            "#/web-api/end-points/%2FreferenceId/post/request/application%2Fjson": "[(387,6)-(389,0)]"
                          }
                        }
                      }
                    ],
                    "smaps": {
                      "lexical": {
                        "apiContract:payload": "[(386,4)-(389,0)]",
                        "#/web-api/end-points/%2FreferenceId/post/request": "[(386,0)-(389,0)]"
                      }
                    }
                  }
                ],
                "smaps": {
                  "synthesized-field": {
                    "apiContract:expects": "true"
                  },
                  "lexical": {
                    "#/web-api/end-points/%2FreferenceId/post": "[(385,2)-(389,0)]"
                  }
                }
              }
            ],
            "smaps": {
              "lexical": {
                "#/web-api/end-points/%2FreferenceId": "[(384,0)-(389,0)]"
              }
            }
          }
        ],
        "smaps": {
          "single-value-array": {
            "apiContract:contentType": "",
            "apiContract:accepts": ""
          },
          "lexical": {
            "core:documentation": "[(21,0)-(28,0)]",
            "apiContract:scheme": "[(7,0)-(9,0)]",
            "apiContract:accepts": "[(6,0)-(7,0)]",
            "core:name": "[(2,0)-(4,0)]",
            "#/web-api": "[(2,0)-(389,0)]",
            "apiContract:server": "[(5,0)-(6,0)]",
            "apiContract:contentType": "[(6,0)-(7,0)]",
            "core:version": "[(4,0)-(5,0)]"
          },
          "source-vendor": {
            "#/web-api": "RAML 1.0"
          }
        }
      }
    ],
    "doc:references": [
      {
        "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/dimensions.raml",
        "@type": [
          "raml-shapes:DataTypeFragment",
          "doc:Fragment",
          "doc:Unit"
        ],
        "doc:encodes": [
          {
            "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/dimensions.raml#/type",
            "@type": [
              "shacl:NodeShape",
              "raml-shapes:AnyShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:closed": [
              {
                "@value": false
              }
            ],
            "shacl:property": [
              {
                "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/dimensions.raml#/type/property/width",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:path": [
                  {
                    "@id": "http://a.ml/vocabularies/data#width"
                  }
                ],
                "raml-shapes:range": [
                  {
                    "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/dimensions.raml#/type/property/width/scalar/width",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://a.ml/vocabularies/shapes#number"
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "width"
                      }
                    ],
                    "core:description": [
                      {
                        "@value": "Width of the shape.\n"
                      }
                    ],
                    "smaps": {
                      "type-property-lexical-info": {
                        "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/dimensions.raml#/type/property/width/scalar/width": "[(9,4)-(9,8)]"
                      },
                      "lexical": {
                        "core:description": "[(10,4)-(12,0)]",
                        "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/dimensions.raml#/type/property/width/scalar/width": "[(8,2)-(12,0)]",
                        "shacl:datatype": "[(9,4)-(10,0)]"
                      }
                    }
                  }
                ],
                "shacl:minCount": [
                  {
                    "@value": 1
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "width"
                  }
                ],
                "smaps": {
                  "lexical": {
                    "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/dimensions.raml#/type/property/width": "[(8,2)-(12,0)]"
                  }
                }
              },
              {
                "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/dimensions.raml#/type/property/height",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:path": [
                  {
                    "@id": "http://a.ml/vocabularies/data#height"
                  }
                ],
                "raml-shapes:range": [
                  {
                    "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/dimensions.raml#/type/property/height/scalar/height",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://a.ml/vocabularies/shapes#number"
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "height"
                      }
                    ],
                    "core:description": [
                      {
                        "@value": "Height of the shape.\n"
                      }
                    ],
                    "smaps": {
                      "type-property-lexical-info": {
                        "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/dimensions.raml#/type/property/height/scalar/height": "[(13,4)-(13,8)]"
                      },
                      "lexical": {
                        "core:description": "[(14,4)-(16,0)]",
                        "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/dimensions.raml#/type/property/height/scalar/height": "[(12,2)-(16,0)]",
                        "shacl:datatype": "[(13,4)-(14,0)]"
                      }
                    }
                  }
                ],
                "shacl:minCount": [
                  {
                    "@value": 1
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "height"
                  }
                ],
                "smaps": {
                  "lexical": {
                    "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/dimensions.raml#/type/property/height": "[(12,2)-(16,0)]"
                  }
                }
              },
              {
                "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/dimensions.raml#/type/property/unit",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:path": [
                  {
                    "@id": "http://a.ml/vocabularies/data#unit"
                  }
                ],
                "raml-shapes:range": [
                  {
                    "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/dimensions.raml#/type/property/unit/scalar/unit%3F",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "unit?"
                      }
                    ],
                    "core:description": [
                      {
                        "@value": "A unit that describes the dimension. It can be, for example, `px` for\npixels, `pt` for points, `%` for percentage.\n"
                      }
                    ],
                    "shacl:defaultValue": [
                      {
                        "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/dimensions.raml#/shape/property/unit%3F/scalar/unit%3F/default/scalar_1",
                        "@type": [
                          "data:Scalar",
                          "data:Node",
                          "doc:DomainElement"
                        ],
                        "data:value": [
                          {
                            "@value": "px"
                          }
                        ],
                        "shacl:datatype": [
                          {
                            "@id": "http://www.w3.org/2001/XMLSchema#string"
                          }
                        ],
                        "core:name": [
                          {
                            "@value": "scalar_1"
                          }
                        ],
                        "smaps": {
                          "lexical": {
                            "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/dimensions.raml#/shape/property/unit%3F/scalar/unit%3F/default/scalar_1": "[(18,13)-(18,15)]"
                          }
                        }
                      }
                    ],
                    "shacl:defaultValueStr": [
                      {
                        "@value": "px"
                      }
                    ],
                    "smaps": {
                      "type-property-lexical-info": {
                        "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/dimensions.raml#/type/property/unit/scalar/unit%3F": "[(17,4)-(17,8)]"
                      },
                      "lexical": {
                        "shacl:defaultValueStr": "[(18,4)-(19,0)]",
                        "core:description": "[(19,4)-(22,0)]",
                        "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/dimensions.raml#/type/property/unit/scalar/unit%3F": "[(16,2)-(22,0)]",
                        "shacl:datatype": "[(17,4)-(18,0)]",
                        "shacl:defaultValue": "[(18,4)-(19,0)]"
                      }
                    }
                  }
                ],
                "shacl:minCount": [
                  {
                    "@value": 0
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "unit"
                  }
                ],
                "smaps": {
                  "lexical": {
                    "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/dimensions.raml#/type/property/unit": "[(16,2)-(22,0)]"
                  }
                }
              }
            ],
            "shacl:name": [
              {
                "@value": "type"
              }
            ],
            "core:description": [
              {
                "@value": "A dimmensions of an object like image.\n"
              }
            ],
            "apiContract:examples": [
              {
                "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/dimensions.raml#/shape/example/default-example",
                "@type": [
                  "apiContract:Example",
                  "doc:DomainElement"
                ],
                "doc:strict": [
                  {
                    "@value": true
                  }
                ],
                "doc:structuredValue": [
                  {
                    "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/dimensions.raml#/shape/example/default-example/object_1",
                    "@type": [
                      "data:Object",
                      "data:Node",
                      "doc:DomainElement"
                    ],
                    "data:width": [
                      {
                        "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/dimensions.raml#/shape/example/default-example/object_1/scalar_2",
                        "@type": [
                          "data:Scalar",
                          "data:Node",
                          "doc:DomainElement"
                        ],
                        "data:value": [
                          {
                            "@value": "200"
                          }
                        ],
                        "shacl:datatype": [
                          {
                            "@id": "http://www.w3.org/2001/XMLSchema#integer"
                          }
                        ],
                        "core:name": [
                          {
                            "@value": "scalar_2"
                          }
                        ],
                        "smaps": {
                          "lexical": {
                            "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/dimensions.raml#/shape/example/default-example/object_1/scalar_2": "[(23,9)-(23,12)]"
                          }
                        }
                      }
                    ],
                    "data:height": [
                      {
                        "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/dimensions.raml#/shape/example/default-example/object_1/scalar_3",
                        "@type": [
                          "data:Scalar",
                          "data:Node",
                          "doc:DomainElement"
                        ],
                        "data:value": [
                          {
                            "@value": "160"
                          }
                        ],
                        "shacl:datatype": [
                          {
                            "@id": "http://www.w3.org/2001/XMLSchema#integer"
                          }
                        ],
                        "core:name": [
                          {
                            "@value": "scalar_3"
                          }
                        ],
                        "smaps": {
                          "lexical": {
                            "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/dimensions.raml#/shape/example/default-example/object_1/scalar_3": "[(24,10)-(24,13)]"
                          }
                        }
                      }
                    ],
                    "core:name": [
                      {
                        "@value": "object_1"
                      }
                    ],
                    "smaps": {
                      "lexical": {
                        "data:height": "[(24,2)-(25,0)]",
                        "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/dimensions.raml#/shape/example/default-example/object_1": "[(23,0)-(25,0)]",
                        "data:width": "[(23,2)-(24,0)]"
                      }
                    }
                  }
                ],
                "doc:raw": [
                  {
                    "@value": "\n  width: 200\n  height: 160\n"
                  }
                ],
                "smaps": {
                  "synthesized-field": {
                    "doc:strict": "true"
                  },
                  "lexical": {
                    "doc:raw": "[(23,0)-(25,0)]",
                    "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/dimensions.raml#/shape/example/default-example": "[(22,0)-(25,0)]",
                    "doc:structuredValue": "[(22,8)-(25,0)]"
                  }
                }
              }
            ],
            "smaps": {
              "source-vendor": {
                "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/dimensions.raml#/type": "RAML 1.0"
              },
              "lexical": {
                "core:description": "[(3,0)-(6,0)]",
                "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/dimensions.raml#/type": "[(3,0)-(25,0)]",
                "shacl:property": "[(7,0)-(22,0)]"
              },
              "type-property-lexical-info": {
                "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/dimensions.raml#/type": "[(6,0)-(6,4)]"
              }
            }
          }
        ],
        "smaps": {
          "lexical": {
            "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/dimensions.raml": "[(3,0)-(25,0)]"
          }
        }
      },
      {
        "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml",
        "@type": [
          "raml-shapes:DataTypeFragment",
          "doc:Fragment",
          "doc:Unit"
        ],
        "doc:encodes": [
          {
            "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type",
            "@type": [
              "shacl:NodeShape",
              "raml-shapes:AnyShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:closed": [
              {
                "@value": false
              }
            ],
            "shacl:property": [
              {
                "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/id",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:path": [
                  {
                    "@id": "http://a.ml/vocabularies/data#id"
                  }
                ],
                "raml-shapes:range": [
                  {
                    "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/id/scalar/id",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "shacl:pattern": [
                      {
                        "@value": "^[A-Za-z0-9]*$"
                      }
                    ],
                    "shacl:minLength": [
                      {
                        "@value": 32
                      }
                    ],
                    "shacl:maxLength": [
                      {
                        "@value": 32
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "id"
                      }
                    ],
                    "core:description": [
                      {
                        "@value": "A unique identifier of a person.\n\nIt is a 32 bit string containing alphanumeric characters.\n"
                      }
                    ],
                    "smaps": {
                      "lexical": {
                        "core:description": "[(27,4)-(31,0)]",
                        "shacl:minLength": "[(31,4)-(32,0)]",
                        "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/id/scalar/id": "[(26,2)-(34,0)]",
                        "shacl:pattern": "[(33,4)-(34,0)]",
                        "shacl:maxLength": "[(32,4)-(33,0)]"
                      }
                    }
                  }
                ],
                "shacl:minCount": [
                  {
                    "@value": 1
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "id"
                  }
                ],
                "smaps": {
                  "lexical": {
                    "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/id": "[(26,2)-(34,0)]"
                  }
                }
              },
              {
                "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/name",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:path": [
                  {
                    "@id": "http://a.ml/vocabularies/data#name"
                  }
                ],
                "raml-shapes:range": [
                  {
                    "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/name/scalar/name",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "shacl:pattern": [
                      {
                        "@value": "^[0-9a-zA-Z ]+$"
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "name"
                      }
                    ],
                    "core:description": [
                      {
                        "@value": "Person full name. The input will be rejected if this property is not set while creating new object."
                      }
                    ],
                    "apiContract:examples": [
                      {
                        "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/property/name/scalar/name/example/default-example",
                        "@type": [
                          "apiContract:Example",
                          "doc:DomainElement"
                        ],
                        "doc:strict": [
                          {
                            "@value": true
                          }
                        ],
                        "doc:structuredValue": [
                          {
                            "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/property/name/scalar/name/example/default-example/scalar_1",
                            "@type": [
                              "data:Scalar",
                              "data:Node",
                              "doc:DomainElement"
                            ],
                            "data:value": [
                              {
                                "@value": "John Smith"
                              }
                            ],
                            "shacl:datatype": [
                              {
                                "@id": "http://www.w3.org/2001/XMLSchema#string"
                              }
                            ],
                            "core:name": [
                              {
                                "@value": "scalar_1"
                              }
                            ],
                            "smaps": {
                              "lexical": {
                                "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/property/name/scalar/name/example/default-example/scalar_1": "[(36,13)-(36,23)]"
                              }
                            }
                          }
                        ],
                        "doc:raw": [
                          {
                            "@value": "John Smith"
                          }
                        ],
                        "smaps": {
                          "synthesized-field": {
                            "doc:strict": "true"
                          },
                          "lexical": {
                            "doc:raw": "[(36,13)-(36,23)]",
                            "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/property/name/scalar/name/example/default-example": "[(36,13)-(36,23)]",
                            "doc:structuredValue": "[(36,13)-(36,23)]"
                          }
                        }
                      }
                    ],
                    "smaps": {
                      "type-property-lexical-info": {
                        "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/name/scalar/name": "[(38,4)-(38,8)]"
                      },
                      "lexical": {
                        "core:description": "[(37,4)-(38,0)]",
                        "shacl:datatype": "[(38,4)-(39,0)]",
                        "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/name/scalar/name": "[(34,2)-(40,0)]",
                        "shacl:pattern": "[(39,4)-(40,0)]"
                      }
                    }
                  }
                ],
                "shacl:minCount": [
                  {
                    "@value": 1
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "name"
                  }
                ],
                "smaps": {
                  "lexical": {
                    "shacl:minCount": "[(35,4)-(36,0)]",
                    "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/name": "[(34,2)-(40,0)]"
                  }
                }
              },
              {
                "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/birthday",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:path": [
                  {
                    "@id": "http://a.ml/vocabularies/data#birthday"
                  }
                ],
                "raml-shapes:range": [
                  {
                    "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/birthday/scalar/birthday",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#date"
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "birthday"
                      }
                    ],
                    "core:description": [
                      {
                        "@value": "The person's date of birth, represented as YYYY-MM-DD."
                      }
                    ],
                    "smaps": {
                      "type-property-lexical-info": {
                        "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/birthday/scalar/birthday": "[(41,4)-(41,8)]"
                      },
                      "lexical": {
                        "core:description": "[(42,4)-(43,0)]",
                        "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/birthday/scalar/birthday": "[(40,2)-(43,0)]",
                        "shacl:datatype": "[(41,4)-(42,0)]"
                      }
                    }
                  }
                ],
                "shacl:minCount": [
                  {
                    "@value": 1
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "birthday"
                  }
                ],
                "smaps": {
                  "lexical": {
                    "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/birthday": "[(40,2)-(43,0)]"
                  }
                }
              },
              {
                "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/favouriteTime",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:path": [
                  {
                    "@id": "http://a.ml/vocabularies/data#favouriteTime"
                  }
                ],
                "raml-shapes:range": [
                  {
                    "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/favouriteTime/scalar/favouriteTime",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#time"
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "favouriteTime"
                      }
                    ],
                    "core:description": [
                      {
                        "@value": "The person's favourite time of day"
                      }
                    ],
                    "smaps": {
                      "type-property-lexical-info": {
                        "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/favouriteTime/scalar/favouriteTime": "[(44,4)-(44,8)]"
                      },
                      "lexical": {
                        "core:description": "[(45,4)-(46,0)]",
                        "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/favouriteTime/scalar/favouriteTime": "[(43,2)-(46,0)]",
                        "shacl:datatype": "[(44,4)-(45,0)]"
                      }
                    }
                  }
                ],
                "shacl:minCount": [
                  {
                    "@value": 1
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "favouriteTime"
                  }
                ],
                "smaps": {
                  "lexical": {
                    "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/favouriteTime": "[(43,2)-(46,0)]"
                  }
                }
              },
              {
                "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/gender",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:path": [
                  {
                    "@id": "http://a.ml/vocabularies/data#gender"
                  }
                ],
                "raml-shapes:range": [
                  {
                    "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/gender/scalar/gender%3F",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "gender?"
                      }
                    ],
                    "core:description": [
                      {
                        "@value": "The person's gender. Possible values includes, but are not limited to, the following values:\n* \"male\" - Male gender.\n* \"female\" - Female gender.\n* \"other\" - Other.\n"
                      }
                    ],
                    "shacl:in": [
                      {
                        "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/gender/scalar/gender%3F/list",
                        "@type": "rdfs:Seq",
                        "rdfs:_1": [
                          {
                            "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/property/gender%3F/scalar/gender%3F/scalar_1",
                            "@type": [
                              "data:Scalar",
                              "data:Node",
                              "doc:DomainElement"
                            ],
                            "data:value": [
                              {
                                "@value": "male"
                              }
                            ],
                            "shacl:datatype": [
                              {
                                "@id": "http://www.w3.org/2001/XMLSchema#string"
                              }
                            ],
                            "core:name": [
                              {
                                "@value": "scalar_1"
                              }
                            ],
                            "smaps": {
                              "lexical": {
                                "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/property/gender%3F/scalar/gender%3F/scalar_1": "[(53,11)-(53,15)]"
                              }
                            }
                          }
                        ],
                        "rdfs:_2": [
                          {
                            "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/property/gender%3F/scalar/gender%3F/scalar_2",
                            "@type": [
                              "data:Scalar",
                              "data:Node",
                              "doc:DomainElement"
                            ],
                            "data:value": [
                              {
                                "@value": "female"
                              }
                            ],
                            "shacl:datatype": [
                              {
                                "@id": "http://www.w3.org/2001/XMLSchema#string"
                              }
                            ],
                            "core:name": [
                              {
                                "@value": "scalar_2"
                              }
                            ],
                            "smaps": {
                              "lexical": {
                                "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/property/gender%3F/scalar/gender%3F/scalar_2": "[(53,17)-(53,23)]"
                              }
                            }
                          }
                        ],
                        "rdfs:_3": [
                          {
                            "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/property/gender%3F/scalar/gender%3F/scalar_3",
                            "@type": [
                              "data:Scalar",
                              "data:Node",
                              "doc:DomainElement"
                            ],
                            "data:value": [
                              {
                                "@value": "other"
                              }
                            ],
                            "shacl:datatype": [
                              {
                                "@id": "http://www.w3.org/2001/XMLSchema#string"
                              }
                            ],
                            "core:name": [
                              {
                                "@value": "scalar_3"
                              }
                            ],
                            "smaps": {
                              "lexical": {
                                "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/property/gender%3F/scalar/gender%3F/scalar_3": "[(53,25)-(53,30)]"
                              }
                            }
                          }
                        ]
                      }
                    ],
                    "apiContract:examples": [
                      {
                        "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/property/gender%3F/scalar/gender%3F/example/Women",
                        "@type": [
                          "apiContract:Example",
                          "doc:DomainElement"
                        ],
                        "core:name": [
                          {
                            "@value": "Women"
                          }
                        ],
                        "doc:strict": [
                          {
                            "@value": true
                          }
                        ],
                        "doc:structuredValue": [
                          {
                            "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/property/gender%3F/scalar/gender%3F/example/Women/scalar_1",
                            "@type": [
                              "data:Scalar",
                              "data:Node",
                              "doc:DomainElement"
                            ],
                            "data:value": [
                              {
                                "@value": "female"
                              }
                            ],
                            "shacl:datatype": [
                              {
                                "@id": "http://www.w3.org/2001/XMLSchema#string"
                              }
                            ],
                            "core:name": [
                              {
                                "@value": "scalar_1"
                              }
                            ],
                            "smaps": {
                              "lexical": {
                                "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/property/gender%3F/scalar/gender%3F/example/Women/scalar_1": "[(55,13)-(55,19)]"
                              }
                            }
                          }
                        ],
                        "doc:raw": [
                          {
                            "@value": "female"
                          }
                        ],
                        "smaps": {
                          "synthesized-field": {
                            "doc:strict": "true"
                          },
                          "lexical": {
                            "doc:raw": "[(55,13)-(55,19)]",
                            "core:name": "[(55,6)-(56,0)]",
                            "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/property/gender%3F/scalar/gender%3F/example/Women": "[(55,6)-(56,0)]",
                            "doc:structuredValue": "[(55,13)-(55,19)]"
                          }
                        }
                      },
                      {
                        "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/property/gender%3F/scalar/gender%3F/example/Man",
                        "@type": [
                          "apiContract:Example",
                          "doc:DomainElement"
                        ],
                        "core:name": [
                          {
                            "@value": "Man"
                          }
                        ],
                        "doc:strict": [
                          {
                            "@value": true
                          }
                        ],
                        "doc:structuredValue": [
                          {
                            "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/property/gender%3F/scalar/gender%3F/example/Man/scalar_1",
                            "@type": [
                              "data:Scalar",
                              "data:Node",
                              "doc:DomainElement"
                            ],
                            "data:value": [
                              {
                                "@value": "male"
                              }
                            ],
                            "shacl:datatype": [
                              {
                                "@id": "http://www.w3.org/2001/XMLSchema#string"
                              }
                            ],
                            "core:name": [
                              {
                                "@value": "scalar_1"
                              }
                            ],
                            "smaps": {
                              "lexical": {
                                "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/property/gender%3F/scalar/gender%3F/example/Man/scalar_1": "[(56,11)-(56,15)]"
                              }
                            }
                          }
                        ],
                        "doc:raw": [
                          {
                            "@value": "male"
                          }
                        ],
                        "smaps": {
                          "synthesized-field": {
                            "doc:strict": "true"
                          },
                          "lexical": {
                            "doc:raw": "[(56,11)-(56,15)]",
                            "core:name": "[(56,6)-(57,0)]",
                            "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/property/gender%3F/scalar/gender%3F/example/Man": "[(56,6)-(57,0)]",
                            "doc:structuredValue": "[(56,11)-(56,15)]"
                          }
                        }
                      },
                      {
                        "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/property/gender%3F/scalar/gender%3F/example/Elmo",
                        "@type": [
                          "apiContract:Example",
                          "doc:DomainElement"
                        ],
                        "core:name": [
                          {
                            "@value": "Elmo"
                          }
                        ],
                        "doc:strict": [
                          {
                            "@value": true
                          }
                        ],
                        "doc:structuredValue": [
                          {
                            "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/property/gender%3F/scalar/gender%3F/example/Elmo/scalar_1",
                            "@type": [
                              "data:Scalar",
                              "data:Node",
                              "doc:DomainElement"
                            ],
                            "data:value": [
                              {
                                "@value": "other"
                              }
                            ],
                            "shacl:datatype": [
                              {
                                "@id": "http://www.w3.org/2001/XMLSchema#string"
                              }
                            ],
                            "core:name": [
                              {
                                "@value": "scalar_1"
                              }
                            ],
                            "smaps": {
                              "lexical": {
                                "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/property/gender%3F/scalar/gender%3F/example/Elmo/scalar_1": "[(57,12)-(57,17)]"
                              }
                            }
                          }
                        ],
                        "doc:raw": [
                          {
                            "@value": "other"
                          }
                        ],
                        "smaps": {
                          "synthesized-field": {
                            "doc:strict": "true"
                          },
                          "lexical": {
                            "doc:raw": "[(57,12)-(57,17)]",
                            "core:name": "[(57,6)-(58,0)]",
                            "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/property/gender%3F/scalar/gender%3F/example/Elmo": "[(57,6)-(58,0)]",
                            "doc:structuredValue": "[(57,12)-(57,17)]"
                          }
                        }
                      }
                    ],
                    "smaps": {
                      "type-property-lexical-info": {
                        "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/gender/scalar/gender%3F": "[(47,4)-(47,8)]"
                      },
                      "lexical": {
                        "shacl:in": "[(53,4)-(54,0)]",
                        "shacl:datatype": "[(47,4)-(48,0)]",
                        "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/gender/scalar/gender%3F": "[(46,2)-(58,0)]",
                        "core:description": "[(48,4)-(53,0)]"
                      }
                    }
                  }
                ],
                "shacl:minCount": [
                  {
                    "@value": 0
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "gender"
                  }
                ],
                "smaps": {
                  "lexical": {
                    "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/gender": "[(46,2)-(58,0)]"
                  }
                }
              },
              {
                "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/favouriteNumber",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:path": [
                  {
                    "@id": "http://a.ml/vocabularies/data#favouriteNumber"
                  }
                ],
                "raml-shapes:range": [
                  {
                    "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/favouriteNumber/scalar/favouriteNumber",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://a.ml/vocabularies/shapes#number"
                      }
                    ],
                    "shacl:minInclusive": [
                      {
                        "@value": 0.0
                      }
                    ],
                    "shacl:maxInclusive": [
                      {
                        "@value": 9999.0
                      }
                    ],
                    "raml-shapes:multipleOf": [
                      {
                        "@value": 5.0
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "favouriteNumber"
                      }
                    ],
                    "core:name": [
                      {
                        "@value": "Favourite number"
                      }
                    ],
                    "apiContract:examples": [
                      {
                        "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/property/favouriteNumber/scalar/favouriteNumber/example/default-example",
                        "@type": [
                          "apiContract:Example",
                          "doc:DomainElement"
                        ],
                        "doc:strict": [
                          {
                            "@value": true
                          }
                        ],
                        "doc:structuredValue": [
                          {
                            "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/property/favouriteNumber/scalar/favouriteNumber/example/default-example/scalar_1",
                            "@type": [
                              "data:Scalar",
                              "data:Node",
                              "doc:DomainElement"
                            ],
                            "data:value": [
                              {
                                "@value": "25"
                              }
                            ],
                            "shacl:datatype": [
                              {
                                "@id": "http://www.w3.org/2001/XMLSchema#integer"
                              }
                            ],
                            "core:name": [
                              {
                                "@value": "scalar_1"
                              }
                            ],
                            "smaps": {
                              "lexical": {
                                "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/property/favouriteNumber/scalar/favouriteNumber/example/default-example/scalar_1": "[(65,13)-(65,15)]"
                              }
                            }
                          }
                        ],
                        "doc:raw": [
                          {
                            "@value": "25"
                          }
                        ],
                        "smaps": {
                          "synthesized-field": {
                            "doc:strict": "true"
                          },
                          "lexical": {
                            "doc:raw": "[(65,13)-(65,15)]",
                            "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/property/favouriteNumber/scalar/favouriteNumber/example/default-example": "[(65,13)-(65,15)]",
                            "doc:structuredValue": "[(65,13)-(65,15)]"
                          }
                        }
                      }
                    ],
                    "smaps": {
                      "type-property-lexical-info": {
                        "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/favouriteNumber/scalar/favouriteNumber": "[(59,4)-(59,8)]"
                      },
                      "lexical": {
                        "core:name": "[(64,4)-(65,0)]",
                        "shacl:maxInclusive": "[(61,4)-(62,0)]",
                        "shacl:datatype": "[(59,4)-(60,0)]",
                        "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/favouriteNumber/scalar/favouriteNumber": "[(58,2)-(66,0)]",
                        "shacl:minInclusive": "[(60,4)-(61,0)]",
                        "raml-shapes:multipleOf": "[(62,4)-(63,0)]"
                      }
                    }
                  }
                ],
                "shacl:minCount": [
                  {
                    "@value": 1
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "favouriteNumber"
                  }
                ],
                "smaps": {
                  "lexical": {
                    "shacl:minCount": "[(63,4)-(64,0)]",
                    "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/favouriteNumber": "[(58,2)-(66,0)]"
                  }
                }
              },
              {
                "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/url",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:path": [
                  {
                    "@id": "http://a.ml/vocabularies/data#url"
                  }
                ],
                "raml-shapes:range": [
                  {
                    "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/url/scalar/url",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "url"
                      }
                    ],
                    "core:description": [
                      {
                        "@value": "The URL of this person's profile."
                      }
                    ],
                    "smaps": {
                      "type-property-lexical-info": {
                        "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/url/scalar/url": "[(67,4)-(67,8)]"
                      },
                      "lexical": {
                        "core:description": "[(68,4)-(69,0)]",
                        "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/url/scalar/url": "[(66,2)-(69,0)]",
                        "shacl:datatype": "[(67,4)-(68,0)]"
                      }
                    }
                  }
                ],
                "shacl:minCount": [
                  {
                    "@value": 1
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "url"
                  }
                ],
                "smaps": {
                  "lexical": {
                    "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/url": "[(66,2)-(69,0)]"
                  }
                }
              },
              {
                "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/image",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:path": [
                  {
                    "@id": "http://a.ml/vocabularies/data#image"
                  }
                ],
                "raml-shapes:range": [
                  {
                    "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/image/image",
                    "@type": [
                      "shacl:NodeShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "doc:link-target": [
                      {
                        "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/image.raml#/type"
                      }
                    ],
                    "doc:link-label": [
                      {
                        "@value": "image.raml"
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "image"
                      }
                    ],
                    "smaps": {
                      "lexical": {
                        "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/image/image": "[(69,18)-(69,28)]"
                      }
                    }
                  }
                ],
                "shacl:minCount": [
                  {
                    "@value": 1
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "image"
                  }
                ],
                "smaps": {
                  "lexical": {
                    "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/image": "[(69,2)-(70,0)]"
                  }
                }
              },
              {
                "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/tagline",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:path": [
                  {
                    "@id": "http://a.ml/vocabularies/data#tagline"
                  }
                ],
                "raml-shapes:range": [
                  {
                    "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/tagline/scalar/tagline",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "tagline"
                      }
                    ],
                    "core:description": [
                      {
                        "@value": "The brief description (tagline) of this person."
                      }
                    ],
                    "smaps": {
                      "type-property-lexical-info": {
                        "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/tagline/scalar/tagline": "[(71,4)-(71,8)]"
                      },
                      "lexical": {
                        "core:description": "[(72,4)-(73,0)]",
                        "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/tagline/scalar/tagline": "[(70,2)-(73,0)]",
                        "shacl:datatype": "[(71,4)-(72,0)]"
                      }
                    }
                  }
                ],
                "shacl:minCount": [
                  {
                    "@value": 1
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "tagline"
                  }
                ],
                "smaps": {
                  "lexical": {
                    "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/tagline": "[(70,2)-(73,0)]"
                  }
                }
              },
              {
                "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/language",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:path": [
                  {
                    "@id": "http://a.ml/vocabularies/data#language"
                  }
                ],
                "raml-shapes:range": [
                  {
                    "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/language/scalar/language",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "language"
                      }
                    ],
                    "core:description": [
                      {
                        "@value": "The user's preferred language for rendering."
                      }
                    ],
                    "smaps": {
                      "type-property-lexical-info": {
                        "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/language/scalar/language": "[(74,4)-(74,8)]"
                      },
                      "lexical": {
                        "core:description": "[(75,4)-(76,0)]",
                        "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/language/scalar/language": "[(73,2)-(76,0)]",
                        "shacl:datatype": "[(74,4)-(75,0)]"
                      }
                    }
                  }
                ],
                "shacl:minCount": [
                  {
                    "@value": 1
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "language"
                  }
                ],
                "smaps": {
                  "lexical": {
                    "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/language": "[(73,2)-(76,0)]"
                  }
                }
              },
              {
                "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/newsletter",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:path": [
                  {
                    "@id": "http://a.ml/vocabularies/data#newsletter"
                  }
                ],
                "raml-shapes:range": [
                  {
                    "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/newsletter/scalar/newsletter",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#boolean"
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "newsletter"
                      }
                    ],
                    "shacl:defaultValue": [
                      {
                        "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/property/newsletter/scalar/newsletter/default/scalar_1",
                        "@type": [
                          "data:Scalar",
                          "data:Node",
                          "doc:DomainElement"
                        ],
                        "data:value": [
                          {
                            "@value": "false"
                          }
                        ],
                        "shacl:datatype": [
                          {
                            "@id": "http://www.w3.org/2001/XMLSchema#boolean"
                          }
                        ],
                        "core:name": [
                          {
                            "@value": "scalar_1"
                          }
                        ],
                        "smaps": {
                          "lexical": {
                            "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/property/newsletter/scalar/newsletter/default/scalar_1": "[(79,13)-(79,18)]"
                          }
                        }
                      }
                    ],
                    "shacl:defaultValueStr": [
                      {
                        "@value": "false"
                      }
                    ],
                    "smaps": {
                      "type-property-lexical-info": {
                        "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/newsletter/scalar/newsletter": "[(77,4)-(77,8)]"
                      },
                      "lexical": {
                        "shacl:defaultValueStr": "[(79,4)-(80,0)]",
                        "shacl:datatype": "[(77,4)-(78,0)]",
                        "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/newsletter/scalar/newsletter": "[(76,2)-(80,0)]",
                        "shacl:defaultValue": "[(79,4)-(80,0)]"
                      }
                    }
                  }
                ],
                "shacl:minCount": [
                  {
                    "@value": 0
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "newsletter"
                  }
                ],
                "smaps": {
                  "lexical": {
                    "shacl:minCount": "[(78,4)-(79,0)]",
                    "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/newsletter": "[(76,2)-(80,0)]"
                  }
                }
              },
              {
                "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/age",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:path": [
                  {
                    "@id": "http://a.ml/vocabularies/data#age"
                  }
                ],
                "raml-shapes:range": [
                  {
                    "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/age/scalar/age",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#integer"
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "age"
                      }
                    ],
                    "core:description": [
                      {
                        "@value": "Very unpractical property to have in a data store.\n"
                      }
                    ],
                    "smaps": {
                      "type-property-lexical-info": {
                        "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/age/scalar/age": "[(81,4)-(81,8)]"
                      },
                      "lexical": {
                        "core:description": "[(83,4)-(85,0)]",
                        "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/age/scalar/age": "[(80,2)-(85,0)]",
                        "shacl:datatype": "[(81,4)-(82,0)]"
                      }
                    }
                  }
                ],
                "shacl:minCount": [
                  {
                    "@value": 0
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "age"
                  }
                ],
                "smaps": {
                  "lexical": {
                    "shacl:minCount": "[(82,4)-(83,0)]",
                    "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/age": "[(80,2)-(85,0)]"
                  }
                }
              },
              {
                "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/created",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:path": [
                  {
                    "@id": "http://a.ml/vocabularies/data#created"
                  }
                ],
                "raml-shapes:range": [
                  {
                    "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/created/scalar/created",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://a.ml/vocabularies/shapes#dateTimeOnly"
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "created"
                      }
                    ],
                    "apiContract:examples": [
                      {
                        "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/property/created/scalar/created/example/default-example",
                        "@type": [
                          "apiContract:Example",
                          "doc:DomainElement"
                        ],
                        "doc:strict": [
                          {
                            "@value": true
                          }
                        ],
                        "doc:structuredValue": [
                          {
                            "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/property/created/scalar/created/example/default-example/scalar_1",
                            "@type": [
                              "data:Scalar",
                              "data:Node",
                              "doc:DomainElement"
                            ],
                            "data:value": [
                              {
                                "@value": "2018-04-09T19:10:15"
                              }
                            ],
                            "shacl:datatype": [
                              {
                                "@id": "http://a.ml/vocabularies/shapes#dateTimeOnly"
                              }
                            ],
                            "core:name": [
                              {
                                "@value": "scalar_1"
                              }
                            ],
                            "smaps": {
                              "lexical": {
                                "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/property/created/scalar/created/example/default-example/scalar_1": "[(88,13)-(88,32)]"
                              }
                            }
                          }
                        ],
                        "doc:raw": [
                          {
                            "@value": "2018-04-09T19:10:15"
                          }
                        ],
                        "smaps": {
                          "synthesized-field": {
                            "doc:strict": "true"
                          },
                          "lexical": {
                            "doc:raw": "[(88,13)-(88,32)]",
                            "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/property/created/scalar/created/example/default-example": "[(88,13)-(88,32)]",
                            "doc:structuredValue": "[(88,13)-(88,32)]"
                          }
                        }
                      }
                    ],
                    "smaps": {
                      "type-property-lexical-info": {
                        "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/created/scalar/created": "[(86,4)-(86,8)]"
                      },
                      "lexical": {
                        "shacl:datatype": "[(86,4)-(87,0)]",
                        "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/created/scalar/created": "[(85,2)-(89,0)]"
                      }
                    }
                  }
                ],
                "shacl:minCount": [
                  {
                    "@value": 0
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "created"
                  }
                ],
                "smaps": {
                  "lexical": {
                    "shacl:minCount": "[(87,4)-(88,0)]",
                    "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/created": "[(85,2)-(89,0)]"
                  }
                }
              },
              {
                "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/fietype",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:path": [
                  {
                    "@id": "http://a.ml/vocabularies/data#fietype"
                  }
                ],
                "raml-shapes:range": [
                  {
                    "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/fietype/default-file",
                    "@type": [
                      "raml-shapes:FileShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "raml-shapes:fileType": [
                      {
                        "@value": "image/png"
                      },
                      {
                        "@value": "image/jpeg"
                      },
                      {
                        "@value": "image/jpg"
                      },
                      {
                        "@value": "image/gif"
                      }
                    ],
                    "shacl:minLength": [
                      {
                        "@value": 10
                      }
                    ],
                    "shacl:maxLength": [
                      {
                        "@value": 1000
                      }
                    ],
                    "smaps": {
                      "type-property-lexical-info": {
                        "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/fietype/default-file": "[(91,4)-(91,8)]"
                      },
                      "lexical": {
                        "shacl:maxLength": "[(98,4)-(99,0)]",
                        "raml-shapes:fileType": "[(92,14)-(97,0)]",
                        "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/fietype/default-file": "[(90,0)-(99,0)]",
                        "shacl:minLength": "[(97,4)-(98,0)]"
                      }
                    }
                  }
                ],
                "shacl:minCount": [
                  {
                    "@value": 0
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "fietype"
                  }
                ],
                "smaps": {
                  "lexical": {
                    "shacl:minCount": "[(90,4)-(91,0)]",
                    "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/fietype": "[(89,2)-(99,0)]"
                  }
                }
              },
              {
                "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/nillable",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:path": [
                  {
                    "@id": "http://a.ml/vocabularies/data#nillable"
                  }
                ],
                "raml-shapes:range": [
                  {
                    "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/nillable/union/nillable",
                    "@type": [
                      "raml-shapes:UnionShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:name": [
                      {
                        "@value": "nillable"
                      }
                    ],
                    "raml-shapes:inherits": [
                      {
                        "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/property/nillable/union/nillable/union/default-union",
                        "@type": [
                          "raml-shapes:UnionShape",
                          "raml-shapes:AnyShape",
                          "shacl:Shape",
                          "raml-shapes:Shape",
                          "doc:DomainElement"
                        ],
                        "raml-shapes:anyOf": [
                          {
                            "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/property/nillable/union/nillable/scalar/scalar-expression-0",
                            "@type": [
                              "raml-shapes:ScalarShape",
                              "raml-shapes:AnyShape",
                              "shacl:Shape",
                              "raml-shapes:Shape",
                              "doc:DomainElement"
                            ],
                            "shacl:datatype": [
                              {
                                "@id": "http://www.w3.org/2001/XMLSchema#string"
                              }
                            ]
                          },
                          {
                            "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/property/nillable/union/nillable/nil/scalar-expression-2",
                            "@type": [
                              "raml-shapes:NilShape",
                              "shacl:Shape",
                              "raml-shapes:Shape",
                              "doc:DomainElement"
                            ]
                          }
                        ],
                        "smaps": {
                          "lexical": {
                            "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/property/nillable/union/nillable/union/default-union": "[(100,4)-(101,0)]"
                          },
                          "type-expression": {
                            "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/property/nillable/union/nillable/union/default-union": "string | nil"
                          }
                        }
                      }
                    ],
                    "smaps": {
                      "type-property-lexical-info": {
                        "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/nillable/union/nillable": "[(100,4)-(100,8)]"
                      },
                      "lexical": {
                        "raml-shapes:inherits": "[(100,4)-(101,0)]",
                        "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/nillable/union/nillable": "[(99,11)-(102,0)]"
                      }
                    }
                  }
                ],
                "shacl:minCount": [
                  {
                    "@value": 1
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "nillable"
                  }
                ],
                "smaps": {
                  "lexical": {
                    "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type/property/nillable": "[(99,2)-(102,0)]"
                  }
                }
              }
            ],
            "shacl:name": [
              {
                "@value": "type"
              }
            ],
            "core:name": [
              {
                "@value": "A person resource"
              }
            ],
            "core:description": [
              {
                "@value": "An object representing a person in the API.\nThis object will be used in all methods returning a Person or list of people.\n"
              }
            ],
            "raml-shapes:inherits": [
              {
                "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/resource.raml#/type/linked_1",
                "@type": [
                  "shacl:NodeShape",
                  "raml-shapes:AnyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "doc:link-target": [
                  {
                    "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/resource.raml#/type"
                  }
                ],
                "doc:link-label": [
                  {
                    "@value": "resource.raml"
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "type"
                  }
                ],
                "smaps": {
                  "auto-generated-name": {
                    "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/resource.raml#/type/linked_1": ""
                  },
                  "lexical": {
                    "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/resource.raml#/type/linked_1": "[(8,6)-(8,28)]"
                  }
                }
              }
            ],
            "apiContract:examples": [
              {
                "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/example/default-example",
                "@type": [
                  "apiContract:Example",
                  "doc:DomainElement"
                ],
                "doc:strict": [
                  {
                    "@value": true
                  }
                ],
                "doc:structuredValue": [
                  {
                    "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/example/default-example/object_1",
                    "@type": [
                      "data:Object",
                      "data:Node",
                      "doc:DomainElement"
                    ],
                    "data:id": [
                      {
                        "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/example/default-example/object_1/scalar_2",
                        "@type": [
                          "data:Scalar",
                          "data:Node",
                          "doc:DomainElement"
                        ],
                        "data:value": [
                          {
                            "@value": "R34fg663H9KW9MMSKISIhTs1dR7Hss7e"
                          }
                        ],
                        "shacl:datatype": [
                          {
                            "@id": "http://www.w3.org/2001/XMLSchema#string"
                          }
                        ],
                        "core:name": [
                          {
                            "@value": "scalar_2"
                          }
                        ],
                        "smaps": {
                          "lexical": {
                            "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/example/default-example/object_1/scalar_2": "[(10,6)-(10,40)]"
                          }
                        }
                      }
                    ],
                    "data:name": [
                      {
                        "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/example/default-example/object_1/scalar_3",
                        "@type": [
                          "data:Scalar",
                          "data:Node",
                          "doc:DomainElement"
                        ],
                        "data:value": [
                          {
                            "@value": "Pawel Psztyc"
                          }
                        ],
                        "shacl:datatype": [
                          {
                            "@id": "http://www.w3.org/2001/XMLSchema#string"
                          }
                        ],
                        "core:name": [
                          {
                            "@value": "scalar_3"
                          }
                        ],
                        "smaps": {
                          "lexical": {
                            "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/example/default-example/object_1/scalar_3": "[(11,8)-(11,22)]"
                          }
                        }
                      }
                    ],
                    "data:birthday": [
                      {
                        "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/example/default-example/object_1/scalar_4",
                        "@type": [
                          "data:Scalar",
                          "data:Node",
                          "doc:DomainElement"
                        ],
                        "data:value": [
                          {
                            "@value": "1983-10-20"
                          }
                        ],
                        "shacl:datatype": [
                          {
                            "@id": "http://www.w3.org/2001/XMLSchema#string"
                          }
                        ],
                        "core:name": [
                          {
                            "@value": "scalar_4"
                          }
                        ],
                        "smaps": {
                          "lexical": {
                            "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/example/default-example/object_1/scalar_4": "[(12,12)-(12,24)]"
                          }
                        }
                      }
                    ],
                    "data:gender": [
                      {
                        "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/example/default-example/object_1/scalar_5",
                        "@type": [
                          "data:Scalar",
                          "data:Node",
                          "doc:DomainElement"
                        ],
                        "data:value": [
                          {
                            "@value": "male"
                          }
                        ],
                        "shacl:datatype": [
                          {
                            "@id": "http://www.w3.org/2001/XMLSchema#string"
                          }
                        ],
                        "core:name": [
                          {
                            "@value": "scalar_5"
                          }
                        ],
                        "smaps": {
                          "lexical": {
                            "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/example/default-example/object_1/scalar_5": "[(13,10)-(13,14)]"
                          }
                        }
                      }
                    ],
                    "data:url": [
                      {
                        "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/example/default-example/object_1/scalar_6",
                        "@type": [
                          "data:Scalar",
                          "data:Node",
                          "doc:DomainElement"
                        ],
                        "data:value": [
                          {
                            "@value": "https://domain.com/profile/pawel.psztyc"
                          }
                        ],
                        "shacl:datatype": [
                          {
                            "@id": "http://www.w3.org/2001/XMLSchema#string"
                          }
                        ],
                        "core:name": [
                          {
                            "@value": "scalar_6"
                          }
                        ],
                        "smaps": {
                          "lexical": {
                            "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/example/default-example/object_1/scalar_6": "[(14,7)-(14,48)]"
                          }
                        }
                      }
                    ],
                    "data:image": [
                      {
                        "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/example/default-example/object_1/object_7",
                        "@type": [
                          "data:Object",
                          "data:Node",
                          "doc:DomainElement"
                        ],
                        "data:url": [
                          {
                            "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/example/default-example/object_1/object_7/scalar_8",
                            "@type": [
                              "data:Scalar",
                              "data:Node",
                              "doc:DomainElement"
                            ],
                            "data:value": [
                              {
                                "@value": "https://domain.com/profile/pawel.psztyc/image"
                              }
                            ],
                            "shacl:datatype": [
                              {
                                "@id": "http://www.w3.org/2001/XMLSchema#string"
                              }
                            ],
                            "core:name": [
                              {
                                "@value": "scalar_8"
                              }
                            ],
                            "smaps": {
                              "lexical": {
                                "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/example/default-example/object_1/object_7/scalar_8": "[(16,9)-(16,54)]"
                              }
                            }
                          }
                        ],
                        "data:thumb": [
                          {
                            "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/example/default-example/object_1/object_7/scalar_9",
                            "@type": [
                              "data:Scalar",
                              "data:Node",
                              "doc:DomainElement"
                            ],
                            "data:value": [
                              {
                                "@value": "https://domain.com/profile/pawel.psztyc/image/thumb"
                              }
                            ],
                            "shacl:datatype": [
                              {
                                "@id": "http://www.w3.org/2001/XMLSchema#string"
                              }
                            ],
                            "core:name": [
                              {
                                "@value": "scalar_9"
                              }
                            ],
                            "smaps": {
                              "lexical": {
                                "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/example/default-example/object_1/object_7/scalar_9": "[(17,11)-(17,62)]"
                              }
                            }
                          }
                        ],
                        "core:name": [
                          {
                            "@value": "object_7"
                          }
                        ],
                        "smaps": {
                          "lexical": {
                            "data:thumb": "[(17,4)-(18,0)]",
                            "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/example/default-example/object_1/object_7": "[(16,0)-(18,0)]",
                            "data:url": "[(16,4)-(17,0)]"
                          }
                        }
                      }
                    ],
                    "data:tagline": [
                      {
                        "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/example/default-example/object_1/scalar_10",
                        "@type": [
                          "data:Scalar",
                          "data:Node",
                          "doc:DomainElement"
                        ],
                        "data:value": [
                          {
                            "@value": "Some text about me."
                          }
                        ],
                        "shacl:datatype": [
                          {
                            "@id": "http://www.w3.org/2001/XMLSchema#string"
                          }
                        ],
                        "core:name": [
                          {
                            "@value": "scalar_10"
                          }
                        ],
                        "smaps": {
                          "lexical": {
                            "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/example/default-example/object_1/scalar_10": "[(18,11)-(18,30)]"
                          }
                        }
                      }
                    ],
                    "data:language": [
                      {
                        "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/example/default-example/object_1/scalar_11",
                        "@type": [
                          "data:Scalar",
                          "data:Node",
                          "doc:DomainElement"
                        ],
                        "data:value": [
                          {
                            "@value": "en_GB"
                          }
                        ],
                        "shacl:datatype": [
                          {
                            "@id": "http://www.w3.org/2001/XMLSchema#string"
                          }
                        ],
                        "core:name": [
                          {
                            "@value": "scalar_11"
                          }
                        ],
                        "smaps": {
                          "lexical": {
                            "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/example/default-example/object_1/scalar_11": "[(19,12)-(19,17)]"
                          }
                        }
                      }
                    ],
                    "data:etag": [
                      {
                        "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/example/default-example/object_1/scalar_12",
                        "@type": [
                          "data:Scalar",
                          "data:Node",
                          "doc:DomainElement"
                        ],
                        "data:value": [
                          {
                            "@value": "W\\244m4n5kj3gbn2nj4k4n4"
                          }
                        ],
                        "shacl:datatype": [
                          {
                            "@id": "http://www.w3.org/2001/XMLSchema#string"
                          }
                        ],
                        "core:name": [
                          {
                            "@value": "scalar_12"
                          }
                        ],
                        "smaps": {
                          "lexical": {
                            "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/example/default-example/object_1/scalar_12": "[(20,8)-(20,34)]"
                          }
                        }
                      }
                    ],
                    "data:favouriteNumber": [
                      {
                        "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/example/default-example/object_1/scalar_13",
                        "@type": [
                          "data:Scalar",
                          "data:Node",
                          "doc:DomainElement"
                        ],
                        "data:value": [
                          {
                            "@value": "10"
                          }
                        ],
                        "shacl:datatype": [
                          {
                            "@id": "http://www.w3.org/2001/XMLSchema#integer"
                          }
                        ],
                        "core:name": [
                          {
                            "@value": "scalar_13"
                          }
                        ],
                        "smaps": {
                          "lexical": {
                            "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/example/default-example/object_1/scalar_13": "[(21,19)-(21,21)]"
                          }
                        }
                      }
                    ],
                    "data:favouriteTime": [
                      {
                        "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/example/default-example/object_1/scalar_14",
                        "@type": [
                          "data:Scalar",
                          "data:Node",
                          "doc:DomainElement"
                        ],
                        "data:value": [
                          {
                            "@value": "10:29:52"
                          }
                        ],
                        "shacl:datatype": [
                          {
                            "@id": "http://www.w3.org/2001/XMLSchema#string"
                          }
                        ],
                        "core:name": [
                          {
                            "@value": "scalar_14"
                          }
                        ],
                        "smaps": {
                          "lexical": {
                            "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/example/default-example/object_1/scalar_14": "[(22,17)-(22,25)]"
                          }
                        }
                      }
                    ],
                    "data:nillable": [
                      {
                        "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/example/default-example/object_1/scalar_15",
                        "@type": [
                          "data:Scalar",
                          "data:Node",
                          "doc:DomainElement"
                        ],
                        "data:value": [
                          {
                            "@value": "null"
                          }
                        ],
                        "shacl:datatype": [
                          {
                            "@id": "http://www.w3.org/2001/XMLSchema#nil"
                          }
                        ],
                        "core:name": [
                          {
                            "@value": "scalar_15"
                          }
                        ],
                        "smaps": {
                          "lexical": {
                            "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/example/default-example/object_1/scalar_15": "[(23,12)-(23,16)]"
                          }
                        }
                      }
                    ],
                    "core:name": [
                      {
                        "@value": "object_1"
                      }
                    ],
                    "smaps": {
                      "lexical": {
                        "data:nillable": "[(23,2)-(25,0)]",
                        "data:favouriteNumber": "[(21,2)-(22,0)]",
                        "data:language": "[(19,2)-(20,0)]",
                        "data:image": "[(15,2)-(18,0)]",
                        "data:gender": "[(13,2)-(14,0)]",
                        "data:name": "[(11,2)-(12,0)]",
                        "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/example/default-example/object_1": "[(10,0)-(25,0)]",
                        "data:id": "[(10,2)-(11,0)]",
                        "data:birthday": "[(12,2)-(13,0)]",
                        "data:url": "[(14,2)-(15,0)]",
                        "data:tagline": "[(18,2)-(19,0)]",
                        "data:etag": "[(20,2)-(21,0)]",
                        "data:favouriteTime": "[(22,2)-(23,0)]"
                      }
                    }
                  }
                ],
                "doc:raw": [
                  {
                    "@value": "\n  id: \"R34fg663H9KW9MMSKISIhTs1dR7Hss7e\"\n  name: \"Pawel Psztyc\"\n  birthday: \"1983-10-20\"\n  gender: male\n  url: \"https://domain.com/profile/pawel.psztyc\"\n  image:\n    url: https://domain.com/profile/pawel.psztyc/image\n    thumb: https://domain.com/profile/pawel.psztyc/image/thumb\n  tagline: Some text about me.\n  language: en_GB\n  etag: \"W\\\\244m4n5kj3gbn2nj4k4n4\"\n  favouriteNumber: 10\n  favouriteTime: 10:29:52\n  nillable: null\n\n"
                  }
                ],
                "smaps": {
                  "synthesized-field": {
                    "doc:strict": "true"
                  },
                  "lexical": {
                    "doc:raw": "[(10,0)-(25,0)]",
                    "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/shape/example/default-example": "[(9,0)-(25,0)]",
                    "doc:structuredValue": "[(9,8)-(25,0)]"
                  }
                }
              }
            ],
            "smaps": {
              "source-vendor": {
                "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type": "RAML 1.0"
              },
              "lexical": {
                "raml-shapes:inherits": "[(8,0)-(9,0)]",
                "core:name": "[(3,0)-(4,0)]",
                "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type": "[(3,0)-(102,0)]",
                "shacl:property": "[(25,0)-(102,0)]",
                "core:description": "[(4,0)-(8,0)]"
              },
              "type-property-lexical-info": {
                "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type": "[(8,0)-(8,4)]"
              }
            }
          }
        ],
        "doc:references": [
          {
            "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/image.raml",
            "@type": [
              "raml-shapes:DataTypeFragment",
              "doc:Fragment",
              "doc:Unit"
            ],
            "doc:encodes": [
              {
                "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/image.raml#/type",
                "@type": [
                  "shacl:NodeShape",
                  "raml-shapes:AnyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:closed": [
                  {
                    "@value": false
                  }
                ],
                "shacl:property": [
                  {
                    "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/image.raml#/type/property/url",
                    "@type": [
                      "shacl:PropertyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:path": [
                      {
                        "@id": "http://a.ml/vocabularies/data#url"
                      }
                    ],
                    "raml-shapes:range": [
                      {
                        "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/image.raml#/type/property/url/scalar/url",
                        "@type": [
                          "raml-shapes:ScalarShape",
                          "raml-shapes:AnyShape",
                          "shacl:Shape",
                          "raml-shapes:Shape",
                          "doc:DomainElement"
                        ],
                        "shacl:datatype": [
                          {
                            "@id": "http://www.w3.org/2001/XMLSchema#string"
                          }
                        ],
                        "shacl:name": [
                          {
                            "@value": "url"
                          }
                        ],
                        "core:description": [
                          {
                            "@value": "The URL of the image.\nTo resize the image and crop it to a square, append the query string **?sz=x**, where x is the dimension in pixels of each side.\n"
                          }
                        ],
                        "smaps": {
                          "type-property-lexical-info": {
                            "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/image.raml#/type/property/url/scalar/url": "[(12,4)-(12,8)]"
                          },
                          "lexical": {
                            "core:description": "[(13,4)-(16,0)]",
                            "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/image.raml#/type/property/url/scalar/url": "[(11,2)-(16,0)]",
                            "shacl:datatype": "[(12,4)-(13,0)]"
                          }
                        }
                      }
                    ],
                    "shacl:minCount": [
                      {
                        "@value": 1
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "url"
                      }
                    ],
                    "smaps": {
                      "lexical": {
                        "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/image.raml#/type/property/url": "[(11,2)-(16,0)]"
                      }
                    }
                  },
                  {
                    "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/image.raml#/type/property/thumb",
                    "@type": [
                      "shacl:PropertyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:path": [
                      {
                        "@id": "http://a.ml/vocabularies/data#thumb"
                      }
                    ],
                    "raml-shapes:range": [
                      {
                        "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/image.raml#/type/property/thumb/scalar/thumb",
                        "@type": [
                          "raml-shapes:ScalarShape",
                          "raml-shapes:AnyShape",
                          "shacl:Shape",
                          "raml-shapes:Shape",
                          "doc:DomainElement"
                        ],
                        "shacl:datatype": [
                          {
                            "@id": "http://www.w3.org/2001/XMLSchema#string"
                          }
                        ],
                        "shacl:name": [
                          {
                            "@value": "thumb"
                          }
                        ],
                        "core:name": [
                          {
                            "@value": "Thumbnail"
                          }
                        ],
                        "core:description": [
                          {
                            "@value": "An URL to the thumbnail of the image. Thumbnails are 60x60px cropped images of the original image.\n"
                          }
                        ],
                        "smaps": {
                          "type-property-lexical-info": {
                            "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/image.raml#/type/property/thumb/scalar/thumb": "[(17,4)-(17,8)]"
                          },
                          "lexical": {
                            "core:description": "[(19,4)-(21,0)]",
                            "shacl:datatype": "[(17,4)-(18,0)]",
                            "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/image.raml#/type/property/thumb/scalar/thumb": "[(16,2)-(21,0)]",
                            "core:name": "[(18,4)-(19,0)]"
                          }
                        }
                      }
                    ],
                    "shacl:minCount": [
                      {
                        "@value": 1
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "thumb"
                      }
                    ],
                    "smaps": {
                      "lexical": {
                        "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/image.raml#/type/property/thumb": "[(16,2)-(21,0)]"
                      }
                    }
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "type"
                  }
                ],
                "core:description": [
                  {
                    "@value": "An image object representing an image object strored in the file store.\nThe image can be only included in the response. It has no effect if the Image appear in the\nrequest. Endpoint handles image creation on it's own and clients can't process images\nexcept of sending image data.\n"
                  }
                ],
                "apiContract:examples": [
                  {
                    "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/image.raml#/shape/example/default-example",
                    "@type": [
                      "apiContract:Example",
                      "doc:DomainElement"
                    ],
                    "doc:strict": [
                      {
                        "@value": true
                      }
                    ],
                    "doc:structuredValue": [
                      {
                        "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/image.raml#/shape/example/default-example/object_1",
                        "@type": [
                          "data:Object",
                          "data:Node",
                          "doc:DomainElement"
                        ],
                        "data:url": [
                          {
                            "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/image.raml#/shape/example/default-example/object_1/scalar_2",
                            "@type": [
                              "data:Scalar",
                              "data:Node",
                              "doc:DomainElement"
                            ],
                            "data:value": [
                              {
                                "@value": "https://domain.com/profile/pawel.psztyc/image"
                              }
                            ],
                            "shacl:datatype": [
                              {
                                "@id": "http://www.w3.org/2001/XMLSchema#string"
                              }
                            ],
                            "core:name": [
                              {
                                "@value": "scalar_2"
                              }
                            ],
                            "smaps": {
                              "lexical": {
                                "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/image.raml#/shape/example/default-example/object_1/scalar_2": "[(22,7)-(22,52)]"
                              }
                            }
                          }
                        ],
                        "data:thumb": [
                          {
                            "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/image.raml#/shape/example/default-example/object_1/scalar_3",
                            "@type": [
                              "data:Scalar",
                              "data:Node",
                              "doc:DomainElement"
                            ],
                            "data:value": [
                              {
                                "@value": "https://domain.com/profile/pawel.psztyc/image/thumb"
                              }
                            ],
                            "shacl:datatype": [
                              {
                                "@id": "http://www.w3.org/2001/XMLSchema#string"
                              }
                            ],
                            "core:name": [
                              {
                                "@value": "scalar_3"
                              }
                            ],
                            "smaps": {
                              "lexical": {
                                "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/image.raml#/shape/example/default-example/object_1/scalar_3": "[(23,9)-(23,60)]"
                              }
                            }
                          }
                        ],
                        "core:name": [
                          {
                            "@value": "object_1"
                          }
                        ],
                        "smaps": {
                          "lexical": {
                            "data:thumb": "[(23,2)-(24,0)]",
                            "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/image.raml#/shape/example/default-example/object_1": "[(22,0)-(24,0)]",
                            "data:url": "[(22,2)-(23,0)]"
                          }
                        }
                      }
                    ],
                    "doc:raw": [
                      {
                        "@value": "\n  url: https://domain.com/profile/pawel.psztyc/image\n  thumb: https://domain.com/profile/pawel.psztyc/image/thumb\n"
                      }
                    ],
                    "smaps": {
                      "synthesized-field": {
                        "doc:strict": "true"
                      },
                      "lexical": {
                        "doc:raw": "[(22,0)-(24,0)]",
                        "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/image.raml#/shape/example/default-example": "[(21,0)-(24,0)]",
                        "doc:structuredValue": "[(21,8)-(24,0)]"
                      }
                    }
                  }
                ],
                "smaps": {
                  "source-vendor": {
                    "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/image.raml#/type": "RAML 1.0"
                  },
                  "lexical": {
                    "core:description": "[(3,0)-(9,0)]",
                    "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/image.raml#/type": "[(3,0)-(24,0)]",
                    "shacl:property": "[(10,0)-(21,0)]"
                  },
                  "type-property-lexical-info": {
                    "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/image.raml#/type": "[(9,0)-(9,4)]"
                  }
                }
              }
            ],
            "smaps": {
              "lexical": {
                "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/image.raml": "[(3,0)-(24,0)]"
              }
            }
          },
          {
            "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/resource.raml",
            "@type": [
              "raml-shapes:DataTypeFragment",
              "doc:Fragment",
              "doc:Unit"
            ],
            "doc:encodes": [
              {
                "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/resource.raml#/type",
                "@type": [
                  "shacl:NodeShape",
                  "raml-shapes:AnyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:closed": [
                  {
                    "@value": false
                  }
                ],
                "shacl:property": [
                  {
                    "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/resource.raml#/type/property/etag",
                    "@type": [
                      "shacl:PropertyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:path": [
                      {
                        "@id": "http://a.ml/vocabularies/data#etag"
                      }
                    ],
                    "raml-shapes:range": [
                      {
                        "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/resource.raml#/type/property/etag/scalar/etag",
                        "@type": [
                          "raml-shapes:ScalarShape",
                          "raml-shapes:AnyShape",
                          "shacl:Shape",
                          "raml-shapes:Shape",
                          "doc:DomainElement"
                        ],
                        "shacl:datatype": [
                          {
                            "@id": "http://www.w3.org/2001/XMLSchema#string"
                          }
                        ],
                        "shacl:name": [
                          {
                            "@value": "etag"
                          }
                        ],
                        "core:description": [
                          {
                            "@value": "ETag of this resource for caching purposes.\n__This property will be ignored when creating an object.__\n"
                          }
                        ],
                        "smaps": {
                          "type-property-lexical-info": {
                            "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/resource.raml#/type/property/etag/scalar/etag": "[(8,4)-(8,8)]"
                          },
                          "lexical": {
                            "core:description": "[(9,4)-(12,0)]",
                            "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/resource.raml#/type/property/etag/scalar/etag": "[(7,2)-(12,0)]",
                            "shacl:datatype": "[(8,4)-(9,0)]"
                          }
                        }
                      }
                    ],
                    "shacl:minCount": [
                      {
                        "@value": 1
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "etag"
                      }
                    ],
                    "smaps": {
                      "lexical": {
                        "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/resource.raml#/type/property/etag": "[(7,2)-(12,0)]"
                      }
                    }
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "type"
                  }
                ],
                "core:description": [
                  {
                    "@value": "Common properties for all resources returned by the API.\n"
                  }
                ],
                "smaps": {
                  "source-vendor": {
                    "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/resource.raml#/type": "RAML 1.0"
                  },
                  "lexical": {
                    "core:description": "[(3,0)-(5,0)]",
                    "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/resource.raml#/type": "[(3,0)-(12,0)]",
                    "shacl:property": "[(6,0)-(12,0)]"
                  },
                  "type-property-lexical-info": {
                    "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/resource.raml#/type": "[(5,0)-(5,4)]"
                  }
                }
              }
            ],
            "smaps": {
              "lexical": {
                "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/resource.raml": "[(3,0)-(12,0)]"
              }
            }
          }
        ],
        "smaps": {
          "lexical": {
            "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml": "[(3,0)-(102,0)]"
          }
        }
      },
      {
        "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml",
        "@type": [
          "raml-shapes:DataTypeFragment",
          "doc:Fragment",
          "doc:Unit"
        ],
        "doc:encodes": [
          {
            "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/type",
            "@type": [
              "shacl:NodeShape",
              "raml-shapes:AnyShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:closed": [
              {
                "@value": false
              }
            ],
            "shacl:property": [
              {
                "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/type/property/id",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:path": [
                  {
                    "@id": "http://a.ml/vocabularies/data#id"
                  }
                ],
                "raml-shapes:range": [
                  {
                    "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/type/property/id/scalar/id",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "shacl:pattern": [
                      {
                        "@value": "^[0-9a-zA-Z-]+$"
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "id"
                      }
                    ],
                    "core:description": [
                      {
                        "@value": "Product id. It is a UUID of the database record.\n__This property will be ignored when creating an object.__\nIt will be available when the product is stored in the datastore.\n"
                      }
                    ],
                    "smaps": {
                      "lexical": {
                        "core:description": "[(8,4)-(12,0)]",
                        "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/type/property/id/scalar/id": "[(7,2)-(13,0)]",
                        "shacl:pattern": "[(12,4)-(13,0)]"
                      }
                    }
                  }
                ],
                "shacl:minCount": [
                  {
                    "@value": 1
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "id"
                  }
                ],
                "smaps": {
                  "lexical": {
                    "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/type/property/id": "[(7,2)-(13,0)]"
                  }
                }
              },
              {
                "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/type/property/name",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:path": [
                  {
                    "@id": "http://a.ml/vocabularies/data#name"
                  }
                ],
                "raml-shapes:range": [
                  {
                    "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/type/property/name/scalar/name",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "name"
                      }
                    ],
                    "core:description": [
                      {
                        "@value": "Product name"
                      }
                    ],
                    "apiContract:examples": [
                      {
                        "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/shape/property/name/scalar/name/example/default-example",
                        "@type": [
                          "apiContract:Example",
                          "doc:DomainElement"
                        ],
                        "doc:strict": [
                          {
                            "@value": true
                          }
                        ],
                        "doc:structuredValue": [
                          {
                            "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/shape/property/name/scalar/name/example/default-example/scalar_1",
                            "@type": [
                              "data:Scalar",
                              "data:Node",
                              "doc:DomainElement"
                            ],
                            "data:value": [
                              {
                                "@value": "Acme product - mentol flavor, 500 ml."
                              }
                            ],
                            "shacl:datatype": [
                              {
                                "@id": "http://www.w3.org/2001/XMLSchema#string"
                              }
                            ],
                            "core:name": [
                              {
                                "@value": "scalar_1"
                              }
                            ],
                            "smaps": {
                              "lexical": {
                                "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/shape/property/name/scalar/name/example/default-example/scalar_1": "[(16,13)-(16,50)]"
                              }
                            }
                          }
                        ],
                        "doc:raw": [
                          {
                            "@value": "Acme product - mentol flavor, 500 ml."
                          }
                        ],
                        "smaps": {
                          "synthesized-field": {
                            "doc:strict": "true"
                          },
                          "lexical": {
                            "doc:raw": "[(16,13)-(16,50)]",
                            "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/shape/property/name/scalar/name/example/default-example": "[(16,13)-(16,50)]",
                            "doc:structuredValue": "[(16,13)-(16,50)]"
                          }
                        }
                      }
                    ],
                    "smaps": {
                      "type-property-lexical-info": {
                        "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/type/property/name/scalar/name": "[(14,4)-(14,8)]"
                      },
                      "lexical": {
                        "core:description": "[(15,4)-(16,0)]",
                        "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/type/property/name/scalar/name": "[(13,2)-(18,0)]",
                        "shacl:datatype": "[(14,4)-(15,0)]"
                      }
                    }
                  }
                ],
                "shacl:minCount": [
                  {
                    "@value": 1
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "name"
                  }
                ],
                "smaps": {
                  "lexical": {
                    "shacl:minCount": "[(17,4)-(18,0)]",
                    "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/type/property/name": "[(13,2)-(18,0)]"
                  }
                }
              },
              {
                "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/type/property/quantity",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:path": [
                  {
                    "@id": "http://a.ml/vocabularies/data#quantity"
                  }
                ],
                "raml-shapes:range": [
                  {
                    "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/type/property/quantity/scalar/quantity",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://a.ml/vocabularies/shapes#number"
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "quantity"
                      }
                    ],
                    "core:description": [
                      {
                        "@value": "The quantity of the product in the one unit of measurement.\nSee `unit` property for more information.\n"
                      }
                    ],
                    "apiContract:examples": [
                      {
                        "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/shape/property/quantity/scalar/quantity/example/default-example",
                        "@type": [
                          "apiContract:Example",
                          "doc:DomainElement"
                        ],
                        "doc:strict": [
                          {
                            "@value": true
                          }
                        ],
                        "doc:structuredValue": [
                          {
                            "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/shape/property/quantity/scalar/quantity/example/default-example/scalar_1",
                            "@type": [
                              "data:Scalar",
                              "data:Node",
                              "doc:DomainElement"
                            ],
                            "data:value": [
                              {
                                "@value": "500"
                              }
                            ],
                            "shacl:datatype": [
                              {
                                "@id": "http://www.w3.org/2001/XMLSchema#integer"
                              }
                            ],
                            "core:name": [
                              {
                                "@value": "scalar_1"
                              }
                            ],
                            "smaps": {
                              "lexical": {
                                "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/shape/property/quantity/scalar/quantity/example/default-example/scalar_1": "[(23,13)-(23,16)]"
                              }
                            }
                          }
                        ],
                        "doc:raw": [
                          {
                            "@value": "500"
                          }
                        ],
                        "smaps": {
                          "synthesized-field": {
                            "doc:strict": "true"
                          },
                          "lexical": {
                            "doc:raw": "[(23,13)-(23,16)]",
                            "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/shape/property/quantity/scalar/quantity/example/default-example": "[(23,13)-(23,16)]",
                            "doc:structuredValue": "[(23,13)-(23,16)]"
                          }
                        }
                      }
                    ],
                    "smaps": {
                      "type-property-lexical-info": {
                        "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/type/property/quantity/scalar/quantity": "[(19,4)-(19,8)]"
                      },
                      "lexical": {
                        "core:description": "[(20,4)-(23,0)]",
                        "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/type/property/quantity/scalar/quantity": "[(18,2)-(25,0)]",
                        "shacl:datatype": "[(19,4)-(20,0)]"
                      }
                    }
                  }
                ],
                "shacl:minCount": [
                  {
                    "@value": 1
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "quantity"
                  }
                ],
                "smaps": {
                  "lexical": {
                    "shacl:minCount": "[(24,4)-(25,0)]",
                    "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/type/property/quantity": "[(18,2)-(25,0)]"
                  }
                }
              },
              {
                "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/type/property/unit",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:path": [
                  {
                    "@id": "http://a.ml/vocabularies/data#unit"
                  }
                ],
                "raml-shapes:range": [
                  {
                    "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/type/property/unit/scalar/unit",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "unit"
                      }
                    ],
                    "core:description": [
                      {
                        "@value": "The unit of measuremet for the quantity property."
                      }
                    ],
                    "apiContract:examples": [
                      {
                        "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/shape/property/unit/scalar/unit/example/default-example",
                        "@type": [
                          "apiContract:Example",
                          "doc:DomainElement"
                        ],
                        "doc:strict": [
                          {
                            "@value": true
                          }
                        ],
                        "doc:structuredValue": [
                          {
                            "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/shape/property/unit/scalar/unit/example/default-example/scalar_1",
                            "@type": [
                              "data:Scalar",
                              "data:Node",
                              "doc:DomainElement"
                            ],
                            "data:value": [
                              {
                                "@value": "ml"
                              }
                            ],
                            "shacl:datatype": [
                              {
                                "@id": "http://www.w3.org/2001/XMLSchema#string"
                              }
                            ],
                            "core:name": [
                              {
                                "@value": "scalar_1"
                              }
                            ],
                            "smaps": {
                              "lexical": {
                                "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/shape/property/unit/scalar/unit/example/default-example/scalar_1": "[(28,13)-(28,15)]"
                              }
                            }
                          }
                        ],
                        "doc:raw": [
                          {
                            "@value": "ml"
                          }
                        ],
                        "smaps": {
                          "synthesized-field": {
                            "doc:strict": "true"
                          },
                          "lexical": {
                            "doc:raw": "[(28,13)-(28,15)]",
                            "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/shape/property/unit/scalar/unit/example/default-example": "[(28,13)-(28,15)]",
                            "doc:structuredValue": "[(28,13)-(28,15)]"
                          }
                        }
                      }
                    ],
                    "smaps": {
                      "type-property-lexical-info": {
                        "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/type/property/unit/scalar/unit": "[(26,4)-(26,8)]"
                      },
                      "lexical": {
                        "core:description": "[(27,4)-(28,0)]",
                        "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/type/property/unit/scalar/unit": "[(25,2)-(30,0)]",
                        "shacl:datatype": "[(26,4)-(27,0)]"
                      }
                    }
                  }
                ],
                "shacl:minCount": [
                  {
                    "@value": 1
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "unit"
                  }
                ],
                "smaps": {
                  "lexical": {
                    "shacl:minCount": "[(29,4)-(30,0)]",
                    "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/type/property/unit": "[(25,2)-(30,0)]"
                  }
                }
              },
              {
                "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/type/property/upc",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:path": [
                  {
                    "@id": "http://a.ml/vocabularies/data#upc"
                  }
                ],
                "raml-shapes:range": [
                  {
                    "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/type/property/upc/scalar/upc",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "shacl:pattern": [
                      {
                        "@value": "^[0-9]{12,12}$"
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "upc"
                      }
                    ],
                    "core:description": [
                      {
                        "@value": "The Universal Produc Code. It consists of 12 numerical digits. However, because of the\ninteger precision limitation in JavaScript it is represented as a string.\n"
                      }
                    ],
                    "apiContract:examples": [
                      {
                        "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/shape/property/upc/scalar/upc/example/default-example",
                        "@type": [
                          "apiContract:Example",
                          "doc:DomainElement"
                        ],
                        "doc:strict": [
                          {
                            "@value": true
                          }
                        ],
                        "doc:structuredValue": [
                          {
                            "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/shape/property/upc/scalar/upc/example/default-example/scalar_1",
                            "@type": [
                              "data:Scalar",
                              "data:Node",
                              "doc:DomainElement"
                            ],
                            "data:value": [
                              {
                                "@value": "042100005264"
                              }
                            ],
                            "shacl:datatype": [
                              {
                                "@id": "http://www.w3.org/2001/XMLSchema#string"
                              }
                            ],
                            "core:name": [
                              {
                                "@value": "scalar_1"
                              }
                            ],
                            "smaps": {
                              "lexical": {
                                "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/shape/property/upc/scalar/upc/example/default-example/scalar_1": "[(36,13)-(36,27)]"
                              }
                            }
                          }
                        ],
                        "doc:raw": [
                          {
                            "@value": "042100005264"
                          }
                        ],
                        "smaps": {
                          "synthesized-field": {
                            "doc:strict": "true"
                          },
                          "lexical": {
                            "doc:raw": "[(36,13)-(36,27)]",
                            "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/shape/property/upc/scalar/upc/example/default-example": "[(36,13)-(36,27)]",
                            "doc:structuredValue": "[(36,13)-(36,27)]"
                          }
                        }
                      }
                    ],
                    "smaps": {
                      "type-property-lexical-info": {
                        "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/type/property/upc/scalar/upc": "[(31,4)-(31,8)]"
                      },
                      "lexical": {
                        "core:description": "[(33,4)-(36,0)]",
                        "shacl:datatype": "[(31,4)-(32,0)]",
                        "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/type/property/upc/scalar/upc": "[(30,2)-(38,0)]",
                        "shacl:pattern": "[(32,4)-(33,0)]"
                      }
                    }
                  }
                ],
                "shacl:minCount": [
                  {
                    "@value": 1
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "upc"
                  }
                ],
                "smaps": {
                  "lexical": {
                    "shacl:minCount": "[(37,4)-(38,0)]",
                    "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/type/property/upc": "[(30,2)-(38,0)]"
                  }
                }
              },
              {
                "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/type/property/available",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:path": [
                  {
                    "@id": "http://a.ml/vocabularies/data#available"
                  }
                ],
                "raml-shapes:range": [
                  {
                    "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/type/property/available/scalar/available",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#boolean"
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "available"
                      }
                    ],
                    "core:description": [
                      {
                        "@value": "Product current availability in the store.\nProduct may be not available but the users still can order it with later delivery date.\n"
                      }
                    ],
                    "apiContract:examples": [
                      {
                        "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/shape/property/available/scalar/available/example/default-example",
                        "@type": [
                          "apiContract:Example",
                          "doc:DomainElement"
                        ],
                        "doc:strict": [
                          {
                            "@value": true
                          }
                        ],
                        "doc:structuredValue": [
                          {
                            "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/shape/property/available/scalar/available/example/default-example/scalar_1",
                            "@type": [
                              "data:Scalar",
                              "data:Node",
                              "doc:DomainElement"
                            ],
                            "data:value": [
                              {
                                "@value": "true"
                              }
                            ],
                            "shacl:datatype": [
                              {
                                "@id": "http://www.w3.org/2001/XMLSchema#boolean"
                              }
                            ],
                            "core:name": [
                              {
                                "@value": "scalar_1"
                              }
                            ],
                            "smaps": {
                              "lexical": {
                                "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/shape/property/available/scalar/available/example/default-example/scalar_1": "[(44,13)-(44,17)]"
                              }
                            }
                          }
                        ],
                        "doc:raw": [
                          {
                            "@value": "true"
                          }
                        ],
                        "smaps": {
                          "synthesized-field": {
                            "doc:strict": "true"
                          },
                          "lexical": {
                            "doc:raw": "[(44,13)-(44,17)]",
                            "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/shape/property/available/scalar/available/example/default-example": "[(44,13)-(44,17)]",
                            "doc:structuredValue": "[(44,13)-(44,17)]"
                          }
                        }
                      }
                    ],
                    "smaps": {
                      "type-property-lexical-info": {
                        "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/type/property/available/scalar/available": "[(39,4)-(39,8)]"
                      },
                      "lexical": {
                        "core:description": "[(40,4)-(43,0)]",
                        "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/type/property/available/scalar/available": "[(38,2)-(45,0)]",
                        "shacl:datatype": "[(39,4)-(40,0)]"
                      }
                    }
                  }
                ],
                "shacl:minCount": [
                  {
                    "@value": 1
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "available"
                  }
                ],
                "smaps": {
                  "lexical": {
                    "shacl:minCount": "[(43,4)-(44,0)]",
                    "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/type/property/available": "[(38,2)-(45,0)]"
                  }
                }
              }
            ],
            "shacl:name": [
              {
                "@value": "type"
              }
            ],
            "core:name": [
              {
                "@value": "A product resource"
              }
            ],
            "core:description": [
              {
                "@value": "A single product representing an item in the store."
              }
            ],
            "raml-shapes:inherits": [
              {
                "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/resource.raml#/type/linked_1",
                "@type": [
                  "shacl:NodeShape",
                  "raml-shapes:AnyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "doc:link-target": [
                  {
                    "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/resource.raml#/type"
                  }
                ],
                "doc:link-label": [
                  {
                    "@value": "resource.raml"
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "type"
                  }
                ],
                "smaps": {
                  "auto-generated-name": {
                    "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/resource.raml#/type/linked_1": ""
                  },
                  "lexical": {
                    "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/resource.raml#/type/linked_1": "[(5,6)-(5,28)]"
                  }
                }
              }
            ],
            "apiContract:examples": [
              {
                "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/shape/example/default-example",
                "@type": [
                  "apiContract:Example",
                  "doc:DomainElement"
                ],
                "doc:strict": [
                  {
                    "@value": true
                  }
                ],
                "doc:structuredValue": [
                  {
                    "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/shape/example/default-example/object_1",
                    "@type": [
                      "data:Object",
                      "data:Node",
                      "doc:DomainElement"
                    ],
                    "data:id": [
                      {
                        "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/shape/example/default-example/object_1/scalar_2",
                        "@type": [
                          "data:Scalar",
                          "data:Node",
                          "doc:DomainElement"
                        ],
                        "data:value": [
                          {
                            "@value": "we2322-4f4f4f-f4f4ff-f4f4ff4"
                          }
                        ],
                        "shacl:datatype": [
                          {
                            "@id": "http://www.w3.org/2001/XMLSchema#string"
                          }
                        ],
                        "core:name": [
                          {
                            "@value": "scalar_2"
                          }
                        ],
                        "smaps": {
                          "lexical": {
                            "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/shape/example/default-example/object_1/scalar_2": "[(46,6)-(46,34)]"
                          }
                        }
                      }
                    ],
                    "data:name": [
                      {
                        "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/shape/example/default-example/object_1/scalar_3",
                        "@type": [
                          "data:Scalar",
                          "data:Node",
                          "doc:DomainElement"
                        ],
                        "data:value": [
                          {
                            "@value": "Acme Product"
                          }
                        ],
                        "shacl:datatype": [
                          {
                            "@id": "http://www.w3.org/2001/XMLSchema#string"
                          }
                        ],
                        "core:name": [
                          {
                            "@value": "scalar_3"
                          }
                        ],
                        "smaps": {
                          "lexical": {
                            "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/shape/example/default-example/object_1/scalar_3": "[(47,8)-(47,20)]"
                          }
                        }
                      }
                    ],
                    "data:quantity": [
                      {
                        "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/shape/example/default-example/object_1/scalar_4",
                        "@type": [
                          "data:Scalar",
                          "data:Node",
                          "doc:DomainElement"
                        ],
                        "data:value": [
                          {
                            "@value": "200"
                          }
                        ],
                        "shacl:datatype": [
                          {
                            "@id": "http://www.w3.org/2001/XMLSchema#integer"
                          }
                        ],
                        "core:name": [
                          {
                            "@value": "scalar_4"
                          }
                        ],
                        "smaps": {
                          "lexical": {
                            "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/shape/example/default-example/object_1/scalar_4": "[(48,12)-(48,15)]"
                          }
                        }
                      }
                    ],
                    "data:unit": [
                      {
                        "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/shape/example/default-example/object_1/scalar_5",
                        "@type": [
                          "data:Scalar",
                          "data:Node",
                          "doc:DomainElement"
                        ],
                        "data:value": [
                          {
                            "@value": "ml"
                          }
                        ],
                        "shacl:datatype": [
                          {
                            "@id": "http://www.w3.org/2001/XMLSchema#string"
                          }
                        ],
                        "core:name": [
                          {
                            "@value": "scalar_5"
                          }
                        ],
                        "smaps": {
                          "lexical": {
                            "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/shape/example/default-example/object_1/scalar_5": "[(49,8)-(49,10)]"
                          }
                        }
                      }
                    ],
                    "data:upc": [
                      {
                        "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/shape/example/default-example/object_1/scalar_6",
                        "@type": [
                          "data:Scalar",
                          "data:Node",
                          "doc:DomainElement"
                        ],
                        "data:value": [
                          {
                            "@value": "123456789101"
                          }
                        ],
                        "shacl:datatype": [
                          {
                            "@id": "http://www.w3.org/2001/XMLSchema#string"
                          }
                        ],
                        "core:name": [
                          {
                            "@value": "scalar_6"
                          }
                        ],
                        "smaps": {
                          "lexical": {
                            "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/shape/example/default-example/object_1/scalar_6": "[(50,7)-(50,21)]"
                          }
                        }
                      }
                    ],
                    "data:available": [
                      {
                        "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/shape/example/default-example/object_1/scalar_7",
                        "@type": [
                          "data:Scalar",
                          "data:Node",
                          "doc:DomainElement"
                        ],
                        "data:value": [
                          {
                            "@value": "true"
                          }
                        ],
                        "shacl:datatype": [
                          {
                            "@id": "http://www.w3.org/2001/XMLSchema#boolean"
                          }
                        ],
                        "core:name": [
                          {
                            "@value": "scalar_7"
                          }
                        ],
                        "smaps": {
                          "lexical": {
                            "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/shape/example/default-example/object_1/scalar_7": "[(51,13)-(51,17)]"
                          }
                        }
                      }
                    ],
                    "data:etag": [
                      {
                        "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/shape/example/default-example/object_1/scalar_8",
                        "@type": [
                          "data:Scalar",
                          "data:Node",
                          "doc:DomainElement"
                        ],
                        "data:value": [
                          {
                            "@value": "W\\sd3deef3rgrgf4r"
                          }
                        ],
                        "shacl:datatype": [
                          {
                            "@id": "http://www.w3.org/2001/XMLSchema#string"
                          }
                        ],
                        "core:name": [
                          {
                            "@value": "scalar_8"
                          }
                        ],
                        "smaps": {
                          "lexical": {
                            "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/shape/example/default-example/object_1/scalar_8": "[(52,8)-(52,28)]"
                          }
                        }
                      }
                    ],
                    "core:name": [
                      {
                        "@value": "object_1"
                      }
                    ],
                    "smaps": {
                      "lexical": {
                        "data:etag": "[(52,2)-(53,0)]",
                        "data:upc": "[(50,2)-(51,0)]",
                        "data:quantity": "[(48,2)-(49,0)]",
                        "data:id": "[(46,2)-(47,0)]",
                        "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/shape/example/default-example/object_1": "[(46,0)-(53,0)]",
                        "data:name": "[(47,2)-(48,0)]",
                        "data:unit": "[(49,2)-(50,0)]",
                        "data:available": "[(51,2)-(52,0)]"
                      }
                    }
                  }
                ],
                "doc:raw": [
                  {
                    "@value": "\n  id: we2322-4f4f4f-f4f4ff-f4f4ff4\n  name: Acme Product\n  quantity: 200\n  unit: ml\n  upc: \"123456789101\"\n  available: true\n  etag: \"W\\\\sd3deef3rgrgf4r\"\n"
                  }
                ],
                "smaps": {
                  "synthesized-field": {
                    "doc:strict": "true"
                  },
                  "lexical": {
                    "doc:raw": "[(46,0)-(53,0)]",
                    "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/shape/example/default-example": "[(45,0)-(53,0)]",
                    "doc:structuredValue": "[(45,8)-(53,0)]"
                  }
                }
              }
            ],
            "smaps": {
              "source-vendor": {
                "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/type": "RAML 1.0"
              },
              "lexical": {
                "raml-shapes:inherits": "[(5,0)-(6,0)]",
                "core:name": "[(3,0)-(4,0)]",
                "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/type": "[(3,0)-(53,0)]",
                "shacl:property": "[(6,0)-(45,0)]",
                "core:description": "[(4,0)-(5,0)]"
              },
              "type-property-lexical-info": {
                "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/type": "[(5,0)-(5,4)]"
              }
            }
          }
        ],
        "doc:references": [
          {
            "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/resource.raml",
            "@type": [
              "raml-shapes:DataTypeFragment",
              "doc:Fragment",
              "doc:Unit"
            ],
            "doc:encodes": [
              {
                "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/resource.raml#/type",
                "@type": [
                  "shacl:NodeShape",
                  "raml-shapes:AnyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:closed": [
                  {
                    "@value": false
                  }
                ],
                "shacl:property": [
                  {
                    "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/resource.raml#/type/property/etag",
                    "@type": [
                      "shacl:PropertyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:path": [
                      {
                        "@id": "http://a.ml/vocabularies/data#etag"
                      }
                    ],
                    "raml-shapes:range": [
                      {
                        "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/resource.raml#/type/property/etag/scalar/etag",
                        "@type": [
                          "raml-shapes:ScalarShape",
                          "raml-shapes:AnyShape",
                          "shacl:Shape",
                          "raml-shapes:Shape",
                          "doc:DomainElement"
                        ],
                        "shacl:datatype": [
                          {
                            "@id": "http://www.w3.org/2001/XMLSchema#string"
                          }
                        ],
                        "shacl:name": [
                          {
                            "@value": "etag"
                          }
                        ],
                        "core:description": [
                          {
                            "@value": "ETag of this resource for caching purposes.\n__This property will be ignored when creating an object.__\n"
                          }
                        ],
                        "smaps": {
                          "type-property-lexical-info": {
                            "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/resource.raml#/type/property/etag/scalar/etag": "[(8,4)-(8,8)]"
                          },
                          "lexical": {
                            "core:description": "[(9,4)-(12,0)]",
                            "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/resource.raml#/type/property/etag/scalar/etag": "[(7,2)-(12,0)]",
                            "shacl:datatype": "[(8,4)-(9,0)]"
                          }
                        }
                      }
                    ],
                    "shacl:minCount": [
                      {
                        "@value": 1
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "etag"
                      }
                    ],
                    "smaps": {
                      "lexical": {
                        "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/resource.raml#/type/property/etag": "[(7,2)-(12,0)]"
                      }
                    }
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "type"
                  }
                ],
                "core:description": [
                  {
                    "@value": "Common properties for all resources returned by the API.\n"
                  }
                ],
                "smaps": {
                  "source-vendor": {
                    "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/resource.raml#/type": "RAML 1.0"
                  },
                  "lexical": {
                    "core:description": "[(3,0)-(5,0)]",
                    "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/resource.raml#/type": "[(3,0)-(12,0)]",
                    "shacl:property": "[(6,0)-(12,0)]"
                  },
                  "type-property-lexical-info": {
                    "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/resource.raml#/type": "[(5,0)-(5,4)]"
                  }
                }
              }
            ],
            "smaps": {
              "lexical": {
                "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/resource.raml": "[(3,0)-(12,0)]"
              }
            }
          }
        ],
        "smaps": {
          "lexical": {
            "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml": "[(3,0)-(53,0)]"
          }
        }
      },
      {
        "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/schemas/person.json",
        "@type": [
          "doc:ExternalFragment",
          "doc:Fragment",
          "doc:Unit"
        ],
        "doc:encodes": [
          {
            "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/schemas/person.json#/external",
            "@type": [
              "doc:ExternalDomainElement",
              "doc:DomainElement"
            ],
            "doc:raw": [
              {
                "@value": "{\n  \"$id\": \"http://example.com/example.json\",\n  \"type\": \"object\",\n  \"definitions\": {},\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"properties\": {\n    \"id\": {\n      \"$id\": \"/properties/id\",\n      \"type\": \"string\",\n      \"title\": \"The Id Schema \",\n      \"default\": \"\",\n      \"examples\": [\n        \"R34fg663H9KW9MMSKISI\"\n      ]\n    },\n    \"name\": {\n      \"$id\": \"/properties/name\",\n      \"type\": \"string\",\n      \"title\": \"The Name Schema \",\n      \"default\": \"\",\n      \"examples\": [\n        \"Pawel Psztyc\"\n      ]\n    },\n    \"birthday\": {\n      \"$id\": \"/properties/birthday\",\n      \"type\": \"string\",\n      \"title\": \"The Birthday Schema \",\n      \"default\": \"\",\n      \"examples\": [\n        \"1983-10-20\"\n      ]\n    },\n    \"gender\": {\n      \"$id\": \"/properties/gender\",\n      \"type\": \"string\",\n      \"title\": \"The Gender Schema \",\n      \"default\": \"\",\n      \"examples\": [\n        \"male\"\n      ]\n    },\n    \"url\": {\n      \"$id\": \"/properties/url\",\n      \"type\": \"string\",\n      \"title\": \"The Url Schema \",\n      \"default\": \"\",\n      \"examples\": [\n        \"https://domain.com/profile/pawel.psztyc\"\n      ]\n    },\n    \"image\": {\n      \"$id\": \"/properties/image\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"url\": {\n          \"$id\": \"/properties/image/properties/url\",\n          \"type\": \"string\",\n          \"title\": \"The Url Schema \",\n          \"default\": \"\",\n          \"examples\": [\n            \"https://domain.com/profile/pawel.psztyc/image\"\n          ]\n        },\n        \"thumb\": {\n          \"$id\": \"/properties/image/properties/thumb\",\n          \"type\": \"string\",\n          \"title\": \"The Thumb Schema \",\n          \"default\": \"\",\n          \"examples\": [\n            \"https://domain.com/profile/pawel.psztyc/image/thumb\"\n          ]\n        }\n      }\n    },\n    \"tagline\": {\n      \"$id\": \"/properties/tagline\",\n      \"type\": \"string\",\n      \"title\": \"The Tagline Schema \",\n      \"default\": \"\",\n      \"examples\": [\n        \"Some text about me.\"\n      ]\n    },\n    \"language\": {\n      \"$id\": \"/properties/language\",\n      \"type\": \"string\",\n      \"title\": \"The Language Schema \",\n      \"default\": \"\",\n      \"examples\": [\n        \"en_GB\"\n      ]\n    },\n    \"etag\": {\n      \"$id\": \"/properties/etag\",\n      \"type\": \"string\",\n      \"title\": \"The Etag Schema \",\n      \"default\": \"\",\n      \"examples\": [\n        \"W\\\\244m4n5kj3gbn2nj4k4n4\"\n      ]\n    }\n  }\n}\n"
              }
            ],
            "core:mediaType": [
              {
                "@value": "application/json"
              }
            ]
          }
        ]
      },
      {
        "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/image.raml",
        "@type": [
          "raml-shapes:DataTypeFragment",
          "doc:Fragment",
          "doc:Unit"
        ],
        "doc:encodes": [
          {
            "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/image.raml#/type",
            "@type": [
              "shacl:NodeShape",
              "raml-shapes:AnyShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:closed": [
              {
                "@value": false
              }
            ],
            "shacl:property": [
              {
                "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/image.raml#/type/property/url",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:path": [
                  {
                    "@id": "http://a.ml/vocabularies/data#url"
                  }
                ],
                "raml-shapes:range": [
                  {
                    "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/image.raml#/type/property/url/scalar/url",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "url"
                      }
                    ],
                    "core:description": [
                      {
                        "@value": "The URL of the image.\nTo resize the image and crop it to a square, append the query string **?sz=x**, where x is the dimension in pixels of each side.\n"
                      }
                    ],
                    "smaps": {
                      "type-property-lexical-info": {
                        "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/image.raml#/type/property/url/scalar/url": "[(12,4)-(12,8)]"
                      },
                      "lexical": {
                        "core:description": "[(13,4)-(16,0)]",
                        "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/image.raml#/type/property/url/scalar/url": "[(11,2)-(16,0)]",
                        "shacl:datatype": "[(12,4)-(13,0)]"
                      }
                    }
                  }
                ],
                "shacl:minCount": [
                  {
                    "@value": 1
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "url"
                  }
                ],
                "smaps": {
                  "lexical": {
                    "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/image.raml#/type/property/url": "[(11,2)-(16,0)]"
                  }
                }
              },
              {
                "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/image.raml#/type/property/thumb",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:path": [
                  {
                    "@id": "http://a.ml/vocabularies/data#thumb"
                  }
                ],
                "raml-shapes:range": [
                  {
                    "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/image.raml#/type/property/thumb/scalar/thumb",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "thumb"
                      }
                    ],
                    "core:name": [
                      {
                        "@value": "Thumbnail"
                      }
                    ],
                    "core:description": [
                      {
                        "@value": "An URL to the thumbnail of the image. Thumbnails are 60x60px cropped images of the original image.\n"
                      }
                    ],
                    "smaps": {
                      "type-property-lexical-info": {
                        "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/image.raml#/type/property/thumb/scalar/thumb": "[(17,4)-(17,8)]"
                      },
                      "lexical": {
                        "core:description": "[(19,4)-(21,0)]",
                        "shacl:datatype": "[(17,4)-(18,0)]",
                        "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/image.raml#/type/property/thumb/scalar/thumb": "[(16,2)-(21,0)]",
                        "core:name": "[(18,4)-(19,0)]"
                      }
                    }
                  }
                ],
                "shacl:minCount": [
                  {
                    "@value": 1
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "thumb"
                  }
                ],
                "smaps": {
                  "lexical": {
                    "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/image.raml#/type/property/thumb": "[(16,2)-(21,0)]"
                  }
                }
              }
            ],
            "shacl:name": [
              {
                "@value": "type"
              }
            ],
            "core:description": [
              {
                "@value": "An image object representing an image object strored in the file store.\nThe image can be only included in the response. It has no effect if the Image appear in the\nrequest. Endpoint handles image creation on it's own and clients can't process images\nexcept of sending image data.\n"
              }
            ],
            "apiContract:examples": [
              {
                "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/image.raml#/shape/example/default-example",
                "@type": [
                  "apiContract:Example",
                  "doc:DomainElement"
                ],
                "doc:strict": [
                  {
                    "@value": true
                  }
                ],
                "doc:structuredValue": [
                  {
                    "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/image.raml#/shape/example/default-example/object_1",
                    "@type": [
                      "data:Object",
                      "data:Node",
                      "doc:DomainElement"
                    ],
                    "data:url": [
                      {
                        "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/image.raml#/shape/example/default-example/object_1/scalar_2",
                        "@type": [
                          "data:Scalar",
                          "data:Node",
                          "doc:DomainElement"
                        ],
                        "data:value": [
                          {
                            "@value": "https://domain.com/profile/pawel.psztyc/image"
                          }
                        ],
                        "shacl:datatype": [
                          {
                            "@id": "http://www.w3.org/2001/XMLSchema#string"
                          }
                        ],
                        "core:name": [
                          {
                            "@value": "scalar_2"
                          }
                        ],
                        "smaps": {
                          "lexical": {
                            "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/image.raml#/shape/example/default-example/object_1/scalar_2": "[(22,7)-(22,52)]"
                          }
                        }
                      }
                    ],
                    "data:thumb": [
                      {
                        "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/image.raml#/shape/example/default-example/object_1/scalar_3",
                        "@type": [
                          "data:Scalar",
                          "data:Node",
                          "doc:DomainElement"
                        ],
                        "data:value": [
                          {
                            "@value": "https://domain.com/profile/pawel.psztyc/image/thumb"
                          }
                        ],
                        "shacl:datatype": [
                          {
                            "@id": "http://www.w3.org/2001/XMLSchema#string"
                          }
                        ],
                        "core:name": [
                          {
                            "@value": "scalar_3"
                          }
                        ],
                        "smaps": {
                          "lexical": {
                            "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/image.raml#/shape/example/default-example/object_1/scalar_3": "[(23,9)-(23,60)]"
                          }
                        }
                      }
                    ],
                    "core:name": [
                      {
                        "@value": "object_1"
                      }
                    ],
                    "smaps": {
                      "lexical": {
                        "data:thumb": "[(23,2)-(24,0)]",
                        "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/image.raml#/shape/example/default-example/object_1": "[(22,0)-(24,0)]",
                        "data:url": "[(22,2)-(23,0)]"
                      }
                    }
                  }
                ],
                "doc:raw": [
                  {
                    "@value": "\n  url: https://domain.com/profile/pawel.psztyc/image\n  thumb: https://domain.com/profile/pawel.psztyc/image/thumb\n"
                  }
                ],
                "smaps": {
                  "synthesized-field": {
                    "doc:strict": "true"
                  },
                  "lexical": {
                    "doc:raw": "[(22,0)-(24,0)]",
                    "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/image.raml#/shape/example/default-example": "[(21,0)-(24,0)]",
                    "doc:structuredValue": "[(21,8)-(24,0)]"
                  }
                }
              }
            ],
            "smaps": {
              "source-vendor": {
                "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/image.raml#/type": "RAML 1.0"
              },
              "lexical": {
                "core:description": "[(3,0)-(9,0)]",
                "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/image.raml#/type": "[(3,0)-(24,0)]",
                "shacl:property": "[(10,0)-(21,0)]"
              },
              "type-property-lexical-info": {
                "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/image.raml#/type": "[(9,0)-(9,4)]"
              }
            }
          }
        ],
        "smaps": {
          "lexical": {
            "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/image.raml": "[(3,0)-(24,0)]"
          }
        }
      },
      {
        "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/resource.raml",
        "@type": [
          "raml-shapes:DataTypeFragment",
          "doc:Fragment",
          "doc:Unit"
        ],
        "doc:encodes": [
          {
            "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/resource.raml#/type",
            "@type": [
              "shacl:NodeShape",
              "raml-shapes:AnyShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:closed": [
              {
                "@value": false
              }
            ],
            "shacl:property": [
              {
                "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/resource.raml#/type/property/etag",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:path": [
                  {
                    "@id": "http://a.ml/vocabularies/data#etag"
                  }
                ],
                "raml-shapes:range": [
                  {
                    "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/resource.raml#/type/property/etag/scalar/etag",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "etag"
                      }
                    ],
                    "core:description": [
                      {
                        "@value": "ETag of this resource for caching purposes.\n__This property will be ignored when creating an object.__\n"
                      }
                    ],
                    "smaps": {
                      "type-property-lexical-info": {
                        "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/resource.raml#/type/property/etag/scalar/etag": "[(8,4)-(8,8)]"
                      },
                      "lexical": {
                        "core:description": "[(9,4)-(12,0)]",
                        "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/resource.raml#/type/property/etag/scalar/etag": "[(7,2)-(12,0)]",
                        "shacl:datatype": "[(8,4)-(9,0)]"
                      }
                    }
                  }
                ],
                "shacl:minCount": [
                  {
                    "@value": 1
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "etag"
                  }
                ],
                "smaps": {
                  "lexical": {
                    "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/resource.raml#/type/property/etag": "[(7,2)-(12,0)]"
                  }
                }
              }
            ],
            "shacl:name": [
              {
                "@value": "type"
              }
            ],
            "core:description": [
              {
                "@value": "Common properties for all resources returned by the API.\n"
              }
            ],
            "smaps": {
              "source-vendor": {
                "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/resource.raml#/type": "RAML 1.0"
              },
              "lexical": {
                "core:description": "[(3,0)-(5,0)]",
                "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/resource.raml#/type": "[(3,0)-(12,0)]",
                "shacl:property": "[(6,0)-(12,0)]"
              },
              "type-property-lexical-info": {
                "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/resource.raml#/type": "[(5,0)-(5,4)]"
              }
            }
          }
        ],
        "smaps": {
          "lexical": {
            "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/resource.raml": "[(3,0)-(12,0)]"
          }
        }
      },
      {
        "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/library.raml",
        "@type": [
          "doc:Module",
          "doc:Unit"
        ],
        "doc:declares": [
          {
            "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/library.raml#/declarations/types/TypeFromLibray",
            "@type": [
              "shacl:NodeShape",
              "raml-shapes:AnyShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:closed": [
              {
                "@value": false
              }
            ],
            "shacl:property": [
              {
                "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/library.raml#/declarations/types/TypeFromLibray/property/age",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:path": [
                  {
                    "@id": "http://a.ml/vocabularies/data#age"
                  }
                ],
                "raml-shapes:range": [
                  {
                    "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/library.raml#/declarations/types/TypeFromLibray/property/age/scalar/age",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://a.ml/vocabularies/shapes#number"
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "age"
                      }
                    ],
                    "smaps": {
                      "lexical": {
                        "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/library.raml#/declarations/types/TypeFromLibray/property/age/scalar/age": "[(7,6)-(8,0)]"
                      }
                    }
                  }
                ],
                "shacl:minCount": [
                  {
                    "@value": 1
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "age"
                  }
                ],
                "smaps": {
                  "lexical": {
                    "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/library.raml#/declarations/types/TypeFromLibray/property/age": "[(7,6)-(8,0)]"
                  }
                }
              }
            ],
            "shacl:name": [
              {
                "@value": "TypeFromLibray"
              }
            ],
            "smaps": {
              "declared-element": {
                "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/library.raml#/declarations/types/TypeFromLibray": ""
              },
              "lexical": {
                "shacl:name": "[(5,2)-(5,16)]",
                "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/library.raml#/declarations/types/TypeFromLibray": "[(5,2)-(8,0)]",
                "shacl:property": "[(6,4)-(8,0)]"
              }
            }
          }
        ],
        "doc:usage": [
          {
            "@value": "This is a Library raml"
          }
        ],
        "smaps": {
          "source-vendor": {
            "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/library.raml": "RAML 1.0"
          },
          "lexical": {
            "doc:usage": "[(2,0)-(4,0)]",
            "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/library.raml": "[(2,0)-(8,0)]"
          }
        }
      },
      {
        "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/examples/person.json",
        "@type": [
          "doc:ExternalFragment",
          "doc:Fragment",
          "doc:Unit"
        ],
        "doc:encodes": [
          {
            "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/examples/person.json#/external",
            "@type": [
              "doc:ExternalDomainElement",
              "doc:DomainElement"
            ],
            "doc:raw": [
              {
                "@value": "{\n  \"id\": \"R34fg663H9KW9MMSKISI\",\n  \"name\": \"Pawel Psztyc\",\n  \"birthday\": \"1983-10-20\",\n  \"gender\": \"male\",\n  \"url\": \"https://domain.com/profile/pawel.psztyc\",\n  \"image\": {\n    \"url\": \"https://domain.com/profile/pawel.psztyc/image\",\n    \"thumb\": \"https://domain.com/profile/pawel.psztyc/image/thumb\"\n  },\n  \"tagline\": \"Some text about me.\",\n  \"language\": \"en_GB\",\n  \"etag\": \"W\\\\244m4n5kj3gbn2nj4k4n4\"\n}\n"
              }
            ],
            "core:mediaType": [
              {
                "@value": "application/json"
              }
            ]
          }
        ]
      }
    ],
    "smaps": {
      "aliases-array": {
        "": "myLib->file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/library.raml::library.raml"
      }
    },
    "doc:declares": [
      {
        "@id": "#/declarations/types/array/Arrable",
        "@type": [
          "raml-shapes:ArrayShape",
          "raml-shapes:AnyShape",
          "shacl:Shape",
          "raml-shapes:Shape",
          "doc:DomainElement"
        ],
        "raml-shapes:items": [
          {
            "@id": "#/declarations/types/array/Arrable/items/items",
            "@type": [
              "shacl:NodeShape",
              "raml-shapes:AnyShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:link-target": [
              {
                "@id": "#/declarations/types/Picture"
              }
            ],
            "doc:link-label": [
              {
                "@value": "Picture"
              }
            ],
            "shacl:name": [
              {
                "@value": "items"
              }
            ],
            "smaps": {
              "lexical": {
                "#/declarations/types/array/Arrable/items/items": "[(91,11)-(91,18)]"
              }
            }
          }
        ],
        "shacl:name": [
          {
            "@value": "Arrable"
          }
        ],
        "smaps": {
          "declared-element": {
            "#/declarations/types/array/Arrable": ""
          },
          "lexical": {
            "shacl:name": "[(89,2)-(89,9)]",
            "#/declarations/types/array/Arrable": "[(89,2)-(92,0)]"
          },
          "type-property-lexical-info": {
            "#/declarations/types/array/Arrable": "[(90,4)-(90,8)]"
          }
        }
      },
      {
        "@id": "#/declarations/types/AppPerson",
        "@type": [
          "shacl:NodeShape",
          "raml-shapes:AnyShape",
          "shacl:Shape",
          "raml-shapes:Shape",
          "doc:DomainElement"
        ],
        "doc:link-target": [
          {
            "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/app-person.raml#/type"
          }
        ],
        "doc:link-label": [
          {
            "@value": "types/app-person.raml"
          }
        ],
        "shacl:name": [
          {
            "@value": "AppPerson"
          }
        ],
        "smaps": {
          "declared-element": {
            "#/declarations/types/AppPerson": ""
          },
          "lexical": {
            "#/declarations/types/AppPerson": "[(31,22)-(31,43)]"
          }
        }
      },
      {
        "@id": "#/declarations/types/ComplexInclusion",
        "@type": [
          "shacl:NodeShape",
          "raml-shapes:AnyShape",
          "shacl:Shape",
          "raml-shapes:Shape",
          "doc:DomainElement"
        ],
        "shacl:closed": [
          {
            "@value": false
          }
        ],
        "shacl:property": [
          {
            "@id": "#/declarations/types/ComplexInclusion/property/dimension",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:path": [
              {
                "@id": "http://a.ml/vocabularies/data#dimension"
              }
            ],
            "raml-shapes:range": [
              {
                "@id": "#/declarations/types/ComplexInclusion/property/dimension/dimension",
                "@type": [
                  "shacl:NodeShape",
                  "raml-shapes:AnyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "doc:link-target": [
                  {
                    "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/dimensions.raml#/type"
                  }
                ],
                "doc:link-label": [
                  {
                    "@value": "types/dimensions.raml"
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "dimension"
                  }
                ],
                "smaps": {
                  "lexical": {
                    "#/declarations/types/ComplexInclusion/property/dimension/dimension": "[(51,26)-(51,47)]"
                  }
                }
              }
            ],
            "shacl:minCount": [
              {
                "@value": 1
              }
            ],
            "shacl:name": [
              {
                "@value": "dimension"
              }
            ],
            "smaps": {
              "lexical": {
                "#/declarations/types/ComplexInclusion/property/dimension": "[(51,6)-(52,0)]"
              }
            }
          }
        ],
        "shacl:name": [
          {
            "@value": "ComplexInclusion"
          }
        ],
        "raml-shapes:inherits": [
          {
            "@id": "#/declarations/types/Product/linked_1",
            "@type": [
              "shacl:NodeShape",
              "raml-shapes:AnyShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:link-target": [
              {
                "@id": "#/declarations/types/Product"
              }
            ],
            "doc:link-label": [
              {
                "@value": "Product"
              }
            ],
            "shacl:name": [
              {
                "@value": "Product"
              }
            ],
            "smaps": {
              "auto-generated-name": {
                "#/declarations/types/Product/linked_1": ""
              },
              "lexical": {
                "#/declarations/types/Product/linked_1": "[(49,10)-(49,17)]"
              }
            }
          }
        ],
        "smaps": {
          "declared-element": {
            "#/declarations/types/ComplexInclusion": ""
          },
          "lexical": {
            "raml-shapes:inherits": "[(49,4)-(50,0)]",
            "shacl:property": "[(50,4)-(52,0)]",
            "#/declarations/types/ComplexInclusion": "[(48,2)-(52,0)]",
            "shacl:name": "[(48,2)-(48,18)]"
          },
          "type-property-lexical-info": {
            "#/declarations/types/ComplexInclusion": "[(49,4)-(49,8)]"
          }
        }
      },
      {
        "@id": "#/declarations/types/SchemaPerson",
        "@type": [
          "shacl:NodeShape",
          "raml-shapes:AnyShape",
          "shacl:Shape",
          "raml-shapes:Shape",
          "doc:DomainElement"
        ],
        "shacl:closed": [
          {
            "@value": false
          }
        ],
        "shacl:property": [
          {
            "@id": "#/declarations/types/SchemaPerson/property/id",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:path": [
              {
                "@id": "http://a.ml/vocabularies/data#id"
              }
            ],
            "raml-shapes:range": [
              {
                "@id": "#/declarations/types/SchemaPerson/property/id/scalar/id",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "raml-shapes:AnyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:datatype": [
                  {
                    "@id": "http://www.w3.org/2001/XMLSchema#string"
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "id"
                  }
                ],
                "core:name": [
                  {
                    "@value": "The Id Schema "
                  }
                ],
                "shacl:defaultValue": [
                  {
                    "@id": "#/declarations/types/SchemaPerson/property/id/scalar/id/scalar_1",
                    "@type": [
                      "data:Scalar",
                      "data:Node",
                      "doc:DomainElement"
                    ],
                    "data:value": [
                      {
                        "@value": ""
                      }
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "core:name": [
                      {
                        "@value": "scalar_1"
                      }
                    ],
                    "smaps": {
                      "lexical": {
                        "#/declarations/types/SchemaPerson/property/id/scalar/id/scalar_1": "[(11,17)-(11,19)]"
                      }
                    }
                  }
                ],
                "shacl:defaultValueStr": [
                  {
                    "@value": ""
                  }
                ],
                "smaps": {
                  "type-property-lexical-info": {
                    "#/declarations/types/SchemaPerson/property/id/scalar/id": "[(9,6)-(9,12)]"
                  },
                  "lexical": {
                    "shacl:defaultValueStr": "[(11,6)-(11,17)]",
                    "core:name": "[(10,6)-(10,15)]",
                    "#/declarations/types/SchemaPerson/property/id/scalar/id": "[(7,4)-(7,10)]",
                    "shacl:datatype": "[(9,6)-(9,14)]",
                    "shacl:defaultValue": "[(11,6)-(11,17)]"
                  }
                }
              }
            ],
            "shacl:minCount": [
              {
                "@value": 0
              }
            ],
            "shacl:name": [
              {
                "@value": "id"
              }
            ],
            "smaps": {
              "lexical": {
                "#/declarations/types/SchemaPerson/property/id": "[(7,4)-(7,10)]"
              }
            }
          },
          {
            "@id": "#/declarations/types/SchemaPerson/property/name",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:path": [
              {
                "@id": "http://a.ml/vocabularies/data#name"
              }
            ],
            "raml-shapes:range": [
              {
                "@id": "#/declarations/types/SchemaPerson/property/name/scalar/name",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "raml-shapes:AnyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:datatype": [
                  {
                    "@id": "http://www.w3.org/2001/XMLSchema#string"
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "name"
                  }
                ],
                "core:name": [
                  {
                    "@value": "The Name Schema "
                  }
                ],
                "shacl:defaultValue": [
                  {
                    "@id": "#/declarations/types/SchemaPerson/property/name/scalar/name/scalar_1",
                    "@type": [
                      "data:Scalar",
                      "data:Node",
                      "doc:DomainElement"
                    ],
                    "data:value": [
                      {
                        "@value": ""
                      }
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "core:name": [
                      {
                        "@value": "scalar_1"
                      }
                    ],
                    "smaps": {
                      "lexical": {
                        "#/declarations/types/SchemaPerson/property/name/scalar/name/scalar_1": "[(20,17)-(20,19)]"
                      }
                    }
                  }
                ],
                "shacl:defaultValueStr": [
                  {
                    "@value": ""
                  }
                ],
                "smaps": {
                  "type-property-lexical-info": {
                    "#/declarations/types/SchemaPerson/property/name/scalar/name": "[(18,6)-(18,12)]"
                  },
                  "lexical": {
                    "shacl:defaultValueStr": "[(20,6)-(20,17)]",
                    "core:name": "[(19,6)-(19,15)]",
                    "#/declarations/types/SchemaPerson/property/name/scalar/name": "[(16,4)-(16,12)]",
                    "shacl:datatype": "[(18,6)-(18,14)]",
                    "shacl:defaultValue": "[(20,6)-(20,17)]"
                  }
                }
              }
            ],
            "shacl:minCount": [
              {
                "@value": 0
              }
            ],
            "shacl:name": [
              {
                "@value": "name"
              }
            ],
            "smaps": {
              "lexical": {
                "#/declarations/types/SchemaPerson/property/name": "[(16,4)-(16,12)]"
              }
            }
          },
          {
            "@id": "#/declarations/types/SchemaPerson/property/birthday",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:path": [
              {
                "@id": "http://a.ml/vocabularies/data#birthday"
              }
            ],
            "raml-shapes:range": [
              {
                "@id": "#/declarations/types/SchemaPerson/property/birthday/scalar/birthday",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "raml-shapes:AnyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:datatype": [
                  {
                    "@id": "http://www.w3.org/2001/XMLSchema#string"
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "birthday"
                  }
                ],
                "core:name": [
                  {
                    "@value": "The Birthday Schema "
                  }
                ],
                "shacl:defaultValue": [
                  {
                    "@id": "#/declarations/types/SchemaPerson/property/birthday/scalar/birthday/scalar_1",
                    "@type": [
                      "data:Scalar",
                      "data:Node",
                      "doc:DomainElement"
                    ],
                    "data:value": [
                      {
                        "@value": ""
                      }
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "core:name": [
                      {
                        "@value": "scalar_1"
                      }
                    ],
                    "smaps": {
                      "lexical": {
                        "#/declarations/types/SchemaPerson/property/birthday/scalar/birthday/scalar_1": "[(29,17)-(29,19)]"
                      }
                    }
                  }
                ],
                "shacl:defaultValueStr": [
                  {
                    "@value": ""
                  }
                ],
                "smaps": {
                  "type-property-lexical-info": {
                    "#/declarations/types/SchemaPerson/property/birthday/scalar/birthday": "[(27,6)-(27,12)]"
                  },
                  "lexical": {
                    "shacl:defaultValueStr": "[(29,6)-(29,17)]",
                    "core:name": "[(28,6)-(28,15)]",
                    "#/declarations/types/SchemaPerson/property/birthday/scalar/birthday": "[(25,4)-(25,16)]",
                    "shacl:datatype": "[(27,6)-(27,14)]",
                    "shacl:defaultValue": "[(29,6)-(29,17)]"
                  }
                }
              }
            ],
            "shacl:minCount": [
              {
                "@value": 0
              }
            ],
            "shacl:name": [
              {
                "@value": "birthday"
              }
            ],
            "smaps": {
              "lexical": {
                "#/declarations/types/SchemaPerson/property/birthday": "[(25,4)-(25,16)]"
              }
            }
          },
          {
            "@id": "#/declarations/types/SchemaPerson/property/gender",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:path": [
              {
                "@id": "http://a.ml/vocabularies/data#gender"
              }
            ],
            "raml-shapes:range": [
              {
                "@id": "#/declarations/types/SchemaPerson/property/gender/scalar/gender",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "raml-shapes:AnyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:datatype": [
                  {
                    "@id": "http://www.w3.org/2001/XMLSchema#string"
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "gender"
                  }
                ],
                "core:name": [
                  {
                    "@value": "The Gender Schema "
                  }
                ],
                "shacl:defaultValue": [
                  {
                    "@id": "#/declarations/types/SchemaPerson/property/gender/scalar/gender/scalar_1",
                    "@type": [
                      "data:Scalar",
                      "data:Node",
                      "doc:DomainElement"
                    ],
                    "data:value": [
                      {
                        "@value": ""
                      }
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "core:name": [
                      {
                        "@value": "scalar_1"
                      }
                    ],
                    "smaps": {
                      "lexical": {
                        "#/declarations/types/SchemaPerson/property/gender/scalar/gender/scalar_1": "[(38,17)-(38,19)]"
                      }
                    }
                  }
                ],
                "shacl:defaultValueStr": [
                  {
                    "@value": ""
                  }
                ],
                "smaps": {
                  "type-property-lexical-info": {
                    "#/declarations/types/SchemaPerson/property/gender/scalar/gender": "[(36,6)-(36,12)]"
                  },
                  "lexical": {
                    "shacl:defaultValueStr": "[(38,6)-(38,17)]",
                    "core:name": "[(37,6)-(37,15)]",
                    "#/declarations/types/SchemaPerson/property/gender/scalar/gender": "[(34,4)-(34,14)]",
                    "shacl:datatype": "[(36,6)-(36,14)]",
                    "shacl:defaultValue": "[(38,6)-(38,17)]"
                  }
                }
              }
            ],
            "shacl:minCount": [
              {
                "@value": 0
              }
            ],
            "shacl:name": [
              {
                "@value": "gender"
              }
            ],
            "smaps": {
              "lexical": {
                "#/declarations/types/SchemaPerson/property/gender": "[(34,4)-(34,14)]"
              }
            }
          },
          {
            "@id": "#/declarations/types/SchemaPerson/property/url",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:path": [
              {
                "@id": "http://a.ml/vocabularies/data#url"
              }
            ],
            "raml-shapes:range": [
              {
                "@id": "#/declarations/types/SchemaPerson/property/url/scalar/url",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "raml-shapes:AnyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:datatype": [
                  {
                    "@id": "http://www.w3.org/2001/XMLSchema#string"
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "url"
                  }
                ],
                "core:name": [
                  {
                    "@value": "The Url Schema "
                  }
                ],
                "shacl:defaultValue": [
                  {
                    "@id": "#/declarations/types/SchemaPerson/property/url/scalar/url/scalar_1",
                    "@type": [
                      "data:Scalar",
                      "data:Node",
                      "doc:DomainElement"
                    ],
                    "data:value": [
                      {
                        "@value": ""
                      }
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "core:name": [
                      {
                        "@value": "scalar_1"
                      }
                    ],
                    "smaps": {
                      "lexical": {
                        "#/declarations/types/SchemaPerson/property/url/scalar/url/scalar_1": "[(47,17)-(47,19)]"
                      }
                    }
                  }
                ],
                "shacl:defaultValueStr": [
                  {
                    "@value": ""
                  }
                ],
                "smaps": {
                  "type-property-lexical-info": {
                    "#/declarations/types/SchemaPerson/property/url/scalar/url": "[(45,6)-(45,12)]"
                  },
                  "lexical": {
                    "shacl:defaultValueStr": "[(47,6)-(47,17)]",
                    "core:name": "[(46,6)-(46,15)]",
                    "#/declarations/types/SchemaPerson/property/url/scalar/url": "[(43,4)-(43,11)]",
                    "shacl:datatype": "[(45,6)-(45,14)]",
                    "shacl:defaultValue": "[(47,6)-(47,17)]"
                  }
                }
              }
            ],
            "shacl:minCount": [
              {
                "@value": 0
              }
            ],
            "shacl:name": [
              {
                "@value": "url"
              }
            ],
            "smaps": {
              "lexical": {
                "#/declarations/types/SchemaPerson/property/url": "[(43,4)-(43,11)]"
              }
            }
          },
          {
            "@id": "#/declarations/types/SchemaPerson/property/image",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:path": [
              {
                "@id": "http://a.ml/vocabularies/data#image"
              }
            ],
            "raml-shapes:range": [
              {
                "@id": "#/declarations/types/SchemaPerson/property/image/image",
                "@type": [
                  "shacl:NodeShape",
                  "raml-shapes:AnyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:closed": [
                  {
                    "@value": false
                  }
                ],
                "shacl:property": [
                  {
                    "@id": "#/declarations/types/SchemaPerson/property/image/image/property/url",
                    "@type": [
                      "shacl:PropertyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:path": [
                      {
                        "@id": "http://a.ml/vocabularies/data#url"
                      }
                    ],
                    "raml-shapes:range": [
                      {
                        "@id": "#/declarations/types/SchemaPerson/property/image/image/property/url/scalar/url",
                        "@type": [
                          "raml-shapes:ScalarShape",
                          "raml-shapes:AnyShape",
                          "shacl:Shape",
                          "raml-shapes:Shape",
                          "doc:DomainElement"
                        ],
                        "shacl:datatype": [
                          {
                            "@id": "http://www.w3.org/2001/XMLSchema#string"
                          }
                        ],
                        "shacl:name": [
                          {
                            "@value": "url"
                          }
                        ],
                        "core:name": [
                          {
                            "@value": "The Url Schema "
                          }
                        ],
                        "shacl:defaultValue": [
                          {
                            "@id": "#/declarations/types/SchemaPerson/property/image/image/property/url/scalar/url/scalar_1",
                            "@type": [
                              "data:Scalar",
                              "data:Node",
                              "doc:DomainElement"
                            ],
                            "data:value": [
                              {
                                "@value": ""
                              }
                            ],
                            "shacl:datatype": [
                              {
                                "@id": "http://www.w3.org/2001/XMLSchema#string"
                              }
                            ],
                            "core:name": [
                              {
                                "@value": "scalar_1"
                              }
                            ],
                            "smaps": {
                              "lexical": {
                                "#/declarations/types/SchemaPerson/property/image/image/property/url/scalar/url/scalar_1": "[(60,21)-(60,23)]"
                              }
                            }
                          }
                        ],
                        "shacl:defaultValueStr": [
                          {
                            "@value": ""
                          }
                        ],
                        "smaps": {
                          "type-property-lexical-info": {
                            "#/declarations/types/SchemaPerson/property/image/image/property/url/scalar/url": "[(58,10)-(58,16)]"
                          },
                          "lexical": {
                            "shacl:defaultValueStr": "[(60,10)-(60,21)]",
                            "core:name": "[(59,10)-(59,19)]",
                            "#/declarations/types/SchemaPerson/property/image/image/property/url/scalar/url": "[(56,8)-(56,15)]",
                            "shacl:datatype": "[(58,10)-(58,18)]",
                            "shacl:defaultValue": "[(60,10)-(60,21)]"
                          }
                        }
                      }
                    ],
                    "shacl:minCount": [
                      {
                        "@value": 0
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "url"
                      }
                    ],
                    "smaps": {
                      "lexical": {
                        "#/declarations/types/SchemaPerson/property/image/image/property/url": "[(56,8)-(56,15)]"
                      }
                    }
                  },
                  {
                    "@id": "#/declarations/types/SchemaPerson/property/image/image/property/thumb",
                    "@type": [
                      "shacl:PropertyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:path": [
                      {
                        "@id": "http://a.ml/vocabularies/data#thumb"
                      }
                    ],
                    "raml-shapes:range": [
                      {
                        "@id": "#/declarations/types/SchemaPerson/property/image/image/property/thumb/scalar/thumb",
                        "@type": [
                          "raml-shapes:ScalarShape",
                          "raml-shapes:AnyShape",
                          "shacl:Shape",
                          "raml-shapes:Shape",
                          "doc:DomainElement"
                        ],
                        "shacl:datatype": [
                          {
                            "@id": "http://www.w3.org/2001/XMLSchema#string"
                          }
                        ],
                        "shacl:name": [
                          {
                            "@value": "thumb"
                          }
                        ],
                        "core:name": [
                          {
                            "@value": "The Thumb Schema "
                          }
                        ],
                        "shacl:defaultValue": [
                          {
                            "@id": "#/declarations/types/SchemaPerson/property/image/image/property/thumb/scalar/thumb/scalar_1",
                            "@type": [
                              "data:Scalar",
                              "data:Node",
                              "doc:DomainElement"
                            ],
                            "data:value": [
                              {
                                "@value": ""
                              }
                            ],
                            "shacl:datatype": [
                              {
                                "@id": "http://www.w3.org/2001/XMLSchema#string"
                              }
                            ],
                            "core:name": [
                              {
                                "@value": "scalar_1"
                              }
                            ],
                            "smaps": {
                              "lexical": {
                                "#/declarations/types/SchemaPerson/property/image/image/property/thumb/scalar/thumb/scalar_1": "[(69,21)-(69,23)]"
                              }
                            }
                          }
                        ],
                        "shacl:defaultValueStr": [
                          {
                            "@value": ""
                          }
                        ],
                        "smaps": {
                          "type-property-lexical-info": {
                            "#/declarations/types/SchemaPerson/property/image/image/property/thumb/scalar/thumb": "[(67,10)-(67,16)]"
                          },
                          "lexical": {
                            "shacl:defaultValueStr": "[(69,10)-(69,21)]",
                            "core:name": "[(68,10)-(68,19)]",
                            "#/declarations/types/SchemaPerson/property/image/image/property/thumb/scalar/thumb": "[(65,8)-(65,17)]",
                            "shacl:datatype": "[(67,10)-(67,18)]",
                            "shacl:defaultValue": "[(69,10)-(69,21)]"
                          }
                        }
                      }
                    ],
                    "shacl:minCount": [
                      {
                        "@value": 0
                      }
                    ],
                    "shacl:name": [
                      {
                        "@value": "thumb"
                      }
                    ],
                    "smaps": {
                      "lexical": {
                        "#/declarations/types/SchemaPerson/property/image/image/property/thumb": "[(65,8)-(65,17)]"
                      }
                    }
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "image"
                  }
                ],
                "smaps": {
                  "type-property-lexical-info": {
                    "#/declarations/types/SchemaPerson/property/image/image": "[(54,6)-(54,12)]"
                  },
                  "lexical": {
                    "shacl:property": "[(55,6)-(55,20)]",
                    "#/declarations/types/SchemaPerson/property/image/image": "[(52,4)-(52,13)]"
                  }
                }
              }
            ],
            "shacl:minCount": [
              {
                "@value": 0
              }
            ],
            "shacl:name": [
              {
                "@value": "image"
              }
            ],
            "smaps": {
              "lexical": {
                "#/declarations/types/SchemaPerson/property/image": "[(52,4)-(52,13)]"
              }
            }
          },
          {
            "@id": "#/declarations/types/SchemaPerson/property/tagline",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:path": [
              {
                "@id": "http://a.ml/vocabularies/data#tagline"
              }
            ],
            "raml-shapes:range": [
              {
                "@id": "#/declarations/types/SchemaPerson/property/tagline/scalar/tagline",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "raml-shapes:AnyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:datatype": [
                  {
                    "@id": "http://www.w3.org/2001/XMLSchema#string"
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "tagline"
                  }
                ],
                "core:name": [
                  {
                    "@value": "The Tagline Schema "
                  }
                ],
                "shacl:defaultValue": [
                  {
                    "@id": "#/declarations/types/SchemaPerson/property/tagline/scalar/tagline/scalar_1",
                    "@type": [
                      "data:Scalar",
                      "data:Node",
                      "doc:DomainElement"
                    ],
                    "data:value": [
                      {
                        "@value": ""
                      }
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "core:name": [
                      {
                        "@value": "scalar_1"
                      }
                    ],
                    "smaps": {
                      "lexical": {
                        "#/declarations/types/SchemaPerson/property/tagline/scalar/tagline/scalar_1": "[(80,17)-(80,19)]"
                      }
                    }
                  }
                ],
                "shacl:defaultValueStr": [
                  {
                    "@value": ""
                  }
                ],
                "smaps": {
                  "type-property-lexical-info": {
                    "#/declarations/types/SchemaPerson/property/tagline/scalar/tagline": "[(78,6)-(78,12)]"
                  },
                  "lexical": {
                    "shacl:defaultValueStr": "[(80,6)-(80,17)]",
                    "core:name": "[(79,6)-(79,15)]",
                    "#/declarations/types/SchemaPerson/property/tagline/scalar/tagline": "[(76,4)-(76,15)]",
                    "shacl:datatype": "[(78,6)-(78,14)]",
                    "shacl:defaultValue": "[(80,6)-(80,17)]"
                  }
                }
              }
            ],
            "shacl:minCount": [
              {
                "@value": 0
              }
            ],
            "shacl:name": [
              {
                "@value": "tagline"
              }
            ],
            "smaps": {
              "lexical": {
                "#/declarations/types/SchemaPerson/property/tagline": "[(76,4)-(76,15)]"
              }
            }
          },
          {
            "@id": "#/declarations/types/SchemaPerson/property/language",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:path": [
              {
                "@id": "http://a.ml/vocabularies/data#language"
              }
            ],
            "raml-shapes:range": [
              {
                "@id": "#/declarations/types/SchemaPerson/property/language/scalar/language",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "raml-shapes:AnyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:datatype": [
                  {
                    "@id": "http://www.w3.org/2001/XMLSchema#string"
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "language"
                  }
                ],
                "core:name": [
                  {
                    "@value": "The Language Schema "
                  }
                ],
                "shacl:defaultValue": [
                  {
                    "@id": "#/declarations/types/SchemaPerson/property/language/scalar/language/scalar_1",
                    "@type": [
                      "data:Scalar",
                      "data:Node",
                      "doc:DomainElement"
                    ],
                    "data:value": [
                      {
                        "@value": ""
                      }
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "core:name": [
                      {
                        "@value": "scalar_1"
                      }
                    ],
                    "smaps": {
                      "lexical": {
                        "#/declarations/types/SchemaPerson/property/language/scalar/language/scalar_1": "[(89,17)-(89,19)]"
                      }
                    }
                  }
                ],
                "shacl:defaultValueStr": [
                  {
                    "@value": ""
                  }
                ],
                "smaps": {
                  "type-property-lexical-info": {
                    "#/declarations/types/SchemaPerson/property/language/scalar/language": "[(87,6)-(87,12)]"
                  },
                  "lexical": {
                    "shacl:defaultValueStr": "[(89,6)-(89,17)]",
                    "core:name": "[(88,6)-(88,15)]",
                    "#/declarations/types/SchemaPerson/property/language/scalar/language": "[(85,4)-(85,16)]",
                    "shacl:datatype": "[(87,6)-(87,14)]",
                    "shacl:defaultValue": "[(89,6)-(89,17)]"
                  }
                }
              }
            ],
            "shacl:minCount": [
              {
                "@value": 0
              }
            ],
            "shacl:name": [
              {
                "@value": "language"
              }
            ],
            "smaps": {
              "lexical": {
                "#/declarations/types/SchemaPerson/property/language": "[(85,4)-(85,16)]"
              }
            }
          },
          {
            "@id": "#/declarations/types/SchemaPerson/property/etag",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:path": [
              {
                "@id": "http://a.ml/vocabularies/data#etag"
              }
            ],
            "raml-shapes:range": [
              {
                "@id": "#/declarations/types/SchemaPerson/property/etag/scalar/etag",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "raml-shapes:AnyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:datatype": [
                  {
                    "@id": "http://www.w3.org/2001/XMLSchema#string"
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "etag"
                  }
                ],
                "core:name": [
                  {
                    "@value": "The Etag Schema "
                  }
                ],
                "shacl:defaultValue": [
                  {
                    "@id": "#/declarations/types/SchemaPerson/property/etag/scalar/etag/scalar_1",
                    "@type": [
                      "data:Scalar",
                      "data:Node",
                      "doc:DomainElement"
                    ],
                    "data:value": [
                      {
                        "@value": ""
                      }
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "core:name": [
                      {
                        "@value": "scalar_1"
                      }
                    ],
                    "smaps": {
                      "lexical": {
                        "#/declarations/types/SchemaPerson/property/etag/scalar/etag/scalar_1": "[(98,17)-(98,19)]"
                      }
                    }
                  }
                ],
                "shacl:defaultValueStr": [
                  {
                    "@value": ""
                  }
                ],
                "smaps": {
                  "type-property-lexical-info": {
                    "#/declarations/types/SchemaPerson/property/etag/scalar/etag": "[(96,6)-(96,12)]"
                  },
                  "lexical": {
                    "shacl:defaultValueStr": "[(98,6)-(98,17)]",
                    "core:name": "[(97,6)-(97,15)]",
                    "#/declarations/types/SchemaPerson/property/etag/scalar/etag": "[(94,4)-(94,12)]",
                    "shacl:datatype": "[(96,6)-(96,14)]",
                    "shacl:defaultValue": "[(98,6)-(98,17)]"
                  }
                }
              }
            ],
            "shacl:minCount": [
              {
                "@value": 0
              }
            ],
            "shacl:name": [
              {
                "@value": "etag"
              }
            ],
            "smaps": {
              "lexical": {
                "#/declarations/types/SchemaPerson/property/etag": "[(94,4)-(94,12)]"
              }
            }
          }
        ],
        "shacl:name": [
          {
            "@value": "SchemaPerson"
          }
        ],
        "apiContract:examples": [
          {
            "@id": "#/declarations/types/SchemaPerson/example/default-example",
            "@type": [
              "apiContract:Example",
              "doc:DomainElement"
            ],
            "doc:strict": [
              {
                "@value": true
              }
            ],
            "doc:structuredValue": [
              {
                "@id": "#/declarations/types/SchemaPerson/example/default-example/object_1",
                "@type": [
                  "data:Object",
                  "data:Node",
                  "doc:DomainElement"
                ],
                "data:id": [
                  {
                    "@id": "#/declarations/types/SchemaPerson/example/default-example/object_1/scalar_2",
                    "@type": [
                      "data:Scalar",
                      "data:Node",
                      "doc:DomainElement"
                    ],
                    "data:value": [
                      {
                        "@value": "R34fg663H9KW9MMSKISI"
                      }
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "core:name": [
                      {
                        "@value": "scalar_2"
                      }
                    ],
                    "smaps": {
                      "lexical": {
                        "#/declarations/types/SchemaPerson/example/default-example/object_1/scalar_2": "[(2,8)-(2,30)]"
                      }
                    }
                  }
                ],
                "data:name": [
                  {
                    "@id": "#/declarations/types/SchemaPerson/example/default-example/object_1/scalar_3",
                    "@type": [
                      "data:Scalar",
                      "data:Node",
                      "doc:DomainElement"
                    ],
                    "data:value": [
                      {
                        "@value": "Pawel Psztyc"
                      }
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "core:name": [
                      {
                        "@value": "scalar_3"
                      }
                    ],
                    "smaps": {
                      "lexical": {
                        "#/declarations/types/SchemaPerson/example/default-example/object_1/scalar_3": "[(3,10)-(3,24)]"
                      }
                    }
                  }
                ],
                "data:birthday": [
                  {
                    "@id": "#/declarations/types/SchemaPerson/example/default-example/object_1/scalar_4",
                    "@type": [
                      "data:Scalar",
                      "data:Node",
                      "doc:DomainElement"
                    ],
                    "data:value": [
                      {
                        "@value": "1983-10-20"
                      }
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "core:name": [
                      {
                        "@value": "scalar_4"
                      }
                    ],
                    "smaps": {
                      "lexical": {
                        "#/declarations/types/SchemaPerson/example/default-example/object_1/scalar_4": "[(4,14)-(4,26)]"
                      }
                    }
                  }
                ],
                "data:gender": [
                  {
                    "@id": "#/declarations/types/SchemaPerson/example/default-example/object_1/scalar_5",
                    "@type": [
                      "data:Scalar",
                      "data:Node",
                      "doc:DomainElement"
                    ],
                    "data:value": [
                      {
                        "@value": "male"
                      }
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "core:name": [
                      {
                        "@value": "scalar_5"
                      }
                    ],
                    "smaps": {
                      "lexical": {
                        "#/declarations/types/SchemaPerson/example/default-example/object_1/scalar_5": "[(5,12)-(5,18)]"
                      }
                    }
                  }
                ],
                "data:url": [
                  {
                    "@id": "#/declarations/types/SchemaPerson/example/default-example/object_1/scalar_6",
                    "@type": [
                      "data:Scalar",
                      "data:Node",
                      "doc:DomainElement"
                    ],
                    "data:value": [
                      {
                        "@value": "https://domain.com/profile/pawel.psztyc"
                      }
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "core:name": [
                      {
                        "@value": "scalar_6"
                      }
                    ],
                    "smaps": {
                      "lexical": {
                        "#/declarations/types/SchemaPerson/example/default-example/object_1/scalar_6": "[(6,9)-(6,50)]"
                      }
                    }
                  }
                ],
                "data:image": [
                  {
                    "@id": "#/declarations/types/SchemaPerson/example/default-example/object_1/object_7",
                    "@type": [
                      "data:Object",
                      "data:Node",
                      "doc:DomainElement"
                    ],
                    "data:url": [
                      {
                        "@id": "#/declarations/types/SchemaPerson/example/default-example/object_1/object_7/scalar_8",
                        "@type": [
                          "data:Scalar",
                          "data:Node",
                          "doc:DomainElement"
                        ],
                        "data:value": [
                          {
                            "@value": "https://domain.com/profile/pawel.psztyc/image"
                          }
                        ],
                        "shacl:datatype": [
                          {
                            "@id": "http://www.w3.org/2001/XMLSchema#string"
                          }
                        ],
                        "core:name": [
                          {
                            "@value": "scalar_8"
                          }
                        ],
                        "smaps": {
                          "lexical": {
                            "#/declarations/types/SchemaPerson/example/default-example/object_1/object_7/scalar_8": "[(8,11)-(8,58)]"
                          }
                        }
                      }
                    ],
                    "data:thumb": [
                      {
                        "@id": "#/declarations/types/SchemaPerson/example/default-example/object_1/object_7/scalar_9",
                        "@type": [
                          "data:Scalar",
                          "data:Node",
                          "doc:DomainElement"
                        ],
                        "data:value": [
                          {
                            "@value": "https://domain.com/profile/pawel.psztyc/image/thumb"
                          }
                        ],
                        "shacl:datatype": [
                          {
                            "@id": "http://www.w3.org/2001/XMLSchema#string"
                          }
                        ],
                        "core:name": [
                          {
                            "@value": "scalar_9"
                          }
                        ],
                        "smaps": {
                          "lexical": {
                            "#/declarations/types/SchemaPerson/example/default-example/object_1/object_7/scalar_9": "[(9,13)-(9,66)]"
                          }
                        }
                      }
                    ],
                    "core:name": [
                      {
                        "@value": "object_7"
                      }
                    ],
                    "smaps": {
                      "lexical": {
                        "data:thumb": "[(9,4)-(9,13)]",
                        "#/declarations/types/SchemaPerson/example/default-example/object_1/object_7": "[(7,11)-(10,3)]",
                        "data:url": "[(8,4)-(8,11)]"
                      }
                    }
                  }
                ],
                "data:tagline": [
                  {
                    "@id": "#/declarations/types/SchemaPerson/example/default-example/object_1/scalar_10",
                    "@type": [
                      "data:Scalar",
                      "data:Node",
                      "doc:DomainElement"
                    ],
                    "data:value": [
                      {
                        "@value": "Some text about me."
                      }
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "core:name": [
                      {
                        "@value": "scalar_10"
                      }
                    ],
                    "smaps": {
                      "lexical": {
                        "#/declarations/types/SchemaPerson/example/default-example/object_1/scalar_10": "[(11,13)-(11,34)]"
                      }
                    }
                  }
                ],
                "data:language": [
                  {
                    "@id": "#/declarations/types/SchemaPerson/example/default-example/object_1/scalar_11",
                    "@type": [
                      "data:Scalar",
                      "data:Node",
                      "doc:DomainElement"
                    ],
                    "data:value": [
                      {
                        "@value": "en_GB"
                      }
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "core:name": [
                      {
                        "@value": "scalar_11"
                      }
                    ],
                    "smaps": {
                      "lexical": {
                        "#/declarations/types/SchemaPerson/example/default-example/object_1/scalar_11": "[(12,14)-(12,21)]"
                      }
                    }
                  }
                ],
                "data:etag": [
                  {
                    "@id": "#/declarations/types/SchemaPerson/example/default-example/object_1/scalar_12",
                    "@type": [
                      "data:Scalar",
                      "data:Node",
                      "doc:DomainElement"
                    ],
                    "data:value": [
                      {
                        "@value": "W\\244m4n5kj3gbn2nj4k4n4"
                      }
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "core:name": [
                      {
                        "@value": "scalar_12"
                      }
                    ],
                    "smaps": {
                      "lexical": {
                        "#/declarations/types/SchemaPerson/example/default-example/object_1/scalar_12": "[(13,10)-(13,36)]"
                      }
                    }
                  }
                ],
                "core:name": [
                  {
                    "@value": "object_1"
                  }
                ],
                "smaps": {
                  "parsed-json-example": {
                    "#/declarations/types/SchemaPerson/example/default-example/object_1": "{\n  \"id\": \"R34fg663H9KW9MMSKISI\",\n  \"name\": \"Pawel Psztyc\",\n  \"birthday\": \"1983-10-20\",\n  \"gender\": \"male\",\n  \"url\": \"https://domain.com/profile/pawel.psztyc\",\n  \"image\": {\n    \"url\": \"https://domain.com/profile/pawel.psztyc/image\",\n    \"thumb\": \"https://domain.com/profile/pawel.psztyc/image/thumb\"\n  },\n  \"tagline\": \"Some text about me.\",\n  \"language\": \"en_GB\",\n  \"etag\": \"W\\\\244m4n5kj3gbn2nj4k4n4\"\n}\n"
                  },
                  "lexical": {
                    "data:etag": "[(13,2)-(13,10)]",
                    "data:tagline": "[(11,2)-(11,13)]",
                    "data:url": "[(6,2)-(6,9)]",
                    "data:birthday": "[(4,2)-(4,14)]",
                    "data:id": "[(2,2)-(2,8)]",
                    "#/declarations/types/SchemaPerson/example/default-example/object_1": "[(1,0)-(14,1)]",
                    "data:name": "[(3,2)-(3,10)]",
                    "data:gender": "[(5,2)-(5,12)]",
                    "data:image": "[(7,2)-(7,11)]",
                    "data:language": "[(12,2)-(12,14)]"
                  }
                }
              }
            ],
            "doc:reference-id": [
              {
                "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/examples/person.json#/external"
              }
            ],
            "doc:location": [
              {
                "@value": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/examples/person.json"
              }
            ],
            "smaps": {
              "synthesized-field": {
                "doc:strict": "true"
              },
              "lexical": {
                "doc:structuredValue": "[(36,13)-(36,42)]",
                "#/declarations/types/SchemaPerson/example/default-example": "[(36,13)-(36,42)]"
              }
            }
          }
        ],
        "doc:reference-id": [
          {
            "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/schemas/person.json#/external"
          }
        ],
        "smaps": {
          "declared-element": {
            "#/declarations/types/SchemaPerson": ""
          },
          "lexical": {
            "shacl:name": "[(34,2)-(34,14)]",
            "#/declarations/types/SchemaPerson": "[(1,0)-(104,1)]",
            "shacl:property": "[(6,2)-(6,16)]"
          },
          "type-property-lexical-info": {
            "#/declarations/types/SchemaPerson": "[(3,2)-(3,8)]"
          },
          "parsed-json-schema": {
            "#/declarations/types/SchemaPerson": "{\n  \"$id\": \"http://example.com/example.json\",\n  \"type\": \"object\",\n  \"definitions\": {},\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"properties\": {\n    \"id\": {\n      \"$id\": \"/properties/id\",\n      \"type\": \"string\",\n      \"title\": \"The Id Schema \",\n      \"default\": \"\",\n      \"examples\": [\n        \"R34fg663H9KW9MMSKISI\"\n      ]\n    },\n    \"name\": {\n      \"$id\": \"/properties/name\",\n      \"type\": \"string\",\n      \"title\": \"The Name Schema \",\n      \"default\": \"\",\n      \"examples\": [\n        \"Pawel Psztyc\"\n      ]\n    },\n    \"birthday\": {\n      \"$id\": \"/properties/birthday\",\n      \"type\": \"string\",\n      \"title\": \"The Birthday Schema \",\n      \"default\": \"\",\n      \"examples\": [\n        \"1983-10-20\"\n      ]\n    },\n    \"gender\": {\n      \"$id\": \"/properties/gender\",\n      \"type\": \"string\",\n      \"title\": \"The Gender Schema \",\n      \"default\": \"\",\n      \"examples\": [\n        \"male\"\n      ]\n    },\n    \"url\": {\n      \"$id\": \"/properties/url\",\n      \"type\": \"string\",\n      \"title\": \"The Url Schema \",\n      \"default\": \"\",\n      \"examples\": [\n        \"https://domain.com/profile/pawel.psztyc\"\n      ]\n    },\n    \"image\": {\n      \"$id\": \"/properties/image\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"url\": {\n          \"$id\": \"/properties/image/properties/url\",\n          \"type\": \"string\",\n          \"title\": \"The Url Schema \",\n          \"default\": \"\",\n          \"examples\": [\n            \"https://domain.com/profile/pawel.psztyc/image\"\n          ]\n        },\n        \"thumb\": {\n          \"$id\": \"/properties/image/properties/thumb\",\n          \"type\": \"string\",\n          \"title\": \"The Thumb Schema \",\n          \"default\": \"\",\n          \"examples\": [\n            \"https://domain.com/profile/pawel.psztyc/image/thumb\"\n          ]\n        }\n      }\n    },\n    \"tagline\": {\n      \"$id\": \"/properties/tagline\",\n      \"type\": \"string\",\n      \"title\": \"The Tagline Schema \",\n      \"default\": \"\",\n      \"examples\": [\n        \"Some text about me.\"\n      ]\n    },\n    \"language\": {\n      \"$id\": \"/properties/language\",\n      \"type\": \"string\",\n      \"title\": \"The Language Schema \",\n      \"default\": \"\",\n      \"examples\": [\n        \"en_GB\"\n      ]\n    },\n    \"etag\": {\n      \"$id\": \"/properties/etag\",\n      \"type\": \"string\",\n      \"title\": \"The Etag Schema \",\n      \"default\": \"\",\n      \"examples\": [\n        \"W\\\\244m4n5kj3gbn2nj4k4n4\"\n      ]\n    }\n  }\n}"
          }
        }
      },
      {
        "@id": "#/declarations/types/Unionable",
        "@type": [
          "shacl:NodeShape",
          "raml-shapes:AnyShape",
          "shacl:Shape",
          "raml-shapes:Shape",
          "doc:DomainElement"
        ],
        "shacl:closed": [
          {
            "@value": false
          }
        ],
        "shacl:name": [
          {
            "@value": "Unionable"
          }
        ],
        "raml-shapes:inherits": [
          {
            "@id": "#/declarations/types/Unionable/union/default-union",
            "@type": [
              "raml-shapes:UnionShape",
              "raml-shapes:AnyShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "raml-shapes:anyOf": [
              {
                "@id": "#/declarations/types/ImportFormat/linked_3",
                "@type": [
                  "shacl:NodeShape",
                  "raml-shapes:AnyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "doc:link-target": [
                  {
                    "@id": "#/declarations/types/ImportFormat"
                  }
                ],
                "doc:link-label": [
                  {
                    "@value": "ImportFormat"
                  }
                ]
              },
              {
                "@id": "#/declarations/types/Picture/linked_3",
                "@type": [
                  "shacl:NodeShape",
                  "raml-shapes:AnyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "doc:link-target": [
                  {
                    "@id": "#/declarations/types/Picture"
                  }
                ],
                "doc:link-label": [
                  {
                    "@value": "Picture"
                  }
                ]
              }
            ],
            "smaps": {
              "lexical": {
                "#/declarations/types/Unionable/union/default-union": "[(88,4)-(89,0)]"
              },
              "type-expression": {
                "#/declarations/types/Unionable/union/default-union": "ImportFormat | Picture"
              }
            }
          }
        ],
        "smaps": {
          "declared-element": {
            "#/declarations/types/Unionable": ""
          },
          "lexical": {
            "raml-shapes:inherits": "[(88,4)-(89,0)]",
            "#/declarations/types/Unionable": "[(87,2)-(89,0)]",
            "shacl:name": "[(87,2)-(87,11)]"
          },
          "type-property-lexical-info": {
            "#/declarations/types/Unionable": "[(88,4)-(88,8)]"
          }
        }
      },
      {
        "@id": "#/declarations/types/ImportFormat",
        "@type": [
          "shacl:NodeShape",
          "raml-shapes:AnyShape",
          "shacl:Shape",
          "raml-shapes:Shape",
          "doc:DomainElement"
        ],
        "shacl:closed": [
          {
            "@value": false
          }
        ],
        "shacl:property": [
          {
            "@id": "#/declarations/types/ImportFormat/property/source",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:path": [
              {
                "@id": "http://a.ml/vocabularies/data#source"
              }
            ],
            "raml-shapes:range": [
              {
                "@id": "#/declarations/types/ImportFormat/property/source/scalar/source",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "raml-shapes:AnyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:datatype": [
                  {
                    "@id": "http://www.w3.org/2001/XMLSchema#string"
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "source"
                  }
                ],
                "core:description": [
                  {
                    "@value": "The imported file's content type to convert from."
                  }
                ],
                "smaps": {
                  "type-property-lexical-info": {
                    "#/declarations/types/ImportFormat/property/source/scalar/source": "[(80,8)-(80,12)]"
                  },
                  "lexical": {
                    "core:description": "[(81,8)-(82,0)]",
                    "#/declarations/types/ImportFormat/property/source/scalar/source": "[(79,6)-(83,0)]",
                    "shacl:datatype": "[(80,8)-(81,0)]"
                  }
                }
              }
            ],
            "shacl:minCount": [
              {
                "@value": 1
              }
            ],
            "shacl:name": [
              {
                "@value": "source"
              }
            ],
            "smaps": {
              "lexical": {
                "shacl:minCount": "[(82,8)-(83,0)]",
                "#/declarations/types/ImportFormat/property/source": "[(79,6)-(83,0)]"
              }
            }
          },
          {
            "@id": "#/declarations/types/ImportFormat/property/targets",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:path": [
              {
                "@id": "http://a.ml/vocabularies/data#targets"
              }
            ],
            "raml-shapes:range": [
              {
                "@id": "#/declarations/types/ImportFormat/property/targets/array/targets",
                "@type": [
                  "raml-shapes:ArrayShape",
                  "raml-shapes:AnyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:name": [
                  {
                    "@value": "targets"
                  }
                ],
                "core:description": [
                  {
                    "@value": "The possible content types to convert to."
                  }
                ],
                "raml-shapes:inherits": [
                  {
                    "@id": "#/declarations/types/ImportFormat/property/targets/array/targets/array/default-array",
                    "@type": [
                      "raml-shapes:ArrayShape",
                      "raml-shapes:AnyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "raml-shapes:items": [
                      {
                        "@id": "#/declarations/types/ImportFormat/property/targets/array/targets/array/default-array/items/scalar/default-scalar",
                        "@type": [
                          "raml-shapes:ScalarShape",
                          "raml-shapes:AnyShape",
                          "shacl:Shape",
                          "raml-shapes:Shape",
                          "doc:DomainElement"
                        ],
                        "shacl:datatype": [
                          {
                            "@id": "http://www.w3.org/2001/XMLSchema#string"
                          }
                        ]
                      }
                    ],
                    "smaps": {
                      "lexical": {
                        "#/declarations/types/ImportFormat/property/targets/array/targets/array/default-array": "[(85,8)-(86,0)]"
                      },
                      "type-expression": {
                        "#/declarations/types/ImportFormat/property/targets/array/targets/array/default-array": "string[]"
                      }
                    }
                  }
                ],
                "smaps": {
                  "type-property-lexical-info": {
                    "#/declarations/types/ImportFormat/property/targets/array/targets": "[(85,8)-(85,12)]"
                  },
                  "lexical": {
                    "raml-shapes:inherits": "[(85,8)-(86,0)]",
                    "#/declarations/types/ImportFormat/property/targets/array/targets": "[(83,6)-(87,0)]",
                    "core:description": "[(84,8)-(85,0)]"
                  }
                }
              }
            ],
            "shacl:minCount": [
              {
                "@value": 1
              }
            ],
            "shacl:name": [
              {
                "@value": "targets"
              }
            ],
            "smaps": {
              "lexical": {
                "shacl:minCount": "[(86,8)-(87,0)]",
                "#/declarations/types/ImportFormat/property/targets": "[(83,6)-(87,0)]"
              }
            }
          }
        ],
        "shacl:name": [
          {
            "@value": "ImportFormat"
          }
        ],
        "smaps": {
          "declared-element": {
            "#/declarations/types/ImportFormat": ""
          },
          "lexical": {
            "shacl:name": "[(77,2)-(77,14)]",
            "#/declarations/types/ImportFormat": "[(77,2)-(87,0)]",
            "shacl:property": "[(78,4)-(87,0)]"
          }
        }
      },
      {
        "@id": "#/declarations/types/Resource",
        "@type": [
          "shacl:NodeShape",
          "raml-shapes:AnyShape",
          "shacl:Shape",
          "raml-shapes:Shape",
          "doc:DomainElement"
        ],
        "doc:link-target": [
          {
            "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/resource.raml#/type"
          }
        ],
        "doc:link-label": [
          {
            "@value": "types/resource.raml"
          }
        ],
        "shacl:name": [
          {
            "@value": "Resource"
          }
        ],
        "smaps": {
          "declared-element": {
            "#/declarations/types/Resource": ""
          },
          "lexical": {
            "#/declarations/types/Resource": "[(30,21)-(30,40)]"
          }
        }
      },
      {
        "@id": "#/declarations/types/Dimension",
        "@type": [
          "shacl:NodeShape",
          "raml-shapes:AnyShape",
          "shacl:Shape",
          "raml-shapes:Shape",
          "doc:DomainElement"
        ],
        "doc:link-target": [
          {
            "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/dimensions.raml#/type"
          }
        ],
        "doc:link-label": [
          {
            "@value": "types/dimensions.raml"
          }
        ],
        "shacl:name": [
          {
            "@value": "Dimension"
          }
        ],
        "smaps": {
          "declared-element": {
            "#/declarations/types/Dimension": ""
          },
          "lexical": {
            "#/declarations/types/Dimension": "[(33,22)-(33,43)]"
          }
        }
      },
      {
        "@id": "#/declarations/types/Product",
        "@type": [
          "shacl:NodeShape",
          "raml-shapes:AnyShape",
          "shacl:Shape",
          "raml-shapes:Shape",
          "doc:DomainElement"
        ],
        "doc:link-target": [
          {
            "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/product.raml#/type"
          }
        ],
        "doc:link-label": [
          {
            "@value": "types/product.raml"
          }
        ],
        "shacl:name": [
          {
            "@value": "Product"
          }
        ],
        "smaps": {
          "declared-element": {
            "#/declarations/types/Product": ""
          },
          "lexical": {
            "#/declarations/types/Product": "[(32,20)-(32,38)]"
          }
        }
      },
      {
        "@id": "#/declarations/types/Image",
        "@type": [
          "shacl:NodeShape",
          "raml-shapes:AnyShape",
          "shacl:Shape",
          "raml-shapes:Shape",
          "doc:DomainElement"
        ],
        "doc:link-target": [
          {
            "@id": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/types/image.raml#/type"
          }
        ],
        "doc:link-label": [
          {
            "@value": "types/image.raml"
          }
        ],
        "shacl:name": [
          {
            "@value": "Image"
          }
        ],
        "smaps": {
          "declared-element": {
            "#/declarations/types/Image": ""
          },
          "lexical": {
            "#/declarations/types/Image": "[(29,18)-(29,34)]"
          }
        }
      },
      {
        "@id": "#/declarations/types/Picture",
        "@type": [
          "shacl:NodeShape",
          "raml-shapes:AnyShape",
          "shacl:Shape",
          "raml-shapes:Shape",
          "doc:DomainElement"
        ],
        "shacl:closed": [
          {
            "@value": false
          }
        ],
        "shacl:property": [
          {
            "@id": "#/declarations/types/Picture/property/url",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:path": [
              {
                "@id": "http://a.ml/vocabularies/data#url"
              }
            ],
            "raml-shapes:range": [
              {
                "@id": "#/declarations/types/Picture/property/url/scalar/url",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "raml-shapes:AnyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:datatype": [
                  {
                    "@id": "http://www.w3.org/2001/XMLSchema#string"
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "url"
                  }
                ],
                "core:description": [
                  {
                    "@value": "A URL that points to a profile picture of this user."
                  }
                ],
                "smaps": {
                  "type-property-lexical-info": {
                    "#/declarations/types/Picture/property/url/scalar/url": "[(44,8)-(44,12)]"
                  },
                  "lexical": {
                    "core:description": "[(46,8)-(47,0)]",
                    "#/declarations/types/Picture/property/url/scalar/url": "[(43,6)-(47,0)]",
                    "shacl:datatype": "[(44,8)-(45,0)]"
                  }
                }
              }
            ],
            "shacl:minCount": [
              {
                "@value": 0
              }
            ],
            "shacl:name": [
              {
                "@value": "url"
              }
            ],
            "smaps": {
              "lexical": {
                "shacl:minCount": "[(45,8)-(46,0)]",
                "#/declarations/types/Picture/property/url": "[(43,6)-(47,0)]"
              }
            }
          },
          {
            "@id": "#/declarations/types/Picture/property/dimension",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:path": [
              {
                "@id": "http://a.ml/vocabularies/data#dimension"
              }
            ],
            "raml-shapes:range": [
              {
                "@id": "#/declarations/types/Picture/property/dimension/dimension",
                "@type": [
                  "shacl:NodeShape",
                  "raml-shapes:AnyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "doc:link-target": [
                  {
                    "@id": "#/declarations/types/Dimension"
                  }
                ],
                "doc:link-label": [
                  {
                    "@value": "Dimension"
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "dimension"
                  }
                ],
                "smaps": {
                  "lexical": {
                    "#/declarations/types/Picture/property/dimension/dimension": "[(47,17)-(47,26)]"
                  }
                }
              }
            ],
            "shacl:minCount": [
              {
                "@value": 1
              }
            ],
            "shacl:name": [
              {
                "@value": "dimension"
              }
            ],
            "smaps": {
              "lexical": {
                "#/declarations/types/Picture/property/dimension": "[(47,6)-(48,0)]"
              }
            }
          }
        ],
        "shacl:name": [
          {
            "@value": "Picture"
          }
        ],
        "core:name": [
          {
            "@value": "Pic"
          }
        ],
        "core:description": [
          {
            "@value": "The user's profile picture."
          }
        ],
        "raml-shapes:inherits": [
          {
            "@id": "#/declarations/types/Resource/linked_1",
            "@type": [
              "shacl:NodeShape",
              "raml-shapes:AnyShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:link-target": [
              {
                "@id": "#/declarations/types/Resource"
              }
            ],
            "doc:link-label": [
              {
                "@value": "Resource"
              }
            ],
            "shacl:name": [
              {
                "@value": "Resource"
              }
            ],
            "smaps": {
              "auto-generated-name": {
                "#/declarations/types/Resource/linked_1": ""
              },
              "lexical": {
                "#/declarations/types/Resource/linked_1": "[(39,10)-(39,18)]"
              }
            }
          }
        ],
        "smaps": {
          "declared-element": {
            "#/declarations/types/Picture": ""
          },
          "lexical": {
            "raml-shapes:inherits": "[(39,4)-(40,0)]",
            "core:name": "[(38,4)-(39,0)]",
            "shacl:property": "[(42,4)-(48,0)]",
            "#/declarations/types/Picture": "[(37,2)-(48,0)]",
            "shacl:name": "[(37,2)-(37,9)]",
            "core:description": "[(41,4)-(42,0)]"
          },
          "type-property-lexical-info": {
            "#/declarations/types/Picture": "[(39,4)-(39,8)]"
          }
        }
      },
      {
        "@id": "#/declarations/types/Property",
        "@type": [
          "shacl:NodeShape",
          "raml-shapes:AnyShape",
          "shacl:Shape",
          "raml-shapes:Shape",
          "doc:DomainElement"
        ],
        "shacl:closed": [
          {
            "@value": false
          }
        ],
        "shacl:property": [
          {
            "@id": "#/declarations/types/Property/property/kind",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:path": [
              {
                "@id": "http://a.ml/vocabularies/data#kind"
              }
            ],
            "raml-shapes:range": [
              {
                "@id": "#/declarations/types/Property/property/kind/scalar/kind",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "raml-shapes:AnyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:datatype": [
                  {
                    "@id": "http://www.w3.org/2001/XMLSchema#string"
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "kind"
                  }
                ],
                "core:description": [
                  {
                    "@value": "This is always drive#property."
                  }
                ],
                "shacl:defaultValue": [
                  {
                    "@id": "#/declarations/types/Property/property/kind/scalar/kind/default/scalar_1",
                    "@type": [
                      "data:Scalar",
                      "data:Node",
                      "doc:DomainElement"
                    ],
                    "data:value": [
                      {
                        "@value": "drive#property"
                      }
                    ],
                    "shacl:datatype": [
                      {
                        "@id": "http://www.w3.org/2001/XMLSchema#string"
                      }
                    ],
                    "core:name": [
                      {
                        "@value": "scalar_1"
                      }
                    ],
                    "smaps": {
                      "lexical": {
                        "#/declarations/types/Property/property/kind/scalar/kind/default/scalar_1": "[(60,17)-(60,31)]"
                      }
                    }
                  }
                ],
                "shacl:in": [
                  {
                    "@id": "#/declarations/types/Property/property/kind/scalar/kind/list",
                    "@type": "rdfs:Seq",
                    "rdfs:_1": [
                      {
                        "@id": "#/declarations/types/Property/property/kind/scalar/kind/scalar_1",
                        "@type": [
                          "data:Scalar",
                          "data:Node",
                          "doc:DomainElement"
                        ],
                        "data:value": [
                          {
                            "@value": "drive#property"
                          }
                        ],
                        "shacl:datatype": [
                          {
                            "@id": "http://www.w3.org/2001/XMLSchema#string"
                          }
                        ],
                        "core:name": [
                          {
                            "@value": "scalar_1"
                          }
                        ],
                        "smaps": {
                          "lexical": {
                            "#/declarations/types/Property/property/kind/scalar/kind/scalar_1": "[(61,15)-(61,29)]"
                          }
                        }
                      }
                    ]
                  }
                ],
                "shacl:defaultValueStr": [
                  {
                    "@value": "drive#property"
                  }
                ],
                "smaps": {
                  "type-property-lexical-info": {
                    "#/declarations/types/Property/property/kind/scalar/kind": "[(58,8)-(58,12)]"
                  },
                  "lexical": {
                    "shacl:defaultValueStr": "[(60,8)-(61,0)]",
                    "shacl:defaultValue": "[(60,8)-(61,0)]",
                    "shacl:datatype": "[(58,8)-(59,0)]",
                    "#/declarations/types/Property/property/kind/scalar/kind": "[(57,6)-(62,0)]",
                    "core:description": "[(59,8)-(60,0)]",
                    "shacl:in": "[(61,8)-(62,0)]"
                  }
                }
              }
            ],
            "shacl:minCount": [
              {
                "@value": 1
              }
            ],
            "shacl:name": [
              {
                "@value": "kind"
              }
            ],
            "smaps": {
              "lexical": {
                "#/declarations/types/Property/property/kind": "[(57,6)-(62,0)]"
              }
            }
          },
          {
            "@id": "#/declarations/types/Property/property/etag",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:path": [
              {
                "@id": "http://a.ml/vocabularies/data#etag"
              }
            ],
            "raml-shapes:range": [
              {
                "@id": "#/declarations/types/Property/property/etag/scalar/etag",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "raml-shapes:AnyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:datatype": [
                  {
                    "@id": "http://www.w3.org/2001/XMLSchema#string"
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "etag"
                  }
                ],
                "core:description": [
                  {
                    "@value": "ETag of the property."
                  }
                ],
                "smaps": {
                  "type-property-lexical-info": {
                    "#/declarations/types/Property/property/etag/scalar/etag": "[(63,8)-(63,12)]"
                  },
                  "lexical": {
                    "core:description": "[(64,8)-(65,0)]",
                    "#/declarations/types/Property/property/etag/scalar/etag": "[(62,6)-(65,0)]",
                    "shacl:datatype": "[(63,8)-(64,0)]"
                  }
                }
              }
            ],
            "shacl:minCount": [
              {
                "@value": 1
              }
            ],
            "shacl:name": [
              {
                "@value": "etag"
              }
            ],
            "smaps": {
              "lexical": {
                "#/declarations/types/Property/property/etag": "[(62,6)-(65,0)]"
              }
            }
          },
          {
            "@id": "#/declarations/types/Property/property/selfLink",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:path": [
              {
                "@id": "http://a.ml/vocabularies/data#selfLink"
              }
            ],
            "raml-shapes:range": [
              {
                "@id": "#/declarations/types/Property/property/selfLink/scalar/selfLink",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "raml-shapes:AnyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:datatype": [
                  {
                    "@id": "http://www.w3.org/2001/XMLSchema#string"
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "selfLink"
                  }
                ],
                "core:description": [
                  {
                    "@value": "The link back to this property."
                  }
                ],
                "smaps": {
                  "type-property-lexical-info": {
                    "#/declarations/types/Property/property/selfLink/scalar/selfLink": "[(66,8)-(66,12)]"
                  },
                  "lexical": {
                    "core:description": "[(67,8)-(68,0)]",
                    "#/declarations/types/Property/property/selfLink/scalar/selfLink": "[(65,6)-(68,0)]",
                    "shacl:datatype": "[(66,8)-(67,0)]"
                  }
                }
              }
            ],
            "shacl:minCount": [
              {
                "@value": 1
              }
            ],
            "shacl:name": [
              {
                "@value": "selfLink"
              }
            ],
            "smaps": {
              "lexical": {
                "#/declarations/types/Property/property/selfLink": "[(65,6)-(68,0)]"
              }
            }
          },
          {
            "@id": "#/declarations/types/Property/property/key",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:path": [
              {
                "@id": "http://a.ml/vocabularies/data#key"
              }
            ],
            "raml-shapes:range": [
              {
                "@id": "#/declarations/types/Property/property/key/scalar/key",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "raml-shapes:AnyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:datatype": [
                  {
                    "@id": "http://www.w3.org/2001/XMLSchema#string"
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "key"
                  }
                ],
                "core:description": [
                  {
                    "@value": "The key of this property."
                  }
                ],
                "smaps": {
                  "type-property-lexical-info": {
                    "#/declarations/types/Property/property/key/scalar/key": "[(69,8)-(69,12)]"
                  },
                  "lexical": {
                    "core:description": "[(70,8)-(71,0)]",
                    "#/declarations/types/Property/property/key/scalar/key": "[(68,6)-(71,0)]",
                    "shacl:datatype": "[(69,8)-(70,0)]"
                  }
                }
              }
            ],
            "shacl:minCount": [
              {
                "@value": 1
              }
            ],
            "shacl:name": [
              {
                "@value": "key"
              }
            ],
            "smaps": {
              "lexical": {
                "#/declarations/types/Property/property/key": "[(68,6)-(71,0)]"
              }
            }
          },
          {
            "@id": "#/declarations/types/Property/property/visibility",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:path": [
              {
                "@id": "http://a.ml/vocabularies/data#visibility"
              }
            ],
            "raml-shapes:range": [
              {
                "@id": "#/declarations/types/Property/property/visibility/scalar/visibility",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "raml-shapes:AnyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:datatype": [
                  {
                    "@id": "http://www.w3.org/2001/XMLSchema#string"
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "visibility"
                  }
                ],
                "core:description": [
                  {
                    "@value": "The visibility of this property."
                  }
                ],
                "smaps": {
                  "type-property-lexical-info": {
                    "#/declarations/types/Property/property/visibility/scalar/visibility": "[(72,8)-(72,12)]"
                  },
                  "lexical": {
                    "core:description": "[(73,8)-(74,0)]",
                    "#/declarations/types/Property/property/visibility/scalar/visibility": "[(71,6)-(74,0)]",
                    "shacl:datatype": "[(72,8)-(73,0)]"
                  }
                }
              }
            ],
            "shacl:minCount": [
              {
                "@value": 1
              }
            ],
            "shacl:name": [
              {
                "@value": "visibility"
              }
            ],
            "smaps": {
              "lexical": {
                "#/declarations/types/Property/property/visibility": "[(71,6)-(74,0)]"
              }
            }
          },
          {
            "@id": "#/declarations/types/Property/property/value",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:path": [
              {
                "@id": "http://a.ml/vocabularies/data#value"
              }
            ],
            "raml-shapes:range": [
              {
                "@id": "#/declarations/types/Property/property/value/scalar/value",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "raml-shapes:AnyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:datatype": [
                  {
                    "@id": "http://www.w3.org/2001/XMLSchema#string"
                  }
                ],
                "shacl:name": [
                  {
                    "@value": "value"
                  }
                ],
                "core:description": [
                  {
                    "@value": "The value of this property."
                  }
                ],
                "smaps": {
                  "type-property-lexical-info": {
                    "#/declarations/types/Property/property/value/scalar/value": "[(75,8)-(75,12)]"
                  },
                  "lexical": {
                    "core:description": "[(76,8)-(77,0)]",
                    "#/declarations/types/Property/property/value/scalar/value": "[(74,6)-(77,0)]",
                    "shacl:datatype": "[(75,8)-(76,0)]"
                  }
                }
              }
            ],
            "shacl:minCount": [
              {
                "@value": 1
              }
            ],
            "shacl:name": [
              {
                "@value": "value"
              }
            ],
            "smaps": {
              "lexical": {
                "#/declarations/types/Property/property/value": "[(74,6)-(77,0)]"
              }
            }
          }
        ],
        "shacl:name": [
          {
            "@value": "Property"
          }
        ],
        "smaps": {
          "declared-element": {
            "#/declarations/types/Property": ""
          },
          "lexical": {
            "shacl:name": "[(52,2)-(52,10)]",
            "#/declarations/types/Property": "[(52,2)-(77,0)]",
            "shacl:property": "[(56,4)-(77,0)]"
          },
          "type-property-lexical-info": {
            "#/declarations/types/Property": "[(53,4)-(53,8)]"
          }
        }
      },
      {
        "@id": "#/declarations/securitySchemes/basic",
        "@type": [
          "security:SecurityScheme",
          "doc:DomainElement"
        ],
        "core:name": [
          {
            "@value": "basic"
          }
        ],
        "security:type": [
          {
            "@value": "Basic Authentication"
          }
        ],
        "core:description": [
          {
            "@value": "Test basic auth method\n"
          }
        ],
        "smaps": {
          "declared-element": {
            "#/declarations/securitySchemes/basic": ""
          },
          "lexical": {
            "core:description": "[(15,4)-(17,0)]",
            "core:name": "[(13,2)-(13,7)]",
            "#/declarations/securitySchemes/basic": "[(13,2)-(17,0)]",
            "security:type": "[(14,4)-(15,0)]"
          }
        }
      },
      {
        "@id": "#/declarations/securitySchemes/other",
        "@type": [
          "security:SecurityScheme",
          "doc:DomainElement"
        ],
        "core:name": [
          {
            "@value": "other"
          }
        ],
        "security:type": [
          {
            "@value": "Digest Authentication"
          }
        ],
        "core:displayName": [
          {
            "@value": "Digest"
          }
        ],
        "smaps": {
          "declared-element": {
            "#/declarations/securitySchemes/other": ""
          },
          "lexical": {
            "core:displayName": "[(18,4)-(19,0)]",
            "core:name": "[(17,2)-(17,7)]",
            "#/declarations/securitySchemes/other": "[(17,2)-(21,0)]",
            "security:type": "[(19,4)-(21,0)]"
          }
        }
      }
    ],
    "@context": {
      "@base": "file:///home/agarrote/Development/antoniogarrote/amf-helper-mixin/test/demo-api/demo-api.raml",
      "shacl": "http://www.w3.org/ns/shacl#",
      "raml-shapes": "http://a.ml/vocabularies/shapes#",
      "security": "http://a.ml/vocabularies/security#",
      "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
      "data": "http://a.ml/vocabularies/data#",
      "doc": "http://a.ml/vocabularies/document#",
      "apiContract": "http://a.ml/vocabularies/apiContract#",
      "core": "http://a.ml/vocabularies/core#"
    }
  }
]
