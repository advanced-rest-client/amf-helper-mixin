{
  "@context": {
    "raml-http": "http://a.ml/vocabularies/http#",
    "shacl": "http://www.w3.org/ns/shacl#",
    "raml-shapes": "http://a.ml/vocabularies/shapes#",
    "security": "http://a.ml/vocabularies/security#",
    "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
    "data": "http://a.ml/vocabularies/data#",
    "doc": "http://a.ml/vocabularies/document#",
    "schema-org": "http://schema.org/",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "hydra": "http://www.w3.org/ns/hydra/core#"
  },
  "@id": "amf://id",
  "@type": [
    "doc:Document",
    "doc:Fragment",
    "doc:Module",
    "doc:Unit"
  ],
  "doc:declares": [
    {
      "@id": "amf://id#1",
      "@type": [
        "raml-shapes:ArrayShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "raml-shapes:items": {
        "@id": "amf://id#2",
        "@type": [
          "shacl:NodeShape",
          "shacl:Shape",
          "raml-shapes:Shape",
          "doc:DomainElement"
        ],
        "schema-org:description": "The user's profile picture.",
        "schema-org:name": "Pic",
        "shacl:closed": false,
        "shacl:name": "Picture",
        "shacl:property": [
          {
            "@id": "amf://id#3",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#4",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "ETag of this resource for caching purposes.\n__This property will be ignored when creating an object.__\n",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "etag"
            },
            "shacl:minCount": 1,
            "shacl:name": "etag",
            "shacl:path": {
              "@id": "data:etag"
            }
          },
          {
            "@id": "amf://id#5",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#6",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "A URL that points to a profile picture of this user.",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "url"
            },
            "shacl:minCount": 0,
            "shacl:name": "url",
            "shacl:path": {
              "@id": "data:url"
            }
          },
          {
            "@id": "amf://id#7",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#8",
              "@type": [
                "shacl:NodeShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "doc:examples": {
                "@id": "amf://id#9",
                "@type": [
                  "doc:Example",
                  "doc:DomainElement"
                ],
                "doc:strict": true,
                "doc:structuredValue": {
                  "@id": "amf://id#10",
                  "@type": "data:Object",
                  "data:height": {
                    "@id": "file://test/demo-api/types/dimensions.raml#/shape/example/default-example/object_1/scalar_3",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:integer",
                      "@value": "160"
                    }
                  },
                  "data:width": {
                    "@id": "file://test/demo-api/types/dimensions.raml#/shape/example/default-example/object_1/scalar_2",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:integer",
                      "@value": "200"
                    }
                  }
                },
                "shacl:raw": "  width: 200\n  height: 160\n"
              },
              "schema-org:description": "A dimmensions of an object like image.\n",
              "shacl:closed": false,
              "shacl:name": "Dimension",
              "shacl:property": [
                {
                  "@id": "amf://id#11",
                  "@type": [
                    "shacl:PropertyShape",
                    "shacl:Shape",
                    "raml-shapes:Shape"
                  ],
                  "raml-shapes:range": {
                    "@id": "amf://id#12",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "schema-org:description": "Width of the shape.\n",
                    "shacl:datatype": {
                      "@id": "raml-shapes:number"
                    },
                    "shacl:name": "width"
                  },
                  "shacl:minCount": 1,
                  "shacl:name": "width",
                  "shacl:path": {
                    "@id": "data:width"
                  }
                },
                {
                  "@id": "amf://id#13",
                  "@type": [
                    "shacl:PropertyShape",
                    "shacl:Shape",
                    "raml-shapes:Shape"
                  ],
                  "raml-shapes:range": {
                    "@id": "amf://id#14",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "schema-org:description": "Height of the shape.\n",
                    "shacl:datatype": {
                      "@id": "raml-shapes:number"
                    },
                    "shacl:name": "height"
                  },
                  "shacl:minCount": 1,
                  "shacl:name": "height",
                  "shacl:path": {
                    "@id": "data:height"
                  }
                },
                {
                  "@id": "amf://id#15",
                  "@type": [
                    "shacl:PropertyShape",
                    "shacl:Shape",
                    "raml-shapes:Shape"
                  ],
                  "raml-shapes:range": {
                    "@id": "amf://id#16",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "schema-org:description": "A unit that describes the dimension. It can be, for example, `px` for\npixels, `pt` for points, `%` for percentage.\n",
                    "shacl:datatype": {
                      "@id": "xsd:string"
                    },
                    "shacl:defaultValue": {
                      "@id": "amf://id#17",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "px"
                      }
                    },
                    "shacl:defaultValueStr": "px",
                    "shacl:name": "unit?"
                  },
                  "shacl:minCount": 0,
                  "shacl:name": "unit",
                  "shacl:path": {
                    "@id": "data:unit"
                  }
                }
              ]
            },
            "shacl:minCount": 1,
            "shacl:name": "dimension",
            "shacl:path": {
              "@id": "data:dimension"
            }
          }
        ]
      },
      "shacl:name": "Arrable"
    },
    {
      "@id": "amf://id#24",
      "@type": [
        "shacl:NodeShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "doc:examples": {
        "@id": "amf://id#25",
        "@type": [
          "doc:Example",
          "doc:DomainElement"
        ],
        "doc:strict": true,
        "doc:structuredValue": {
          "@id": "amf://id#26",
          "@type": "data:Object",
          "data:birthday": {
            "@id": "file://test/demo-api/types/app-person.raml#/shape/example/default-example/object_1/scalar_4",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "1983-10-20"
            }
          },
          "data:etag": {
            "@id": "file://test/demo-api/types/app-person.raml#/shape/example/default-example/object_1/scalar_12",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "W\\244m4n5kj3gbn2nj4k4n4"
            }
          },
          "data:favouriteNumber": {
            "@id": "file://test/demo-api/types/app-person.raml#/shape/example/default-example/object_1/scalar_13",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:integer",
              "@value": "10"
            }
          },
          "data:favouriteTime": {
            "@id": "file://test/demo-api/types/app-person.raml#/shape/example/default-example/object_1/scalar_14",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "10:29:52"
            }
          },
          "data:gender": {
            "@id": "file://test/demo-api/types/app-person.raml#/shape/example/default-example/object_1/scalar_5",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "male"
            }
          },
          "data:id": {
            "@id": "file://test/demo-api/types/app-person.raml#/shape/example/default-example/object_1/scalar_2",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "R34fg663H9KW9MMSKISIhTs1dR7Hss7e"
            }
          },
          "data:image": {
            "@id": "file://test/demo-api/types/app-person.raml#/shape/example/default-example/object_1/object_7",
            "@type": "data:Object",
            "data:thumb": {
              "@id": "file://test/demo-api/types/app-person.raml#/shape/example/default-example/object_1/object_7/scalar_9",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "https://domain.com/profile/pawel.psztyc/image/thumb"
              }
            },
            "data:url": {
              "@id": "file://test/demo-api/types/app-person.raml#/shape/example/default-example/object_1/object_7/scalar_8",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "https://domain.com/profile/pawel.psztyc/image"
              }
            }
          },
          "data:language": {
            "@id": "file://test/demo-api/types/app-person.raml#/shape/example/default-example/object_1/scalar_11",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "en_GB"
            }
          },
          "data:name": {
            "@id": "file://test/demo-api/types/app-person.raml#/shape/example/default-example/object_1/scalar_3",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "Pawel Psztyc"
            }
          },
          "data:nillable": {
            "@id": "file://test/demo-api/types/app-person.raml#/shape/example/default-example/object_1/scalar_15",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:nil",
              "@value": "null"
            }
          },
          "data:tagline": {
            "@id": "file://test/demo-api/types/app-person.raml#/shape/example/default-example/object_1/scalar_10",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "Some text about me."
            }
          },
          "data:url": {
            "@id": "file://test/demo-api/types/app-person.raml#/shape/example/default-example/object_1/scalar_6",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "https://domain.com/profile/pawel.psztyc"
            }
          }
        },
        "shacl:raw": "  id: \"R34fg663H9KW9MMSKISIhTs1dR7Hss7e\"\n  name: \"Pawel Psztyc\"\n  birthday: \"1983-10-20\"\n  gender: male\n  url: \"https://domain.com/profile/pawel.psztyc\"\n  image:\n    url: https://domain.com/profile/pawel.psztyc/image\n    thumb: https://domain.com/profile/pawel.psztyc/image/thumb\n  tagline: Some text about me.\n  language: en_GB\n  etag: \"W\\\\244m4n5kj3gbn2nj4k4n4\"\n  favouriteNumber: 10\n  favouriteTime: 10:29:52\n  nillable: null\n\n"
      },
      "schema-org:description": "An object representing a person in the API.\nThis object will be used in all methods returning a Person or list of people.\n",
      "schema-org:name": "A person resource",
      "shacl:closed": false,
      "shacl:name": "AppPerson",
      "shacl:property": [
        {
          "@id": "amf://id#27",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#28",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "The person's favourite time of day",
            "shacl:datatype": {
              "@id": "xsd:time"
            },
            "shacl:name": "favouriteTime"
          },
          "shacl:minCount": 1,
          "shacl:name": "favouriteTime",
          "shacl:path": {
            "@id": "data:favouriteTime"
          }
        },
        {
          "@id": "amf://id#29",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#30",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#31",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#32",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:integer",
                  "@value": "25"
                }
              },
              "shacl:raw": "25"
            },
            "raml-shapes:multipleOf": 5,
            "schema-org:name": "Favourite number",
            "shacl:datatype": {
              "@id": "raml-shapes:number"
            },
            "shacl:maxInclusive": 9999,
            "shacl:minInclusive": 0,
            "shacl:name": "favouriteNumber"
          },
          "shacl:minCount": 1,
          "shacl:name": "favouriteNumber",
          "shacl:path": {
            "@id": "data:favouriteNumber"
          }
        },
        {
          "@id": "amf://id#33",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#34",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:datatype": {
              "@id": "xsd:boolean"
            },
            "shacl:defaultValue": {
              "@id": "amf://id#35",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:boolean",
                "@value": "false"
              }
            },
            "shacl:defaultValueStr": "false",
            "shacl:name": "newsletter"
          },
          "shacl:minCount": 0,
          "shacl:name": "newsletter",
          "shacl:path": {
            "@id": "data:newsletter"
          }
        },
        {
          "@id": "amf://id#36",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#37",
            "@type": [
              "raml-shapes:FileShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:fileType": [
              "image/png",
              "image/jpeg",
              "image/jpg",
              "image/gif"
            ],
            "shacl:maxLength": 1000,
            "shacl:minLength": 10
          },
          "shacl:minCount": 0,
          "shacl:name": "fietype",
          "shacl:path": {
            "@id": "data:fietype"
          }
        },
        {
          "@id": "amf://id#3",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#4",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "ETag of this resource for caching purposes.\n__This property will be ignored when creating an object.__\n",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "etag"
          },
          "shacl:minCount": 1,
          "shacl:name": "etag",
          "shacl:path": {
            "@id": "data:etag"
          }
        },
        {
          "@id": "amf://id#38",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#39",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "The brief description (tagline) of this person.",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "tagline"
          },
          "shacl:minCount": 1,
          "shacl:name": "tagline",
          "shacl:path": {
            "@id": "data:tagline"
          }
        },
        {
          "@id": "amf://id#40",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#41",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#42",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#43",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "John Smith"
                }
              },
              "shacl:raw": "John Smith"
            },
            "schema-org:description": "Person full name. The input will be rejected if this property is not set while creating new object.",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "name",
            "shacl:pattern": "^[0-9a-zA-Z ]+$"
          },
          "shacl:minCount": 1,
          "shacl:name": "name",
          "shacl:path": {
            "@id": "data:name"
          }
        },
        {
          "@id": "amf://id#44",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#45",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#46",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#47",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "raml-shapes:dateTimeOnly",
                  "@value": "2018-04-09T19:10:15"
                }
              },
              "shacl:raw": "2018-04-09T19:10:15"
            },
            "shacl:datatype": {
              "@id": "raml-shapes:dateTimeOnly"
            },
            "shacl:name": "created"
          },
          "shacl:minCount": 0,
          "shacl:name": "created",
          "shacl:path": {
            "@id": "data:created"
          }
        },
        {
          "@id": "amf://id#48",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#49",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "The URL of this person's profile.",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "url"
          },
          "shacl:minCount": 1,
          "shacl:name": "url",
          "shacl:path": {
            "@id": "data:url"
          }
        },
        {
          "@id": "amf://id#50",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#51",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "A unique identifier of a person.\n\nIt is a 32 bit string containing alphanumeric characters.\n",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:maxLength": 32,
            "shacl:minLength": 32,
            "shacl:name": "id",
            "shacl:pattern": "^[A-Za-z0-9]*$"
          },
          "shacl:minCount": 1,
          "shacl:name": "id",
          "shacl:path": {
            "@id": "data:id"
          }
        },
        {
          "@id": "amf://id#52",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#53",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "The user's preferred language for rendering.",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "language"
          },
          "shacl:minCount": 1,
          "shacl:name": "language",
          "shacl:path": {
            "@id": "data:language"
          }
        },
        {
          "@id": "amf://id#54",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#55",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "Very unpractical property to have in a data store.\n",
            "shacl:datatype": {
              "@id": "xsd:integer"
            },
            "shacl:name": "age"
          },
          "shacl:minCount": 0,
          "shacl:name": "age",
          "shacl:path": {
            "@id": "data:age"
          }
        },
        {
          "@id": "amf://id#56",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#57",
            "@type": [
              "raml-shapes:UnionShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:anyOf": [
              {
                "@id": "amf://id#58",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:datatype": {
                  "@id": "xsd:string"
                }
              },
              {
                "@id": "amf://id#59",
                "@type": [
                  "raml-shapes:NilShape",
                  "shacl:Shape",
                  "raml-shapes:Shape"
                ]
              }
            ],
            "shacl:name": "amf_inline_type_1"
          },
          "shacl:minCount": 1,
          "shacl:name": "nillable",
          "shacl:path": {
            "@id": "data:nillable"
          }
        },
        {
          "@id": "amf://id#60",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#61",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "The person's date of birth, represented as YYYY-MM-DD.",
            "shacl:datatype": {
              "@id": "xsd:date"
            },
            "shacl:name": "birthday"
          },
          "shacl:minCount": 1,
          "shacl:name": "birthday",
          "shacl:path": {
            "@id": "data:birthday"
          }
        },
        {
          "@id": "amf://id#62",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#63",
            "@type": [
              "shacl:NodeShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#64",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#65",
                "@type": "data:Object",
                "data:thumb": {
                  "@id": "file://test/demo-api/types/image.raml#/shape/example/default-example/object_1/scalar_3",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "https://domain.com/profile/pawel.psztyc/image/thumb"
                  }
                },
                "data:url": {
                  "@id": "file://test/demo-api/types/image.raml#/shape/example/default-example/object_1/scalar_2",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "https://domain.com/profile/pawel.psztyc/image"
                  }
                }
              },
              "shacl:raw": "  url: https://domain.com/profile/pawel.psztyc/image\n  thumb: https://domain.com/profile/pawel.psztyc/image/thumb\n"
            },
            "schema-org:description": "An image object representing an image object strored in the file store.\nThe image can be only included in the response. It has no effect if the Image appear in the\nrequest. Endpoint handles image creation on it's own and clients can't process images\nexcept of sending image data.\n",
            "shacl:closed": false,
            "shacl:name": "image",
            "shacl:property": [
              {
                "@id": "amf://id#66",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape"
                ],
                "raml-shapes:range": {
                  "@id": "amf://id#67",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "schema-org:description": "The URL of the image.\nTo resize the image and crop it to a square, append the query string **?sz=x**, where x is the dimension in pixels of each side.\n",
                  "shacl:datatype": {
                    "@id": "xsd:string"
                  },
                  "shacl:name": "url"
                },
                "shacl:minCount": 1,
                "shacl:name": "url",
                "shacl:path": {
                  "@id": "data:url"
                }
              },
              {
                "@id": "amf://id#68",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape"
                ],
                "raml-shapes:range": {
                  "@id": "amf://id#69",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "schema-org:description": "An URL to the thumbnail of the image. Thumbnails are 60x60px cropped images of the original image.\n",
                  "schema-org:name": "Thumbnail",
                  "shacl:datatype": {
                    "@id": "xsd:string"
                  },
                  "shacl:name": "thumb"
                },
                "shacl:minCount": 1,
                "shacl:name": "thumb",
                "shacl:path": {
                  "@id": "data:thumb"
                }
              }
            ]
          },
          "shacl:minCount": 1,
          "shacl:name": "image",
          "shacl:path": {
            "@id": "data:image"
          }
        },
        {
          "@id": "amf://id#72",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#73",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": [
              {
                "@id": "amf://id#77",
                "@type": [
                  "doc:Example",
                  "doc:DomainElement"
                ],
                "doc:strict": true,
                "doc:structuredValue": {
                  "@id": "amf://id#78",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "female"
                  }
                },
                "schema-org:name": "Women",
                "shacl:raw": "female"
              },
              {
                "@id": "amf://id#79",
                "@type": [
                  "doc:Example",
                  "doc:DomainElement"
                ],
                "doc:strict": true,
                "doc:structuredValue": {
                  "@id": "amf://id#80",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "male"
                  }
                },
                "schema-org:name": "Man",
                "shacl:raw": "male"
              },
              {
                "@id": "amf://id#81",
                "@type": [
                  "doc:Example",
                  "doc:DomainElement"
                ],
                "doc:strict": true,
                "doc:structuredValue": {
                  "@id": "amf://id#82",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "other"
                  }
                },
                "schema-org:name": "Elmo",
                "shacl:raw": "other"
              }
            ],
            "schema-org:description": "The person's gender. Possible values includes, but are not limited to, the following values:\n* \"male\" - Male gender.\n* \"female\" - Female gender.\n* \"other\" - Other.\n",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:in": {
              "@id": "amf://id#73/list",
              "@type": "rdfs:Seq",
              "rdfs:_1": {
                "@id": "amf://id#74",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "male"
                }
              },
              "rdfs:_2": {
                "@id": "amf://id#75",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "female"
                }
              },
              "rdfs:_3": {
                "@id": "amf://id#76",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "other"
                }
              }
            },
            "shacl:name": "gender?"
          },
          "shacl:minCount": 0,
          "shacl:name": "gender",
          "shacl:path": {
            "@id": "data:gender"
          }
        }
      ]
    },
    {
      "@id": "amf://id#85",
      "@type": [
        "shacl:NodeShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "schema-org:description": "A single product representing an item in the store.",
      "schema-org:name": "A product resource",
      "shacl:closed": false,
      "shacl:name": "ComplexInclusion",
      "shacl:property": [
        {
          "@id": "amf://id#3",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#4",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "ETag of this resource for caching purposes.\n__This property will be ignored when creating an object.__\n",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "etag"
          },
          "shacl:minCount": 1,
          "shacl:name": "etag",
          "shacl:path": {
            "@id": "data:etag"
          }
        },
        {
          "@id": "amf://id#87",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#88",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#89",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#90",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "042100005264"
                }
              },
              "shacl:raw": "042100005264"
            },
            "schema-org:description": "The Universal Produc Code. It consists of 12 numerical digits. However, because of the\ninteger precision limitation in JavaScript it is represented as a string.\n",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "upc",
            "shacl:pattern": "^[0-9]{12,12}$"
          },
          "shacl:minCount": 1,
          "shacl:name": "upc",
          "shacl:path": {
            "@id": "data:upc"
          }
        },
        {
          "@id": "amf://id#91",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#92",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#93",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#94",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "Acme product - mentol flavor, 500 ml."
                }
              },
              "shacl:raw": "Acme product - mentol flavor, 500 ml."
            },
            "schema-org:description": "Product name",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "name"
          },
          "shacl:minCount": 1,
          "shacl:name": "name",
          "shacl:path": {
            "@id": "data:name"
          }
        },
        {
          "@id": "amf://id#95",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#8",
            "@type": [
              "shacl:NodeShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#9",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#10",
                "@type": "data:Object",
                "data:height": {
                  "@id": "file://test/demo-api/types/dimensions.raml#/shape/example/default-example/object_1/scalar_3",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:integer",
                    "@value": "160"
                  }
                },
                "data:width": {
                  "@id": "file://test/demo-api/types/dimensions.raml#/shape/example/default-example/object_1/scalar_2",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:integer",
                    "@value": "200"
                  }
                }
              },
              "shacl:raw": "  width: 200\n  height: 160\n"
            },
            "schema-org:description": "A dimmensions of an object like image.\n",
            "shacl:closed": false,
            "shacl:name": "Dimension",
            "shacl:property": [
              {
                "@id": "amf://id#11",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape"
                ],
                "raml-shapes:range": {
                  "@id": "amf://id#12",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "schema-org:description": "Width of the shape.\n",
                  "shacl:datatype": {
                    "@id": "raml-shapes:number"
                  },
                  "shacl:name": "width"
                },
                "shacl:minCount": 1,
                "shacl:name": "width",
                "shacl:path": {
                  "@id": "data:width"
                }
              },
              {
                "@id": "amf://id#13",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape"
                ],
                "raml-shapes:range": {
                  "@id": "amf://id#14",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "schema-org:description": "Height of the shape.\n",
                  "shacl:datatype": {
                    "@id": "raml-shapes:number"
                  },
                  "shacl:name": "height"
                },
                "shacl:minCount": 1,
                "shacl:name": "height",
                "shacl:path": {
                  "@id": "data:height"
                }
              },
              {
                "@id": "amf://id#15",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape"
                ],
                "raml-shapes:range": {
                  "@id": "amf://id#16",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "schema-org:description": "A unit that describes the dimension. It can be, for example, `px` for\npixels, `pt` for points, `%` for percentage.\n",
                  "shacl:datatype": {
                    "@id": "xsd:string"
                  },
                  "shacl:defaultValue": {
                    "@id": "amf://id#17",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "px"
                    }
                  },
                  "shacl:defaultValueStr": "px",
                  "shacl:name": "unit?"
                },
                "shacl:minCount": 0,
                "shacl:name": "unit",
                "shacl:path": {
                  "@id": "data:unit"
                }
              }
            ]
          },
          "shacl:minCount": 1,
          "shacl:name": "dimension",
          "shacl:path": {
            "@id": "data:dimension"
          }
        },
        {
          "@id": "amf://id#96",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#97",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "Product id. It is a UUID of the database record.\n__This property will be ignored when creating an object.__\nIt will be available when the product is stored in the datastore.\n",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "id",
            "shacl:pattern": "^[0-9a-zA-Z-]+$"
          },
          "shacl:minCount": 1,
          "shacl:name": "id",
          "shacl:path": {
            "@id": "data:id"
          }
        },
        {
          "@id": "amf://id#98",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#99",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#100",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#101",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "ml"
                }
              },
              "shacl:raw": "ml"
            },
            "schema-org:description": "The unit of measuremet for the quantity property.",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "unit"
          },
          "shacl:minCount": 1,
          "shacl:name": "unit",
          "shacl:path": {
            "@id": "data:unit"
          }
        },
        {
          "@id": "amf://id#102",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#103",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#104",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#105",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:boolean",
                  "@value": "true"
                }
              },
              "shacl:raw": "true"
            },
            "schema-org:description": "Product current availability in the store.\nProduct may be not available but the users still can order it with later delivery date.\n",
            "shacl:datatype": {
              "@id": "xsd:boolean"
            },
            "shacl:name": "available"
          },
          "shacl:minCount": 1,
          "shacl:name": "available",
          "shacl:path": {
            "@id": "data:available"
          }
        },
        {
          "@id": "amf://id#106",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#107",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#108",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#109",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:integer",
                  "@value": "500"
                }
              },
              "shacl:raw": "500"
            },
            "schema-org:description": "The quantity of the product in the one unit of measurement.\nSee `unit` property for more information.\n",
            "shacl:datatype": {
              "@id": "raml-shapes:number"
            },
            "shacl:name": "quantity"
          },
          "shacl:minCount": 1,
          "shacl:name": "quantity",
          "shacl:path": {
            "@id": "data:quantity"
          }
        }
      ]
    },
    {
      "@id": "amf://id#111",
      "@type": [
        "shacl:NodeShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "doc:examples": {
        "@id": "amf://id#113",
        "@type": [
          "doc:Example",
          "doc:DomainElement"
        ],
        "doc:reference-id": {
          "@id": "amf://id#114"
        },
        "doc:strict": true,
        "doc:structuredValue": {
          "@id": "amf://id#115",
          "@type": "data:Object",
          "data:birthday": {
            "@id": "file://test/demo-api/demo-api.raml#/declarations/types/SchemaPerson/example/default-example/object_1/scalar_4",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "1983-10-20"
            }
          },
          "data:etag": {
            "@id": "file://test/demo-api/demo-api.raml#/declarations/types/SchemaPerson/example/default-example/object_1/scalar_12",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "W\\244m4n5kj3gbn2nj4k4n4"
            }
          },
          "data:gender": {
            "@id": "file://test/demo-api/demo-api.raml#/declarations/types/SchemaPerson/example/default-example/object_1/scalar_5",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "male"
            }
          },
          "data:id": {
            "@id": "file://test/demo-api/demo-api.raml#/declarations/types/SchemaPerson/example/default-example/object_1/scalar_2",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "R34fg663H9KW9MMSKISI"
            }
          },
          "data:image": {
            "@id": "file://test/demo-api/demo-api.raml#/declarations/types/SchemaPerson/example/default-example/object_1/object_7",
            "@type": "data:Object",
            "data:thumb": {
              "@id": "file://test/demo-api/demo-api.raml#/declarations/types/SchemaPerson/example/default-example/object_1/object_7/scalar_9",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "https://domain.com/profile/pawel.psztyc/image/thumb"
              }
            },
            "data:url": {
              "@id": "file://test/demo-api/demo-api.raml#/declarations/types/SchemaPerson/example/default-example/object_1/object_7/scalar_8",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "https://domain.com/profile/pawel.psztyc/image"
              }
            }
          },
          "data:language": {
            "@id": "file://test/demo-api/demo-api.raml#/declarations/types/SchemaPerson/example/default-example/object_1/scalar_11",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "en_GB"
            }
          },
          "data:name": {
            "@id": "file://test/demo-api/demo-api.raml#/declarations/types/SchemaPerson/example/default-example/object_1/scalar_3",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "Pawel Psztyc"
            }
          },
          "data:tagline": {
            "@id": "file://test/demo-api/demo-api.raml#/declarations/types/SchemaPerson/example/default-example/object_1/scalar_10",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "Some text about me."
            }
          },
          "data:url": {
            "@id": "file://test/demo-api/demo-api.raml#/declarations/types/SchemaPerson/example/default-example/object_1/scalar_6",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "https://domain.com/profile/pawel.psztyc"
            }
          }
        }
      },
      "doc:reference-id": {
        "@id": "amf://id#112"
      },
      "shacl:closed": false,
      "shacl:name": "SchemaPerson",
      "shacl:property": [
        {
          "@id": "amf://id#116",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#117",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:name": "The Id Schema ",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:defaultValue": {
              "@id": "amf://id#118",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": ""
              }
            },
            "shacl:defaultValueStr": "\"\"",
            "shacl:name": "id"
          },
          "shacl:minCount": 0,
          "shacl:name": "id",
          "shacl:path": {
            "@id": "data:id"
          }
        },
        {
          "@id": "amf://id#119",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#120",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:name": "The Name Schema ",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:defaultValue": {
              "@id": "amf://id#121",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": ""
              }
            },
            "shacl:defaultValueStr": "\"\"",
            "shacl:name": "name"
          },
          "shacl:minCount": 0,
          "shacl:name": "name",
          "shacl:path": {
            "@id": "data:name"
          }
        },
        {
          "@id": "amf://id#122",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#123",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:name": "The Birthday Schema ",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:defaultValue": {
              "@id": "amf://id#124",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": ""
              }
            },
            "shacl:defaultValueStr": "\"\"",
            "shacl:name": "birthday"
          },
          "shacl:minCount": 0,
          "shacl:name": "birthday",
          "shacl:path": {
            "@id": "data:birthday"
          }
        },
        {
          "@id": "amf://id#125",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#126",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:name": "The Gender Schema ",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:defaultValue": {
              "@id": "amf://id#127",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": ""
              }
            },
            "shacl:defaultValueStr": "\"\"",
            "shacl:name": "gender"
          },
          "shacl:minCount": 0,
          "shacl:name": "gender",
          "shacl:path": {
            "@id": "data:gender"
          }
        },
        {
          "@id": "amf://id#128",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#129",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:name": "The Url Schema ",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:defaultValue": {
              "@id": "amf://id#130",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": ""
              }
            },
            "shacl:defaultValueStr": "\"\"",
            "shacl:name": "url"
          },
          "shacl:minCount": 0,
          "shacl:name": "url",
          "shacl:path": {
            "@id": "data:url"
          }
        },
        {
          "@id": "amf://id#131",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#132",
            "@type": [
              "shacl:NodeShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:closed": false,
            "shacl:name": "image",
            "shacl:property": [
              {
                "@id": "amf://id#133",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape"
                ],
                "raml-shapes:range": {
                  "@id": "amf://id#134",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "schema-org:name": "The Url Schema ",
                  "shacl:datatype": {
                    "@id": "xsd:string"
                  },
                  "shacl:defaultValue": {
                    "@id": "amf://id#135",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": ""
                    }
                  },
                  "shacl:defaultValueStr": "\"\"",
                  "shacl:name": "url"
                },
                "shacl:minCount": 0,
                "shacl:name": "url",
                "shacl:path": {
                  "@id": "data:url"
                }
              },
              {
                "@id": "amf://id#136",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape"
                ],
                "raml-shapes:range": {
                  "@id": "amf://id#137",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "schema-org:name": "The Thumb Schema ",
                  "shacl:datatype": {
                    "@id": "xsd:string"
                  },
                  "shacl:defaultValue": {
                    "@id": "amf://id#138",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": ""
                    }
                  },
                  "shacl:defaultValueStr": "\"\"",
                  "shacl:name": "thumb"
                },
                "shacl:minCount": 0,
                "shacl:name": "thumb",
                "shacl:path": {
                  "@id": "data:thumb"
                }
              }
            ]
          },
          "shacl:minCount": 0,
          "shacl:name": "image",
          "shacl:path": {
            "@id": "data:image"
          }
        },
        {
          "@id": "amf://id#139",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#140",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:name": "The Tagline Schema ",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:defaultValue": {
              "@id": "amf://id#141",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": ""
              }
            },
            "shacl:defaultValueStr": "\"\"",
            "shacl:name": "tagline"
          },
          "shacl:minCount": 0,
          "shacl:name": "tagline",
          "shacl:path": {
            "@id": "data:tagline"
          }
        },
        {
          "@id": "amf://id#142",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#143",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:name": "The Language Schema ",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:defaultValue": {
              "@id": "amf://id#144",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": ""
              }
            },
            "shacl:defaultValueStr": "\"\"",
            "shacl:name": "language"
          },
          "shacl:minCount": 0,
          "shacl:name": "language",
          "shacl:path": {
            "@id": "data:language"
          }
        },
        {
          "@id": "amf://id#145",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#146",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:name": "The Etag Schema ",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:defaultValue": {
              "@id": "amf://id#147",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": ""
              }
            },
            "shacl:defaultValueStr": "\"\"",
            "shacl:name": "etag"
          },
          "shacl:minCount": 0,
          "shacl:name": "etag",
          "shacl:path": {
            "@id": "data:etag"
          }
        }
      ]
    },
    {
      "@id": "amf://id#149",
      "@type": [
        "raml-shapes:UnionShape",
        "shacl:Shape",
        "raml-shapes:Shape"
      ],
      "raml-shapes:anyOf": [
        {
          "@id": "amf://id#150",
          "@type": [
            "shacl:NodeShape",
            "shacl:Shape",
            "raml-shapes:Shape",
            "doc:DomainElement"
          ],
          "shacl:closed": false,
          "shacl:name": "Unionable",
          "shacl:property": [
            {
              "@id": "amf://id#151",
              "@type": [
                "shacl:PropertyShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "raml-shapes:range": {
                "@id": "amf://id#152",
                "@type": [
                  "raml-shapes:ArrayShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "raml-shapes:items": {
                  "@id": "amf://id#153",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "shacl:datatype": {
                    "@id": "xsd:string"
                  }
                },
                "schema-org:description": "The possible content types to convert to.",
                "shacl:name": "targets"
              },
              "shacl:minCount": 1,
              "shacl:name": "targets",
              "shacl:path": {
                "@id": "data:targets"
              }
            },
            {
              "@id": "amf://id#155",
              "@type": [
                "shacl:PropertyShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "raml-shapes:range": {
                "@id": "amf://id#156",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "schema-org:description": "The imported file's content type to convert from.",
                "shacl:datatype": {
                  "@id": "xsd:string"
                },
                "shacl:name": "source"
              },
              "shacl:minCount": 1,
              "shacl:name": "source",
              "shacl:path": {
                "@id": "data:source"
              }
            }
          ]
        },
        {
          "@id": "amf://id#157",
          "@type": [
            "shacl:NodeShape",
            "shacl:Shape",
            "raml-shapes:Shape",
            "doc:DomainElement"
          ],
          "schema-org:description": "The user's profile picture.",
          "schema-org:name": "Pic",
          "shacl:closed": false,
          "shacl:name": "Unionable",
          "shacl:property": [
            {
              "@id": "amf://id#3",
              "@type": [
                "shacl:PropertyShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "raml-shapes:range": {
                "@id": "amf://id#4",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "schema-org:description": "ETag of this resource for caching purposes.\n__This property will be ignored when creating an object.__\n",
                "shacl:datatype": {
                  "@id": "xsd:string"
                },
                "shacl:name": "etag"
              },
              "shacl:minCount": 1,
              "shacl:name": "etag",
              "shacl:path": {
                "@id": "data:etag"
              }
            },
            {
              "@id": "amf://id#5",
              "@type": [
                "shacl:PropertyShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "raml-shapes:range": {
                "@id": "amf://id#6",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "schema-org:description": "A URL that points to a profile picture of this user.",
                "shacl:datatype": {
                  "@id": "xsd:string"
                },
                "shacl:name": "url"
              },
              "shacl:minCount": 0,
              "shacl:name": "url",
              "shacl:path": {
                "@id": "data:url"
              }
            },
            {
              "@id": "amf://id#7",
              "@type": [
                "shacl:PropertyShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "raml-shapes:range": {
                "@id": "amf://id#8",
                "@type": [
                  "shacl:NodeShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "doc:examples": {
                  "@id": "amf://id#9",
                  "@type": [
                    "doc:Example",
                    "doc:DomainElement"
                  ],
                  "doc:strict": true,
                  "doc:structuredValue": {
                    "@id": "amf://id#10",
                    "@type": "data:Object",
                    "data:height": {
                      "@id": "file://test/demo-api/types/dimensions.raml#/shape/example/default-example/object_1/scalar_3",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:integer",
                        "@value": "160"
                      }
                    },
                    "data:width": {
                      "@id": "file://test/demo-api/types/dimensions.raml#/shape/example/default-example/object_1/scalar_2",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:integer",
                        "@value": "200"
                      }
                    }
                  },
                  "shacl:raw": "  width: 200\n  height: 160\n"
                },
                "schema-org:description": "A dimmensions of an object like image.\n",
                "shacl:closed": false,
                "shacl:name": "Dimension",
                "shacl:property": [
                  {
                    "@id": "amf://id#11",
                    "@type": [
                      "shacl:PropertyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape"
                    ],
                    "raml-shapes:range": {
                      "@id": "amf://id#12",
                      "@type": [
                        "raml-shapes:ScalarShape",
                        "shacl:Shape",
                        "raml-shapes:Shape",
                        "doc:DomainElement"
                      ],
                      "schema-org:description": "Width of the shape.\n",
                      "shacl:datatype": {
                        "@id": "raml-shapes:number"
                      },
                      "shacl:name": "width"
                    },
                    "shacl:minCount": 1,
                    "shacl:name": "width",
                    "shacl:path": {
                      "@id": "data:width"
                    }
                  },
                  {
                    "@id": "amf://id#13",
                    "@type": [
                      "shacl:PropertyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape"
                    ],
                    "raml-shapes:range": {
                      "@id": "amf://id#14",
                      "@type": [
                        "raml-shapes:ScalarShape",
                        "shacl:Shape",
                        "raml-shapes:Shape",
                        "doc:DomainElement"
                      ],
                      "schema-org:description": "Height of the shape.\n",
                      "shacl:datatype": {
                        "@id": "raml-shapes:number"
                      },
                      "shacl:name": "height"
                    },
                    "shacl:minCount": 1,
                    "shacl:name": "height",
                    "shacl:path": {
                      "@id": "data:height"
                    }
                  },
                  {
                    "@id": "amf://id#15",
                    "@type": [
                      "shacl:PropertyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape"
                    ],
                    "raml-shapes:range": {
                      "@id": "amf://id#16",
                      "@type": [
                        "raml-shapes:ScalarShape",
                        "shacl:Shape",
                        "raml-shapes:Shape",
                        "doc:DomainElement"
                      ],
                      "schema-org:description": "A unit that describes the dimension. It can be, for example, `px` for\npixels, `pt` for points, `%` for percentage.\n",
                      "shacl:datatype": {
                        "@id": "xsd:string"
                      },
                      "shacl:defaultValue": {
                        "@id": "amf://id#17",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:string",
                          "@value": "px"
                        }
                      },
                      "shacl:defaultValueStr": "px",
                      "shacl:name": "unit?"
                    },
                    "shacl:minCount": 0,
                    "shacl:name": "unit",
                    "shacl:path": {
                      "@id": "data:unit"
                    }
                  }
                ]
              },
              "shacl:minCount": 1,
              "shacl:name": "dimension",
              "shacl:path": {
                "@id": "data:dimension"
              }
            }
          ]
        }
      ],
      "shacl:name": "Unionable"
    },
    {
      "@id": "amf://id#159",
      "@type": [
        "shacl:NodeShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:name": "ImportFormat",
      "shacl:property": [
        {
          "@id": "amf://id#155",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#156",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "The imported file's content type to convert from.",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "source"
          },
          "shacl:minCount": 1,
          "shacl:name": "source",
          "shacl:path": {
            "@id": "data:source"
          }
        },
        {
          "@id": "amf://id#151",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#152",
            "@type": [
              "raml-shapes:ArrayShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "raml-shapes:items": {
              "@id": "amf://id#153",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "shacl:datatype": {
                "@id": "xsd:string"
              }
            },
            "schema-org:description": "The possible content types to convert to.",
            "shacl:name": "targets"
          },
          "shacl:minCount": 1,
          "shacl:name": "targets",
          "shacl:path": {
            "@id": "data:targets"
          }
        }
      ]
    },
    {
      "@id": "amf://id#161",
      "@type": [
        "shacl:NodeShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "schema-org:description": "Common properties for all resources returned by the API.\n",
      "shacl:closed": false,
      "shacl:name": "Resource",
      "shacl:property": {
        "@id": "amf://id#3",
        "@type": [
          "shacl:PropertyShape",
          "shacl:Shape",
          "raml-shapes:Shape"
        ],
        "raml-shapes:range": {
          "@id": "amf://id#4",
          "@type": [
            "raml-shapes:ScalarShape",
            "shacl:Shape",
            "raml-shapes:Shape",
            "doc:DomainElement"
          ],
          "schema-org:description": "ETag of this resource for caching purposes.\n__This property will be ignored when creating an object.__\n",
          "shacl:datatype": {
            "@id": "xsd:string"
          },
          "shacl:name": "etag"
        },
        "shacl:minCount": 1,
        "shacl:name": "etag",
        "shacl:path": {
          "@id": "data:etag"
        }
      }
    },
    {
      "@id": "amf://id#8",
      "@type": [
        "shacl:NodeShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "doc:examples": {
        "@id": "amf://id#9",
        "@type": [
          "doc:Example",
          "doc:DomainElement"
        ],
        "doc:strict": true,
        "doc:structuredValue": {
          "@id": "amf://id#10",
          "@type": "data:Object",
          "data:height": {
            "@id": "file://test/demo-api/types/dimensions.raml#/shape/example/default-example/object_1/scalar_3",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:integer",
              "@value": "160"
            }
          },
          "data:width": {
            "@id": "file://test/demo-api/types/dimensions.raml#/shape/example/default-example/object_1/scalar_2",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:integer",
              "@value": "200"
            }
          }
        },
        "shacl:raw": "  width: 200\n  height: 160\n"
      },
      "schema-org:description": "A dimmensions of an object like image.\n",
      "shacl:closed": false,
      "shacl:name": "Dimension",
      "shacl:property": [
        {
          "@id": "amf://id#11",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#12",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "Width of the shape.\n",
            "shacl:datatype": {
              "@id": "raml-shapes:number"
            },
            "shacl:name": "width"
          },
          "shacl:minCount": 1,
          "shacl:name": "width",
          "shacl:path": {
            "@id": "data:width"
          }
        },
        {
          "@id": "amf://id#13",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#14",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "Height of the shape.\n",
            "shacl:datatype": {
              "@id": "raml-shapes:number"
            },
            "shacl:name": "height"
          },
          "shacl:minCount": 1,
          "shacl:name": "height",
          "shacl:path": {
            "@id": "data:height"
          }
        },
        {
          "@id": "amf://id#15",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#16",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "A unit that describes the dimension. It can be, for example, `px` for\npixels, `pt` for points, `%` for percentage.\n",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:defaultValue": {
              "@id": "amf://id#17",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "px"
              }
            },
            "shacl:defaultValueStr": "px",
            "shacl:name": "unit?"
          },
          "shacl:minCount": 0,
          "shacl:name": "unit",
          "shacl:path": {
            "@id": "data:unit"
          }
        }
      ]
    },
    {
      "@id": "amf://id#86",
      "@type": [
        "shacl:NodeShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "doc:examples": {
        "@id": "amf://id#165",
        "@type": [
          "doc:Example",
          "doc:DomainElement"
        ],
        "doc:strict": true,
        "doc:structuredValue": {
          "@id": "amf://id#166",
          "@type": "data:Object",
          "data:available": {
            "@id": "file://test/demo-api/types/product.raml#/shape/example/default-example/object_1/scalar_7",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:boolean",
              "@value": "true"
            }
          },
          "data:etag": {
            "@id": "file://test/demo-api/types/product.raml#/shape/example/default-example/object_1/scalar_8",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "W\\sd3deef3rgrgf4r"
            }
          },
          "data:id": {
            "@id": "file://test/demo-api/types/product.raml#/shape/example/default-example/object_1/scalar_2",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "we2322-4f4f4f-f4f4ff-f4f4ff4"
            }
          },
          "data:name": {
            "@id": "file://test/demo-api/types/product.raml#/shape/example/default-example/object_1/scalar_3",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "Acme Product"
            }
          },
          "data:quantity": {
            "@id": "file://test/demo-api/types/product.raml#/shape/example/default-example/object_1/scalar_4",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:integer",
              "@value": "200"
            }
          },
          "data:unit": {
            "@id": "file://test/demo-api/types/product.raml#/shape/example/default-example/object_1/scalar_5",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "ml"
            }
          },
          "data:upc": {
            "@id": "file://test/demo-api/types/product.raml#/shape/example/default-example/object_1/scalar_6",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "123456789101"
            }
          }
        },
        "shacl:raw": "  id: we2322-4f4f4f-f4f4ff-f4f4ff4\n  name: Acme Product\n  quantity: 200\n  unit: ml\n  upc: \"123456789101\"\n  available: true\n  etag: \"W\\\\sd3deef3rgrgf4r\"\n"
      },
      "schema-org:description": "A single product representing an item in the store.",
      "schema-org:name": "A product resource",
      "shacl:closed": false,
      "shacl:name": "Product",
      "shacl:property": [
        {
          "@id": "amf://id#87",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#88",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#89",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#90",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "042100005264"
                }
              },
              "shacl:raw": "042100005264"
            },
            "schema-org:description": "The Universal Produc Code. It consists of 12 numerical digits. However, because of the\ninteger precision limitation in JavaScript it is represented as a string.\n",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "upc",
            "shacl:pattern": "^[0-9]{12,12}$"
          },
          "shacl:minCount": 1,
          "shacl:name": "upc",
          "shacl:path": {
            "@id": "data:upc"
          }
        },
        {
          "@id": "amf://id#3",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#4",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "ETag of this resource for caching purposes.\n__This property will be ignored when creating an object.__\n",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "etag"
          },
          "shacl:minCount": 1,
          "shacl:name": "etag",
          "shacl:path": {
            "@id": "data:etag"
          }
        },
        {
          "@id": "amf://id#91",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#92",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#93",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#94",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "Acme product - mentol flavor, 500 ml."
                }
              },
              "shacl:raw": "Acme product - mentol flavor, 500 ml."
            },
            "schema-org:description": "Product name",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "name"
          },
          "shacl:minCount": 1,
          "shacl:name": "name",
          "shacl:path": {
            "@id": "data:name"
          }
        },
        {
          "@id": "amf://id#96",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#97",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "Product id. It is a UUID of the database record.\n__This property will be ignored when creating an object.__\nIt will be available when the product is stored in the datastore.\n",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "id",
            "shacl:pattern": "^[0-9a-zA-Z-]+$"
          },
          "shacl:minCount": 1,
          "shacl:name": "id",
          "shacl:path": {
            "@id": "data:id"
          }
        },
        {
          "@id": "amf://id#98",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#99",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#100",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#101",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "ml"
                }
              },
              "shacl:raw": "ml"
            },
            "schema-org:description": "The unit of measuremet for the quantity property.",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "unit"
          },
          "shacl:minCount": 1,
          "shacl:name": "unit",
          "shacl:path": {
            "@id": "data:unit"
          }
        },
        {
          "@id": "amf://id#102",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#103",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#104",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#105",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:boolean",
                  "@value": "true"
                }
              },
              "shacl:raw": "true"
            },
            "schema-org:description": "Product current availability in the store.\nProduct may be not available but the users still can order it with later delivery date.\n",
            "shacl:datatype": {
              "@id": "xsd:boolean"
            },
            "shacl:name": "available"
          },
          "shacl:minCount": 1,
          "shacl:name": "available",
          "shacl:path": {
            "@id": "data:available"
          }
        },
        {
          "@id": "amf://id#106",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#107",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#108",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#109",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:integer",
                  "@value": "500"
                }
              },
              "shacl:raw": "500"
            },
            "schema-org:description": "The quantity of the product in the one unit of measurement.\nSee `unit` property for more information.\n",
            "shacl:datatype": {
              "@id": "raml-shapes:number"
            },
            "shacl:name": "quantity"
          },
          "shacl:minCount": 1,
          "shacl:name": "quantity",
          "shacl:path": {
            "@id": "data:quantity"
          }
        }
      ]
    },
    {
      "@id": "amf://id#63",
      "@type": [
        "shacl:NodeShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "doc:examples": {
        "@id": "amf://id#64",
        "@type": [
          "doc:Example",
          "doc:DomainElement"
        ],
        "doc:strict": true,
        "doc:structuredValue": {
          "@id": "amf://id#65",
          "@type": "data:Object",
          "data:thumb": {
            "@id": "file://test/demo-api/types/image.raml#/shape/example/default-example/object_1/scalar_3",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "https://domain.com/profile/pawel.psztyc/image/thumb"
            }
          },
          "data:url": {
            "@id": "file://test/demo-api/types/image.raml#/shape/example/default-example/object_1/scalar_2",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "https://domain.com/profile/pawel.psztyc/image"
            }
          }
        },
        "shacl:raw": "  url: https://domain.com/profile/pawel.psztyc/image\n  thumb: https://domain.com/profile/pawel.psztyc/image/thumb\n"
      },
      "schema-org:description": "An image object representing an image object strored in the file store.\nThe image can be only included in the response. It has no effect if the Image appear in the\nrequest. Endpoint handles image creation on it's own and clients can't process images\nexcept of sending image data.\n",
      "shacl:closed": false,
      "shacl:name": "image",
      "shacl:property": [
        {
          "@id": "amf://id#66",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#67",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "The URL of the image.\nTo resize the image and crop it to a square, append the query string **?sz=x**, where x is the dimension in pixels of each side.\n",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "url"
          },
          "shacl:minCount": 1,
          "shacl:name": "url",
          "shacl:path": {
            "@id": "data:url"
          }
        },
        {
          "@id": "amf://id#68",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#69",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "An URL to the thumbnail of the image. Thumbnails are 60x60px cropped images of the original image.\n",
            "schema-org:name": "Thumbnail",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "thumb"
          },
          "shacl:minCount": 1,
          "shacl:name": "thumb",
          "shacl:path": {
            "@id": "data:thumb"
          }
        }
      ]
    },
    {
      "@id": "amf://id#2",
      "@type": [
        "shacl:NodeShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "schema-org:description": "The user's profile picture.",
      "schema-org:name": "Pic",
      "shacl:closed": false,
      "shacl:name": "Picture",
      "shacl:property": [
        {
          "@id": "amf://id#3",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#4",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "ETag of this resource for caching purposes.\n__This property will be ignored when creating an object.__\n",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "etag"
          },
          "shacl:minCount": 1,
          "shacl:name": "etag",
          "shacl:path": {
            "@id": "data:etag"
          }
        },
        {
          "@id": "amf://id#5",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#6",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "A URL that points to a profile picture of this user.",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "url"
          },
          "shacl:minCount": 0,
          "shacl:name": "url",
          "shacl:path": {
            "@id": "data:url"
          }
        },
        {
          "@id": "amf://id#7",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#8",
            "@type": [
              "shacl:NodeShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#9",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#10",
                "@type": "data:Object",
                "data:height": {
                  "@id": "file://test/demo-api/types/dimensions.raml#/shape/example/default-example/object_1/scalar_3",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:integer",
                    "@value": "160"
                  }
                },
                "data:width": {
                  "@id": "file://test/demo-api/types/dimensions.raml#/shape/example/default-example/object_1/scalar_2",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:integer",
                    "@value": "200"
                  }
                }
              },
              "shacl:raw": "  width: 200\n  height: 160\n"
            },
            "schema-org:description": "A dimmensions of an object like image.\n",
            "shacl:closed": false,
            "shacl:name": "Dimension",
            "shacl:property": [
              {
                "@id": "amf://id#11",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape"
                ],
                "raml-shapes:range": {
                  "@id": "amf://id#12",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "schema-org:description": "Width of the shape.\n",
                  "shacl:datatype": {
                    "@id": "raml-shapes:number"
                  },
                  "shacl:name": "width"
                },
                "shacl:minCount": 1,
                "shacl:name": "width",
                "shacl:path": {
                  "@id": "data:width"
                }
              },
              {
                "@id": "amf://id#13",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape"
                ],
                "raml-shapes:range": {
                  "@id": "amf://id#14",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "schema-org:description": "Height of the shape.\n",
                  "shacl:datatype": {
                    "@id": "raml-shapes:number"
                  },
                  "shacl:name": "height"
                },
                "shacl:minCount": 1,
                "shacl:name": "height",
                "shacl:path": {
                  "@id": "data:height"
                }
              },
              {
                "@id": "amf://id#15",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape"
                ],
                "raml-shapes:range": {
                  "@id": "amf://id#16",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "schema-org:description": "A unit that describes the dimension. It can be, for example, `px` for\npixels, `pt` for points, `%` for percentage.\n",
                  "shacl:datatype": {
                    "@id": "xsd:string"
                  },
                  "shacl:defaultValue": {
                    "@id": "amf://id#17",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "px"
                    }
                  },
                  "shacl:defaultValueStr": "px",
                  "shacl:name": "unit?"
                },
                "shacl:minCount": 0,
                "shacl:name": "unit",
                "shacl:path": {
                  "@id": "data:unit"
                }
              }
            ]
          },
          "shacl:minCount": 1,
          "shacl:name": "dimension",
          "shacl:path": {
            "@id": "data:dimension"
          }
        }
      ]
    },
    {
      "@id": "amf://id#170",
      "@type": [
        "shacl:NodeShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:name": "Property",
      "shacl:property": [
        {
          "@id": "amf://id#171",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#172",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "This is always drive#property.",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:defaultValue": {
              "@id": "amf://id#173",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "drive#property"
              }
            },
            "shacl:defaultValueStr": "drive#property",
            "shacl:in": {
              "@id": "amf://id#172/list",
              "@type": "rdfs:Seq",
              "rdfs:_1": {
                "@id": "amf://id#173",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "drive#property"
                }
              }
            },
            "shacl:name": "kind"
          },
          "shacl:minCount": 1,
          "shacl:name": "kind",
          "shacl:path": {
            "@id": "data:kind"
          }
        },
        {
          "@id": "amf://id#174",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#175",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "ETag of the property.",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "etag"
          },
          "shacl:minCount": 1,
          "shacl:name": "etag",
          "shacl:path": {
            "@id": "data:etag"
          }
        },
        {
          "@id": "amf://id#176",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#177",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "The link back to this property.",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "selfLink"
          },
          "shacl:minCount": 1,
          "shacl:name": "selfLink",
          "shacl:path": {
            "@id": "data:selfLink"
          }
        },
        {
          "@id": "amf://id#178",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#179",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "The key of this property.",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "key"
          },
          "shacl:minCount": 1,
          "shacl:name": "key",
          "shacl:path": {
            "@id": "data:key"
          }
        },
        {
          "@id": "amf://id#180",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#181",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "The visibility of this property.",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "visibility"
          },
          "shacl:minCount": 1,
          "shacl:name": "visibility",
          "shacl:path": {
            "@id": "data:visibility"
          }
        },
        {
          "@id": "amf://id#182",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#183",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "The value of this property.",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "value"
          },
          "shacl:minCount": 1,
          "shacl:name": "value",
          "shacl:path": {
            "@id": "data:value"
          }
        }
      ]
    },
    {
      "@id": "amf://id#184",
      "@type": [
        "security:SecurityScheme",
        "doc:DomainElement"
      ],
      "security:name": "basic",
      "security:type": "Basic Authentication",
      "schema-org:description": "Test basic auth method\n"
    },
    {
      "@id": "amf://id#185",
      "@type": [
        "security:SecurityScheme",
        "doc:DomainElement"
      ],
      "security:name": "other",
      "security:type": "Digest Authentication",
      "schema-org:displayName": "Digest"
    },
    {
      "@id": "amf://id#372",
      "@type": [
        "shacl:NodeShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:name": "TypeFromLibray",
      "shacl:property": {
        "@id": "amf://id#373",
        "@type": [
          "shacl:PropertyShape",
          "shacl:Shape",
          "raml-shapes:Shape"
        ],
        "raml-shapes:range": {
          "@id": "amf://id#374",
          "@type": [
            "raml-shapes:ScalarShape",
            "shacl:Shape",
            "raml-shapes:Shape",
            "doc:DomainElement"
          ],
          "shacl:datatype": {
            "@id": "raml-shapes:number"
          },
          "shacl:name": "age"
        },
        "shacl:minCount": 1,
        "shacl:name": "age",
        "shacl:path": {
          "@id": "data:age"
        }
      }
    },
    {
      "@id": "amf://id#57",
      "@type": [
        "raml-shapes:UnionShape",
        "shacl:Shape",
        "raml-shapes:Shape"
      ],
      "raml-shapes:anyOf": [
        {
          "@id": "amf://id#58",
          "@type": [
            "raml-shapes:ScalarShape",
            "shacl:Shape",
            "raml-shapes:Shape",
            "doc:DomainElement"
          ],
          "shacl:datatype": {
            "@id": "xsd:string"
          }
        },
        {
          "@id": "amf://id#59",
          "@type": [
            "raml-shapes:NilShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ]
        }
      ],
      "shacl:name": "amf_inline_type_1"
    },
    {
      "@id": "amf://id#63",
      "@type": [
        "shacl:NodeShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "doc:examples": {
        "@id": "amf://id#64",
        "@type": [
          "doc:Example",
          "doc:DomainElement"
        ],
        "doc:strict": true,
        "doc:structuredValue": {
          "@id": "amf://id#65",
          "@type": "data:Object",
          "data:thumb": {
            "@id": "file://test/demo-api/types/image.raml#/shape/example/default-example/object_1/scalar_3",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "https://domain.com/profile/pawel.psztyc/image/thumb"
            }
          },
          "data:url": {
            "@id": "file://test/demo-api/types/image.raml#/shape/example/default-example/object_1/scalar_2",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "https://domain.com/profile/pawel.psztyc/image"
            }
          }
        },
        "shacl:raw": "  url: https://domain.com/profile/pawel.psztyc/image\n  thumb: https://domain.com/profile/pawel.psztyc/image/thumb\n"
      },
      "schema-org:description": "An image object representing an image object strored in the file store.\nThe image can be only included in the response. It has no effect if the Image appear in the\nrequest. Endpoint handles image creation on it's own and clients can't process images\nexcept of sending image data.\n",
      "shacl:closed": false,
      "shacl:name": "image",
      "shacl:property": [
        {
          "@id": "amf://id#66",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#67",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "The URL of the image.\nTo resize the image and crop it to a square, append the query string **?sz=x**, where x is the dimension in pixels of each side.\n",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "url"
          },
          "shacl:minCount": 1,
          "shacl:name": "url",
          "shacl:path": {
            "@id": "data:url"
          }
        },
        {
          "@id": "amf://id#68",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#69",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "An URL to the thumbnail of the image. Thumbnails are 60x60px cropped images of the original image.\n",
            "schema-org:name": "Thumbnail",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "thumb"
          },
          "shacl:minCount": 1,
          "shacl:name": "thumb",
          "shacl:path": {
            "@id": "data:thumb"
          }
        }
      ]
    }
  ],
  "doc:encodes": {
    "@id": "amf://id#198",
    "@type": [
      "schema-org:WebAPI",
      "doc:RootDomainElement",
      "doc:DomainElement"
    ],
    "raml-http:endpoint": [
      {
        "@id": "amf://id#199",
        "@type": [
          "raml-http:EndPoint",
          "doc:DomainElement"
        ],
        "raml-http:path": "/files",
        "schema-org:name": "Files",
        "hydra:supportedOperation": [
          {
            "@id": "amf://id#200",
            "@type": [
              "hydra:Operation",
              "doc:DomainElement"
            ],
            "schema-org:description": "Insert a new file.\nThis method supports an /upload URI and accepts uploaded media with the following characteristics:\n\n- Maximum file size: 5120GB\n- Accepted Media MIME types: */*\n\nNote: Apps creating shortcuts with files.insert must specify the MIME type `application/vnd.google-apps.drive-sdk`.\n\nApps should specify a file extension in the title property when inserting files with the API. For example, an operation to insert a JPEG file should specify something like `\"title\": \"cat.jpg\"` in the metadata.\n\nSubsequent GET requests include the read-only fileExtension property populated with the extension originally specified in the title property. When a Google Drive user requests to download a file, or when the file is downloaded through the sync client, Drive builds a full filename (with extension) based on the title. In cases where the extension is missing, Google Drive attempts to determine the extension based on the file's MIME type.\n\n### HTTP request\n\nThis method provides media upload functionality through two separate URIs. For more details, see the document on media upload.\n\n- Upload URI, for media upload requests: `POST https://www.googleapis.com/upload/drive/v2/files`\n- Metadata URI, for metadata-only requests: `POST https://www.googleapis.com/drive/v2/files`\n",
            "schema-org:name": "Insert",
            "hydra:method": "post"
          },
          {
            "@id": "amf://id#201",
            "@type": [
              "hydra:Operation",
              "doc:DomainElement"
            ],
            "security:security": {
              "@id": "amf://id#202",
              "@type": [
                "security:ParametrizedSecurityScheme",
                "doc:DomainElement"
              ],
              "security:name": "basic",
              "security:scheme": {
                "@id": "amf://id#184",
                "@type": [
                  "security:SecurityScheme",
                  "doc:DomainElement"
                ],
                "security:name": "basic",
                "security:type": "Basic Authentication",
                "schema-org:description": "Test basic auth method\n"
              }
            },
            "schema-org:description": "Lists the user's files. Try it now or see an example.\n\nRequests with `files.list` accept the `q` parameter, which is a search query combining one or more search terms. For more information, see Search for files.\n\nNote: Note: This method returns all files by default. This includes files with trashed=true in the results. Use the trashed=false query parameter to filter these from the results.\n",
            "schema-org:name": "list",
            "hydra:method": "get"
          }
        ]
      },
      {
        "@id": "amf://id#203",
        "@type": [
          "raml-http:EndPoint",
          "doc:DomainElement"
        ],
        "raml-http:parameter": {
          "@id": "amf://id#208",
          "@type": [
            "raml-http:Parameter",
            "doc:DomainElement"
          ],
          "raml-http:binding": "path",
          "raml-http:paramName": "fileId",
          "raml-http:schema": {
            "@id": "amf://id#209",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "fileId"
          },
          "schema-org:name": "fileId",
          "hydra:required": true
        },
        "raml-http:path": "/files/{fileId}",
        "schema-org:name": "Get file",
        "hydra:supportedOperation": [
          {
            "@id": "amf://id#204",
            "@type": [
              "hydra:Operation",
              "doc:DomainElement"
            ],
            "schema-org:description": "Gets a file's metadata by ID.",
            "hydra:method": "get"
          },
          {
            "@id": "amf://id#205",
            "@type": [
              "hydra:Operation",
              "doc:DomainElement"
            ],
            "schema-org:description": "Updates file metadata. This method supports patch semantics.",
            "hydra:method": "patch"
          },
          {
            "@id": "amf://id#206",
            "@type": [
              "hydra:Operation",
              "doc:DomainElement"
            ],
            "schema-org:description": "Updates file metadata and/or content.",
            "hydra:method": "put"
          },
          {
            "@id": "amf://id#207",
            "@type": [
              "hydra:Operation",
              "doc:DomainElement"
            ],
            "schema-org:description": "Permanently deletes a file by ID. Skips the trash. The currently authenticated user must own the file.",
            "hydra:method": "delete"
          }
        ]
      },
      {
        "@id": "amf://id#210",
        "@type": [
          "raml-http:EndPoint",
          "doc:DomainElement"
        ],
        "raml-http:parameter": {
          "@id": "amf://id#212",
          "@type": [
            "raml-http:Parameter",
            "doc:DomainElement"
          ],
          "raml-http:binding": "path",
          "raml-http:paramName": "fileId",
          "raml-http:schema": {
            "@id": "amf://id#213",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "fileId"
          },
          "schema-org:name": "fileId",
          "hydra:required": true
        },
        "raml-http:path": "/files/{fileId}/copy",
        "hydra:supportedOperation": {
          "@id": "amf://id#211",
          "@type": [
            "hydra:Operation",
            "doc:DomainElement"
          ],
          "schema-org:description": "Creates a copy of the specified file.",
          "hydra:method": "post"
        }
      },
      {
        "@id": "amf://id#214",
        "@type": [
          "raml-http:EndPoint",
          "doc:DomainElement"
        ],
        "raml-http:parameter": {
          "@id": "amf://id#216",
          "@type": [
            "raml-http:Parameter",
            "doc:DomainElement"
          ],
          "raml-http:binding": "path",
          "raml-http:paramName": "fileId",
          "raml-http:schema": {
            "@id": "amf://id#217",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "fileId"
          },
          "schema-org:name": "fileId",
          "hydra:required": true
        },
        "raml-http:path": "/files/{fileId}/touch",
        "hydra:supportedOperation": {
          "@id": "amf://id#215",
          "@type": [
            "hydra:Operation",
            "doc:DomainElement"
          ],
          "schema-org:description": "Set the file's updated time to the current server time.",
          "hydra:method": "post"
        }
      },
      {
        "@id": "amf://id#218",
        "@type": [
          "raml-http:EndPoint",
          "doc:DomainElement"
        ],
        "raml-http:parameter": {
          "@id": "amf://id#220",
          "@type": [
            "raml-http:Parameter",
            "doc:DomainElement"
          ],
          "raml-http:binding": "path",
          "raml-http:paramName": "fileId",
          "raml-http:schema": {
            "@id": "amf://id#221",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "fileId"
          },
          "schema-org:name": "fileId",
          "hydra:required": true
        },
        "raml-http:path": "/files/{fileId}/trash",
        "hydra:supportedOperation": {
          "@id": "amf://id#219",
          "@type": [
            "hydra:Operation",
            "doc:DomainElement"
          ],
          "schema-org:description": "Moves a file to the trash. The currently authenticated user must own the file.",
          "hydra:method": "post"
        }
      },
      {
        "@id": "amf://id#222",
        "@type": [
          "raml-http:EndPoint",
          "doc:DomainElement"
        ],
        "raml-http:parameter": {
          "@id": "amf://id#224",
          "@type": [
            "raml-http:Parameter",
            "doc:DomainElement"
          ],
          "raml-http:binding": "path",
          "raml-http:paramName": "fileId",
          "raml-http:schema": {
            "@id": "amf://id#225",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "fileId"
          },
          "schema-org:name": "fileId",
          "hydra:required": true
        },
        "raml-http:path": "/files/{fileId}/untrash",
        "hydra:supportedOperation": {
          "@id": "amf://id#223",
          "@type": [
            "hydra:Operation",
            "doc:DomainElement"
          ],
          "schema-org:description": "Restores a file from the trash.",
          "hydra:method": "post"
        }
      },
      {
        "@id": "amf://id#226",
        "@type": [
          "raml-http:EndPoint",
          "doc:DomainElement"
        ],
        "raml-http:parameter": {
          "@id": "amf://id#229",
          "@type": [
            "raml-http:Parameter",
            "doc:DomainElement"
          ],
          "raml-http:binding": "path",
          "raml-http:paramName": "fileId",
          "raml-http:schema": {
            "@id": "amf://id#230",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "fileId"
          },
          "schema-org:name": "fileId",
          "hydra:required": true
        },
        "raml-http:path": "/files/{fileId}/parents",
        "hydra:supportedOperation": [
          {
            "@id": "amf://id#227",
            "@type": [
              "hydra:Operation",
              "doc:DomainElement"
            ],
            "schema-org:description": "Lists a file's parents.",
            "hydra:method": "get"
          },
          {
            "@id": "amf://id#228",
            "@type": [
              "hydra:Operation",
              "doc:DomainElement"
            ],
            "schema-org:description": "Adds a parent folder for a file.",
            "hydra:method": "post"
          }
        ]
      },
      {
        "@id": "amf://id#231",
        "@type": [
          "raml-http:EndPoint",
          "doc:DomainElement"
        ],
        "raml-http:parameter": [
          {
            "@id": "amf://id#234",
            "@type": [
              "raml-http:Parameter",
              "doc:DomainElement"
            ],
            "raml-http:binding": "path",
            "raml-http:paramName": "fileId",
            "raml-http:schema": {
              "@id": "amf://id#235",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "fileId"
            },
            "schema-org:name": "fileId",
            "hydra:required": true
          },
          {
            "@id": "amf://id#236",
            "@type": [
              "raml-http:Parameter",
              "doc:DomainElement"
            ],
            "raml-http:binding": "path",
            "raml-http:paramName": "parentId",
            "raml-http:schema": {
              "@id": "amf://id#237",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "The ID of the parent.",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "schema"
            },
            "schema-org:description": "The ID of the parent.",
            "schema-org:name": "parentId",
            "hydra:required": true
          }
        ],
        "raml-http:path": "/files/{fileId}/parents/{parentId}",
        "hydra:supportedOperation": [
          {
            "@id": "amf://id#232",
            "@type": [
              "hydra:Operation",
              "doc:DomainElement"
            ],
            "schema-org:description": "Gets a specific parent reference.",
            "hydra:method": "get"
          },
          {
            "@id": "amf://id#233",
            "@type": [
              "hydra:Operation",
              "doc:DomainElement"
            ],
            "schema-org:description": "Removes a parent from a file.",
            "hydra:method": "delete"
          }
        ]
      },
      {
        "@id": "amf://id#238",
        "@type": [
          "raml-http:EndPoint",
          "doc:DomainElement"
        ],
        "raml-http:parameter": {
          "@id": "amf://id#241",
          "@type": [
            "raml-http:Parameter",
            "doc:DomainElement"
          ],
          "raml-http:binding": "path",
          "raml-http:paramName": "fileId",
          "raml-http:schema": {
            "@id": "amf://id#242",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "fileId"
          },
          "schema-org:name": "fileId",
          "hydra:required": true
        },
        "raml-http:path": "/files/{fileId}/permissions",
        "hydra:supportedOperation": [
          {
            "@id": "amf://id#239",
            "@type": [
              "hydra:Operation",
              "doc:DomainElement"
            ],
            "schema-org:description": "Lists a file's permissions.",
            "hydra:method": "get"
          },
          {
            "@id": "amf://id#240",
            "@type": [
              "hydra:Operation",
              "doc:DomainElement"
            ],
            "schema-org:description": "Inserts a permission for a file.\n\nWarning: Concurrent permissions operations on the same file are not supported; only the last update is applied.\n",
            "hydra:method": "post"
          }
        ]
      },
      {
        "@id": "amf://id#243",
        "@type": [
          "raml-http:EndPoint",
          "doc:DomainElement"
        ],
        "raml-http:parameter": [
          {
            "@id": "amf://id#249",
            "@type": [
              "raml-http:Parameter",
              "doc:DomainElement"
            ],
            "raml-http:binding": "path",
            "raml-http:paramName": "fileId",
            "raml-http:schema": {
              "@id": "amf://id#250",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "fileId"
            },
            "schema-org:name": "fileId",
            "hydra:required": true
          },
          {
            "@id": "amf://id#251",
            "@type": [
              "raml-http:Parameter",
              "doc:DomainElement"
            ],
            "raml-http:binding": "path",
            "raml-http:paramName": "permissionId",
            "raml-http:schema": {
              "@id": "amf://id#252",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "The ID for the permission.",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "schema"
            },
            "schema-org:description": "The ID for the permission.",
            "schema-org:name": "permissionId",
            "hydra:required": true
          }
        ],
        "raml-http:path": "/files/{fileId}/permissions/{permissionId}",
        "hydra:supportedOperation": [
          {
            "@id": "amf://id#244",
            "@type": [
              "hydra:Operation",
              "doc:DomainElement"
            ],
            "schema-org:description": "Gets a permission by ID.",
            "hydra:method": "get"
          },
          {
            "@id": "amf://id#245",
            "@type": [
              "hydra:Operation",
              "doc:DomainElement"
            ],
            "schema-org:description": "Updates a permission.\n\n**Warning**: Concurrent permissions operations on the same file are not supported; only the last update is applied.\n",
            "hydra:method": "put"
          },
          {
            "@id": "amf://id#246",
            "@type": [
              "hydra:Operation",
              "doc:DomainElement"
            ],
            "schema-org:description": "Deletes a permission from a file.\n\nWarning: Concurrent permissions operations on the same file are not supported; only the last update is applied.\n",
            "hydra:method": "delete",
            "hydra:returns": {
              "@id": "amf://id#247",
              "@type": [
                "raml-http:Response",
                "doc:DomainElement"
              ],
              "raml-http:payload": [],
              "schema-org:name": "204",
              "hydra:statusCode": "204"
            }
          },
          {
            "@id": "amf://id#248",
            "@type": [
              "hydra:Operation",
              "doc:DomainElement"
            ],
            "schema-org:description": "Updates a permission. This method supports patch semantics.\n\n**Warning**: Concurrent permissions operations on the same file are not supported; only the last update is applied.\n",
            "hydra:method": "patch"
          }
        ]
      },
      {
        "@id": "amf://id#253",
        "@type": [
          "raml-http:EndPoint",
          "doc:DomainElement"
        ],
        "raml-http:parameter": {
          "@id": "amf://id#255",
          "@type": [
            "raml-http:Parameter",
            "doc:DomainElement"
          ],
          "raml-http:binding": "path",
          "raml-http:paramName": "fileId",
          "raml-http:schema": {
            "@id": "amf://id#256",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "fileId"
          },
          "schema-org:name": "fileId",
          "hydra:required": true
        },
        "raml-http:path": "/files/{fileId}/revisions",
        "hydra:supportedOperation": {
          "@id": "amf://id#254",
          "@type": [
            "hydra:Operation",
            "doc:DomainElement"
          ],
          "hydra:method": "get"
        }
      },
      {
        "@id": "amf://id#257",
        "@type": [
          "raml-http:EndPoint",
          "doc:DomainElement"
        ],
        "raml-http:parameter": [
          {
            "@id": "amf://id#262",
            "@type": [
              "raml-http:Parameter",
              "doc:DomainElement"
            ],
            "raml-http:binding": "path",
            "raml-http:paramName": "fileId",
            "raml-http:schema": {
              "@id": "amf://id#263",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "fileId"
            },
            "schema-org:name": "fileId",
            "hydra:required": true
          },
          {
            "@id": "amf://id#264",
            "@type": [
              "raml-http:Parameter",
              "doc:DomainElement"
            ],
            "raml-http:binding": "path",
            "raml-http:paramName": "revisionId",
            "raml-http:schema": {
              "@id": "amf://id#265",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "The ID of the revision.",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "schema"
            },
            "schema-org:description": "The ID of the revision.",
            "schema-org:name": "revisionId",
            "hydra:required": true
          }
        ],
        "raml-http:path": "/files/{fileId}/revisions/{revisionId}",
        "hydra:supportedOperation": [
          {
            "@id": "amf://id#258",
            "@type": [
              "hydra:Operation",
              "doc:DomainElement"
            ],
            "hydra:method": "get"
          },
          {
            "@id": "amf://id#259",
            "@type": [
              "hydra:Operation",
              "doc:DomainElement"
            ],
            "hydra:method": "put"
          },
          {
            "@id": "amf://id#260",
            "@type": [
              "hydra:Operation",
              "doc:DomainElement"
            ],
            "hydra:method": "delete"
          },
          {
            "@id": "amf://id#261",
            "@type": [
              "hydra:Operation",
              "doc:DomainElement"
            ],
            "hydra:method": "patch"
          }
        ]
      },
      {
        "@id": "amf://id#266",
        "@type": [
          "raml-http:EndPoint",
          "doc:DomainElement"
        ],
        "raml-http:parameter": {
          "@id": "amf://id#269",
          "@type": [
            "raml-http:Parameter",
            "doc:DomainElement"
          ],
          "raml-http:binding": "path",
          "raml-http:paramName": "fileId",
          "raml-http:schema": {
            "@id": "amf://id#270",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "fileId"
          },
          "schema-org:name": "fileId",
          "hydra:required": true
        },
        "raml-http:path": "/files/{fileId}/comments",
        "hydra:supportedOperation": [
          {
            "@id": "amf://id#267",
            "@type": [
              "hydra:Operation",
              "doc:DomainElement"
            ],
            "hydra:method": "get"
          },
          {
            "@id": "amf://id#268",
            "@type": [
              "hydra:Operation",
              "doc:DomainElement"
            ],
            "schema-org:description": "Creates a new comment on the given file.",
            "hydra:method": "post"
          }
        ]
      },
      {
        "@id": "amf://id#271",
        "@type": [
          "raml-http:EndPoint",
          "doc:DomainElement"
        ],
        "raml-http:parameter": [
          {
            "@id": "amf://id#276",
            "@type": [
              "raml-http:Parameter",
              "doc:DomainElement"
            ],
            "raml-http:binding": "path",
            "raml-http:paramName": "fileId",
            "raml-http:schema": {
              "@id": "amf://id#277",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "fileId"
            },
            "schema-org:name": "fileId",
            "hydra:required": true
          },
          {
            "@id": "amf://id#278",
            "@type": [
              "raml-http:Parameter",
              "doc:DomainElement"
            ],
            "raml-http:binding": "path",
            "raml-http:paramName": "commentId",
            "raml-http:schema": {
              "@id": "amf://id#279",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "commentId"
            },
            "schema-org:name": "commentId",
            "hydra:required": true
          }
        ],
        "raml-http:path": "/files/{fileId}/comments/{commentId}",
        "hydra:supportedOperation": [
          {
            "@id": "amf://id#272",
            "@type": [
              "hydra:Operation",
              "doc:DomainElement"
            ],
            "schema-org:description": "Gets a comment by ID.",
            "hydra:method": "get"
          },
          {
            "@id": "amf://id#273",
            "@type": [
              "hydra:Operation",
              "doc:DomainElement"
            ],
            "hydra:method": "put"
          },
          {
            "@id": "amf://id#274",
            "@type": [
              "hydra:Operation",
              "doc:DomainElement"
            ],
            "schema-org:description": "Deletes a comment.",
            "hydra:method": "delete"
          },
          {
            "@id": "amf://id#275",
            "@type": [
              "hydra:Operation",
              "doc:DomainElement"
            ],
            "hydra:method": "patch"
          }
        ]
      },
      {
        "@id": "amf://id#280",
        "@type": [
          "raml-http:EndPoint",
          "doc:DomainElement"
        ],
        "raml-http:parameter": [
          {
            "@id": "amf://id#283",
            "@type": [
              "raml-http:Parameter",
              "doc:DomainElement"
            ],
            "raml-http:binding": "path",
            "raml-http:paramName": "fileId",
            "raml-http:schema": {
              "@id": "amf://id#284",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "fileId"
            },
            "schema-org:name": "fileId",
            "hydra:required": true
          },
          {
            "@id": "amf://id#285",
            "@type": [
              "raml-http:Parameter",
              "doc:DomainElement"
            ],
            "raml-http:binding": "path",
            "raml-http:paramName": "commentId",
            "raml-http:schema": {
              "@id": "amf://id#286",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "commentId"
            },
            "schema-org:name": "commentId",
            "hydra:required": true
          }
        ],
        "raml-http:path": "/files/{fileId}/comments/{commentId}/replies",
        "hydra:supportedOperation": [
          {
            "@id": "amf://id#281",
            "@type": [
              "hydra:Operation",
              "doc:DomainElement"
            ],
            "hydra:method": "get"
          },
          {
            "@id": "amf://id#282",
            "@type": [
              "hydra:Operation",
              "doc:DomainElement"
            ],
            "hydra:method": "post"
          }
        ]
      },
      {
        "@id": "amf://id#287",
        "@type": [
          "raml-http:EndPoint",
          "doc:DomainElement"
        ],
        "raml-http:parameter": [
          {
            "@id": "amf://id#292",
            "@type": [
              "raml-http:Parameter",
              "doc:DomainElement"
            ],
            "raml-http:binding": "path",
            "raml-http:paramName": "fileId",
            "raml-http:schema": {
              "@id": "amf://id#293",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "fileId"
            },
            "schema-org:name": "fileId",
            "hydra:required": true
          },
          {
            "@id": "amf://id#294",
            "@type": [
              "raml-http:Parameter",
              "doc:DomainElement"
            ],
            "raml-http:binding": "path",
            "raml-http:paramName": "commentId",
            "raml-http:schema": {
              "@id": "amf://id#295",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "commentId"
            },
            "schema-org:name": "commentId",
            "hydra:required": true
          },
          {
            "@id": "amf://id#296",
            "@type": [
              "raml-http:Parameter",
              "doc:DomainElement"
            ],
            "raml-http:binding": "path",
            "raml-http:paramName": "replyId",
            "raml-http:schema": {
              "@id": "amf://id#297",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "The ID of the reply.",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "schema"
            },
            "schema-org:description": "The ID of the reply.",
            "schema-org:name": "replyId",
            "hydra:required": true
          }
        ],
        "raml-http:path": "/files/{fileId}/comments/{commentId}/replies/{replyId}",
        "hydra:supportedOperation": [
          {
            "@id": "amf://id#288",
            "@type": [
              "hydra:Operation",
              "doc:DomainElement"
            ],
            "schema-org:description": "Gets a reply.",
            "hydra:method": "get"
          },
          {
            "@id": "amf://id#289",
            "@type": [
              "hydra:Operation",
              "doc:DomainElement"
            ],
            "schema-org:description": "Updates an existing reply.",
            "hydra:method": "put"
          },
          {
            "@id": "amf://id#290",
            "@type": [
              "hydra:Operation",
              "doc:DomainElement"
            ],
            "schema-org:description": "Deletes a reply.",
            "hydra:method": "delete"
          },
          {
            "@id": "amf://id#291",
            "@type": [
              "hydra:Operation",
              "doc:DomainElement"
            ],
            "schema-org:description": "Updates an existing reply. This method supports patch semantics.",
            "hydra:method": "patch"
          }
        ]
      },
      {
        "@id": "amf://id#298",
        "@type": [
          "raml-http:EndPoint",
          "doc:DomainElement"
        ],
        "raml-http:parameter": {
          "@id": "amf://id#301",
          "@type": [
            "raml-http:Parameter",
            "doc:DomainElement"
          ],
          "raml-http:binding": "path",
          "raml-http:paramName": "fileId",
          "raml-http:schema": {
            "@id": "amf://id#302",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "fileId"
          },
          "schema-org:name": "fileId",
          "hydra:required": true
        },
        "raml-http:path": "/files/{fileId}/realtime",
        "hydra:supportedOperation": [
          {
            "@id": "amf://id#299",
            "@type": [
              "hydra:Operation",
              "doc:DomainElement"
            ],
            "schema-org:description": "Exports the contents of the Realtime API data model associated with this file as JSON.",
            "hydra:method": "get"
          },
          {
            "@id": "amf://id#300",
            "@type": [
              "hydra:Operation",
              "doc:DomainElement"
            ],
            "schema-org:description": "Overwrites the Realtime API data model associated with this file with the provided JSON data model.\n\nThis method supports an /upload URI and accepts uploaded media with the following characteristics:\n\n- **Maximum file size**: 10MB\n- **Accepted Media MIME** types: */*\n",
            "schema-org:name": "update",
            "hydra:method": "put"
          }
        ]
      },
      {
        "@id": "amf://id#303",
        "@type": [
          "raml-http:EndPoint",
          "doc:DomainElement"
        ],
        "raml-http:parameter": {
          "@id": "amf://id#306",
          "@type": [
            "raml-http:Parameter",
            "doc:DomainElement"
          ],
          "raml-http:binding": "path",
          "raml-http:paramName": "fileId",
          "raml-http:schema": {
            "@id": "amf://id#307",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "fileId"
          },
          "schema-org:name": "fileId",
          "hydra:required": true
        },
        "raml-http:path": "/files/{fileId}/properties",
        "hydra:supportedOperation": [
          {
            "@id": "amf://id#304",
            "@type": [
              "hydra:Operation",
              "doc:DomainElement"
            ],
            "schema-org:description": "Lists a file's properties.",
            "hydra:method": "get"
          },
          {
            "@id": "amf://id#305",
            "@type": [
              "hydra:Operation",
              "doc:DomainElement"
            ],
            "schema-org:description": "Adds a property to a file.",
            "hydra:method": "post"
          }
        ]
      },
      {
        "@id": "amf://id#308",
        "@type": [
          "raml-http:EndPoint",
          "doc:DomainElement"
        ],
        "raml-http:parameter": [
          {
            "@id": "amf://id#313",
            "@type": [
              "raml-http:Parameter",
              "doc:DomainElement"
            ],
            "raml-http:binding": "path",
            "raml-http:paramName": "fileId",
            "raml-http:schema": {
              "@id": "amf://id#314",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "fileId"
            },
            "schema-org:name": "fileId",
            "hydra:required": true
          },
          {
            "@id": "amf://id#315",
            "@type": [
              "raml-http:Parameter",
              "doc:DomainElement"
            ],
            "raml-http:binding": "path",
            "raml-http:paramName": "propertyKey",
            "raml-http:schema": {
              "@id": "amf://id#316",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "The key of the property.",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "schema"
            },
            "schema-org:description": "The key of the property.",
            "schema-org:name": "propertyKey",
            "hydra:required": true
          }
        ],
        "raml-http:path": "/files/{fileId}/properties/{propertyKey}",
        "hydra:supportedOperation": [
          {
            "@id": "amf://id#309",
            "@type": [
              "hydra:Operation",
              "doc:DomainElement"
            ],
            "hydra:method": "get"
          },
          {
            "@id": "amf://id#310",
            "@type": [
              "hydra:Operation",
              "doc:DomainElement"
            ],
            "hydra:method": "put"
          },
          {
            "@id": "amf://id#311",
            "@type": [
              "hydra:Operation",
              "doc:DomainElement"
            ],
            "hydra:method": "delete"
          },
          {
            "@id": "amf://id#312",
            "@type": [
              "hydra:Operation",
              "doc:DomainElement"
            ],
            "hydra:method": "patch"
          }
        ]
      },
      {
        "@id": "amf://id#317",
        "@type": [
          "raml-http:EndPoint",
          "doc:DomainElement"
        ],
        "raml-http:path": "/files/trash",
        "hydra:supportedOperation": {
          "@id": "amf://id#318",
          "@type": [
            "hydra:Operation",
            "doc:DomainElement"
          ],
          "schema-org:description": "Permanently deletes all of the user's trashed files.",
          "hydra:method": "delete"
        }
      },
      {
        "@id": "amf://id#319",
        "@type": [
          "raml-http:EndPoint",
          "doc:DomainElement"
        ],
        "raml-http:parameter": {
          "@id": "amf://id#322",
          "@type": [
            "raml-http:Parameter",
            "doc:DomainElement"
          ],
          "raml-http:binding": "path",
          "raml-http:paramName": "folderId",
          "raml-http:schema": {
            "@id": "amf://id#323",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "folderId"
          },
          "schema-org:name": "folderId",
          "hydra:required": true
        },
        "raml-http:path": "/files/{folderId}/children",
        "hydra:supportedOperation": [
          {
            "@id": "amf://id#320",
            "@type": [
              "hydra:Operation",
              "doc:DomainElement"
            ],
            "schema-org:description": "Inserts a file into a folder.",
            "hydra:method": "post"
          },
          {
            "@id": "amf://id#321",
            "@type": [
              "hydra:Operation",
              "doc:DomainElement"
            ],
            "schema-org:description": "Lists a folder's children. To list all children of the root folder, use the alias root for the folderId value.",
            "hydra:method": "get"
          }
        ]
      },
      {
        "@id": "amf://id#324",
        "@type": [
          "raml-http:EndPoint",
          "doc:DomainElement"
        ],
        "raml-http:parameter": [
          {
            "@id": "amf://id#327",
            "@type": [
              "raml-http:Parameter",
              "doc:DomainElement"
            ],
            "raml-http:binding": "path",
            "raml-http:paramName": "folderId",
            "raml-http:schema": {
              "@id": "amf://id#328",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "folderId"
            },
            "schema-org:name": "folderId",
            "hydra:required": true
          },
          {
            "@id": "amf://id#329",
            "@type": [
              "raml-http:Parameter",
              "doc:DomainElement"
            ],
            "raml-http:binding": "path",
            "raml-http:paramName": "childId",
            "raml-http:schema": {
              "@id": "amf://id#330",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "childId"
            },
            "schema-org:name": "childId",
            "hydra:required": true
          }
        ],
        "raml-http:path": "/files/{folderId}/children/{childId}",
        "hydra:supportedOperation": [
          {
            "@id": "amf://id#325",
            "@type": [
              "hydra:Operation",
              "doc:DomainElement"
            ],
            "schema-org:description": "Removes a child from a folder.",
            "hydra:method": "delete"
          },
          {
            "@id": "amf://id#326",
            "@type": [
              "hydra:Operation",
              "doc:DomainElement"
            ],
            "schema-org:description": "Gets a specific child reference.",
            "hydra:method": "get"
          }
        ]
      },
      {
        "@id": "amf://id#331",
        "@type": [
          "raml-http:EndPoint",
          "doc:DomainElement"
        ],
        "raml-http:path": "/about",
        "schema-org:name": "About",
        "hydra:supportedOperation": {
          "@id": "amf://id#332",
          "@type": [
            "hydra:Operation",
            "doc:DomainElement"
          ],
          "schema-org:description": "Gets the information about the current user along with Drive API settings.",
          "hydra:method": "get"
        }
      },
      {
        "@id": "amf://id#333",
        "@type": [
          "raml-http:EndPoint",
          "doc:DomainElement"
        ],
        "raml-http:path": "/changes",
        "schema-org:name": "Changes",
        "hydra:supportedOperation": {
          "@id": "amf://id#334",
          "@type": [
            "hydra:Operation",
            "doc:DomainElement"
          ],
          "hydra:method": "get"
        }
      },
      {
        "@id": "amf://id#335",
        "@type": [
          "raml-http:EndPoint",
          "doc:DomainElement"
        ],
        "raml-http:parameter": {
          "@id": "amf://id#337",
          "@type": [
            "raml-http:Parameter",
            "doc:DomainElement"
          ],
          "raml-http:binding": "path",
          "raml-http:paramName": "changeId",
          "raml-http:schema": {
            "@id": "amf://id#338",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "The ID of the change.",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "schema"
          },
          "schema-org:description": "The ID of the change.",
          "schema-org:name": "changeId",
          "hydra:required": true
        },
        "raml-http:path": "/changes/{changeId}",
        "hydra:supportedOperation": {
          "@id": "amf://id#336",
          "@type": [
            "hydra:Operation",
            "doc:DomainElement"
          ],
          "schema-org:description": "Gets a specific change.",
          "hydra:method": "get"
        }
      },
      {
        "@id": "amf://id#339",
        "@type": [
          "raml-http:EndPoint",
          "doc:DomainElement"
        ],
        "raml-http:path": "/changes/watch",
        "hydra:supportedOperation": [
          {
            "@id": "amf://id#340",
            "@type": [
              "hydra:Operation",
              "doc:DomainElement"
            ],
            "schema-org:description": "Watch for all changes to a user's Drive.",
            "hydra:expects": {
              "@id": "amf://id#341",
              "@type": [
                "raml-http:Request",
                "doc:DomainElement"
              ],
              "raml-http:header": {
                "@id": "amf://id#344",
                "@type": [
                  "raml-http:Parameter",
                  "doc:DomainElement"
                ],
                "raml-http:binding": "header",
                "raml-http:paramName": "x-test",
                "raml-http:schema": {
                  "@id": "amf://id#345",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "shacl:datatype": {
                    "@id": "xsd:string"
                  },
                  "shacl:name": "schema"
                },
                "schema-org:name": "x-test",
                "hydra:required": true
              },
              "raml-http:parameter": {
                "@id": "amf://id#342",
                "@type": [
                  "raml-http:Parameter",
                  "doc:DomainElement"
                ],
                "raml-http:binding": "query",
                "raml-http:paramName": "spaces",
                "raml-http:schema": {
                  "@id": "amf://id#343",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "schema-org:description": "A comma-separated list of spaces to query. Supported values are:\n\n- **drive**\n- **appDataFolder**\n- **photos**\n",
                  "shacl:datatype": {
                    "@id": "xsd:string"
                  },
                  "shacl:name": "schema"
                },
                "schema-org:description": "A comma-separated list of spaces to query. Supported values are:\n\n- **drive**\n- **appDataFolder**\n- **photos**\n",
                "schema-org:name": "spaces",
                "hydra:required": false
              },
              "raml-http:payload": []
            },
            "hydra:method": "post"
          },
          {
            "@id": "amf://id#346",
            "@type": [
              "hydra:Operation",
              "doc:DomainElement"
            ],
            "schema-org:description": "Dummy function",
            "hydra:method": "get"
          }
        ]
      },
      {
        "@id": "amf://id#347",
        "@type": [
          "raml-http:EndPoint",
          "doc:DomainElement"
        ],
        "raml-http:parameter": {
          "@id": "amf://id#349",
          "@type": [
            "raml-http:Parameter",
            "doc:DomainElement"
          ],
          "raml-http:binding": "path",
          "raml-http:paramName": "email",
          "raml-http:schema": {
            "@id": "amf://id#350",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "The email address for which to return a permission ID",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "schema"
          },
          "schema-org:description": "The email address for which to return a permission ID",
          "schema-org:name": "email",
          "hydra:required": true
        },
        "raml-http:path": "/permissionIds/{email}",
        "hydra:supportedOperation": {
          "@id": "amf://id#348",
          "@type": [
            "hydra:Operation",
            "doc:DomainElement"
          ],
          "schema-org:description": "Returns the permission ID for an email address.",
          "hydra:method": "get"
        }
      },
      {
        "@id": "amf://id#351",
        "@type": [
          "raml-http:EndPoint",
          "doc:DomainElement"
        ],
        "raml-http:path": "/apps",
        "schema-org:name": "Apps",
        "hydra:supportedOperation": {
          "@id": "amf://id#352",
          "@type": [
            "hydra:Operation",
            "doc:DomainElement"
          ],
          "schema-org:description": "Lists a user's installed apps.",
          "hydra:method": "get"
        }
      },
      {
        "@id": "amf://id#353",
        "@type": [
          "raml-http:EndPoint",
          "doc:DomainElement"
        ],
        "raml-http:parameter": {
          "@id": "amf://id#355",
          "@type": [
            "raml-http:Parameter",
            "doc:DomainElement"
          ],
          "raml-http:binding": "path",
          "raml-http:paramName": "appId",
          "raml-http:schema": {
            "@id": "amf://id#356",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "The ID of the app.",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "schema"
          },
          "schema-org:description": "The ID of the app.",
          "schema-org:name": "appId",
          "hydra:required": true
        },
        "raml-http:path": "/apps/{appId}",
        "hydra:supportedOperation": {
          "@id": "amf://id#354",
          "@type": [
            "hydra:Operation",
            "doc:DomainElement"
          ],
          "schema-org:description": "Gets a specific app.",
          "hydra:method": "get"
        }
      },
      {
        "@id": "amf://id#357",
        "@type": [
          "raml-http:EndPoint",
          "doc:DomainElement"
        ],
        "raml-http:path": "/channels/stop",
        "hydra:supportedOperation": {
          "@id": "amf://id#358",
          "@type": [
            "hydra:Operation",
            "doc:DomainElement"
          ],
          "schema-org:description": "Stop watching for changes to a resource.\nIf successful, this method returns an empty response body.\n",
          "hydra:method": "post"
        }
      },
      {
        "@id": "amf://id#359",
        "@type": [
          "raml-http:EndPoint",
          "doc:DomainElement"
        ],
        "raml-http:path": "/teamdrives",
        "schema-org:name": "Teamdrives",
        "hydra:supportedOperation": [
          {
            "@id": "amf://id#360",
            "@type": [
              "hydra:Operation",
              "doc:DomainElement"
            ],
            "schema-org:description": "Creates a new Team Drive.",
            "schema-org:name": "insert",
            "hydra:method": "post"
          },
          {
            "@id": "amf://id#361",
            "@type": [
              "hydra:Operation",
              "doc:DomainElement"
            ],
            "schema-org:description": "Lists the user's Team Drives.",
            "schema-org:name": "list",
            "hydra:method": "get"
          }
        ]
      },
      {
        "@id": "amf://id#362",
        "@type": [
          "raml-http:EndPoint",
          "doc:DomainElement"
        ],
        "raml-http:parameter": {
          "@id": "amf://id#366",
          "@type": [
            "raml-http:Parameter",
            "doc:DomainElement"
          ],
          "raml-http:binding": "path",
          "raml-http:paramName": "teamDriveId",
          "raml-http:schema": {
            "@id": "amf://id#367",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "The ID of the Team Drive",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "schema"
          },
          "schema-org:description": "The ID of the Team Drive",
          "schema-org:name": "teamDriveId",
          "hydra:required": true
        },
        "raml-http:path": "/teamdrives/{teamDriveId}",
        "hydra:supportedOperation": [
          {
            "@id": "amf://id#363",
            "@type": [
              "hydra:Operation",
              "doc:DomainElement"
            ],
            "schema-org:description": "Permanently deletes a Team Drive for which the user is an organizer. The Team Drive cannot contain any untrashed items.\n",
            "hydra:method": "delete"
          },
          {
            "@id": "amf://id#364",
            "@type": [
              "hydra:Operation",
              "doc:DomainElement"
            ],
            "schema-org:description": "Gets a Team Drive's metadata by ID.",
            "hydra:method": "get"
          },
          {
            "@id": "amf://id#365",
            "@type": [
              "hydra:Operation",
              "doc:DomainElement"
            ],
            "schema-org:description": "Updates a Team Drive's metadata",
            "hydra:method": "put"
          }
        ]
      },
      {
        "@id": "amf://id#368",
        "@type": [
          "raml-http:EndPoint",
          "doc:DomainElement"
        ],
        "raml-http:path": "/typeFromLibraryEndpoint",
        "hydra:supportedOperation": {
          "@id": "amf://id#369",
          "@type": [
            "hydra:Operation",
            "doc:DomainElement"
          ],
          "hydra:expects": {
            "@id": "amf://id#370",
            "@type": [
              "raml-http:Request",
              "doc:DomainElement"
            ],
            "raml-http:payload": {
              "@id": "amf://id#371",
              "@type": [
                "raml-http:Payload",
                "doc:DomainElement"
              ],
              "raml-http:mediaType": "application/json",
              "raml-http:schema": {
                "@id": "amf://id#372/linked_1",
                "@type": [
                  "shacl:NodeShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "doc:link-label": "TypeFromLibray",
                "doc:link-target": {
                  "@id": "amf://id#372"
                }
              }
            }
          },
          "hydra:method": "post",
          "hydra:returns": {
            "@id": "amf://id#375",
            "@type": [
              "raml-http:Response",
              "doc:DomainElement"
            ],
            "raml-http:payload": [],
            "schema-org:name": "200",
            "hydra:statusCode": "200"
          }
        }
      },
      {
        "@id": "amf://id#376",
        "@type": [
          "raml-http:EndPoint",
          "doc:DomainElement"
        ],
        "raml-http:path": "/referenceId",
        "hydra:supportedOperation": {
          "@id": "amf://id#377",
          "@type": [
            "hydra:Operation",
            "doc:DomainElement"
          ],
          "hydra:expects": {
            "@id": "amf://id#378",
            "@type": [
              "raml-http:Request",
              "doc:DomainElement"
            ],
            "raml-http:payload": {
              "@id": "amf://id#379",
              "@type": [
                "raml-http:Payload",
                "doc:DomainElement"
              ],
              "raml-http:mediaType": "application/json",
              "raml-http:schema": {
                "@id": "amf://id#111/linked_2",
                "@type": [
                  "shacl:NodeShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "doc:link-label": "SchemaPerson",
                "doc:link-target": {
                  "@id": "amf://id#111"
                }
              }
            }
          },
          "hydra:method": "post"
        }
      }
    ],
    "raml-http:scheme": "HTTPS",
    "raml-http:server": {
      "@id": "amf://id#380",
      "@type": [
        "raml-http:Server",
        "doc:DomainElement"
      ],
      "raml-http:url": "https://api.mulesoft.com/{version}",
      "raml-http:variable": {
        "@id": "amf://id#381",
        "@type": [
          "raml-http:Parameter",
          "doc:DomainElement"
        ],
        "raml-http:binding": "path",
        "raml-http:schema": {
          "@id": "amf://id#382",
          "@type": [
            "raml-shapes:ScalarShape",
            "shacl:Shape",
            "raml-shapes:Shape",
            "doc:DomainElement"
          ],
          "shacl:datatype": {
            "@id": "xsd:string"
          },
          "shacl:name": "version"
        },
        "schema-org:name": "version",
        "hydra:required": true
      }
    },
    "schema-org:documentation": [
      {
        "@id": "amf://id#383",
        "@type": [
          "schema-org:CreativeWork",
          "doc:DomainElement"
        ],
        "schema-org:description": "Example content\n",
        "schema-org:title": "How to begin"
      },
      {
        "@id": "amf://id#384",
        "@type": [
          "schema-org:CreativeWork",
          "doc:DomainElement"
        ],
        "schema-org:description": "Example content\n",
        "schema-org:title": "Other documentation entry"
      }
    ],
    "schema-org:name": "Navigation demo API",
    "schema-org:version": "v2"
  },
  "doc:references": [
    {
      "@id": "amf://id#186",
      "@type": [
        "doc:ExternalFragment",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "amf://id#114",
        "@type": [
          "doc:ExternalDomainElement",
          "doc:DomainElement"
        ],
        "doc:raw": "{\n  \"id\": \"R34fg663H9KW9MMSKISI\",\n  \"name\": \"Pawel Psztyc\",\n  \"birthday\": \"1983-10-20\",\n  \"gender\": \"male\",\n  \"url\": \"https://domain.com/profile/pawel.psztyc\",\n  \"image\": {\n    \"url\": \"https://domain.com/profile/pawel.psztyc/image\",\n    \"thumb\": \"https://domain.com/profile/pawel.psztyc/image/thumb\"\n  },\n  \"tagline\": \"Some text about me.\",\n  \"language\": \"en_GB\",\n  \"etag\": \"W\\\\244m4n5kj3gbn2nj4k4n4\"\n}\n",
        "raml-http:mediaType": "application/json"
      }
    },
    {
      "@id": "amf://id#187",
      "@type": [
        "doc:ExternalFragment",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "amf://id#112",
        "@type": [
          "doc:ExternalDomainElement",
          "doc:DomainElement"
        ],
        "doc:raw": "{\n  \"$id\": \"http://example.com/example.json\",\n  \"type\": \"object\",\n  \"definitions\": {},\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"properties\": {\n    \"id\": {\n      \"$id\": \"/properties/id\",\n      \"type\": \"string\",\n      \"title\": \"The Id Schema \",\n      \"default\": \"\",\n      \"examples\": [\n        \"R34fg663H9KW9MMSKISI\"\n      ]\n    },\n    \"name\": {\n      \"$id\": \"/properties/name\",\n      \"type\": \"string\",\n      \"title\": \"The Name Schema \",\n      \"default\": \"\",\n      \"examples\": [\n        \"Pawel Psztyc\"\n      ]\n    },\n    \"birthday\": {\n      \"$id\": \"/properties/birthday\",\n      \"type\": \"string\",\n      \"title\": \"The Birthday Schema \",\n      \"default\": \"\",\n      \"examples\": [\n        \"1983-10-20\"\n      ]\n    },\n    \"gender\": {\n      \"$id\": \"/properties/gender\",\n      \"type\": \"string\",\n      \"title\": \"The Gender Schema \",\n      \"default\": \"\",\n      \"examples\": [\n        \"male\"\n      ]\n    },\n    \"url\": {\n      \"$id\": \"/properties/url\",\n      \"type\": \"string\",\n      \"title\": \"The Url Schema \",\n      \"default\": \"\",\n      \"examples\": [\n        \"https://domain.com/profile/pawel.psztyc\"\n      ]\n    },\n    \"image\": {\n      \"$id\": \"/properties/image\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"url\": {\n          \"$id\": \"/properties/image/properties/url\",\n          \"type\": \"string\",\n          \"title\": \"The Url Schema \",\n          \"default\": \"\",\n          \"examples\": [\n            \"https://domain.com/profile/pawel.psztyc/image\"\n          ]\n        },\n        \"thumb\": {\n          \"$id\": \"/properties/image/properties/thumb\",\n          \"type\": \"string\",\n          \"title\": \"The Thumb Schema \",\n          \"default\": \"\",\n          \"examples\": [\n            \"https://domain.com/profile/pawel.psztyc/image/thumb\"\n          ]\n        }\n      }\n    },\n    \"tagline\": {\n      \"$id\": \"/properties/tagline\",\n      \"type\": \"string\",\n      \"title\": \"The Tagline Schema \",\n      \"default\": \"\",\n      \"examples\": [\n        \"Some text about me.\"\n      ]\n    },\n    \"language\": {\n      \"$id\": \"/properties/language\",\n      \"type\": \"string\",\n      \"title\": \"The Language Schema \",\n      \"default\": \"\",\n      \"examples\": [\n        \"en_GB\"\n      ]\n    },\n    \"etag\": {\n      \"$id\": \"/properties/etag\",\n      \"type\": \"string\",\n      \"title\": \"The Etag Schema \",\n      \"default\": \"\",\n      \"examples\": [\n        \"W\\\\244m4n5kj3gbn2nj4k4n4\"\n      ]\n    }\n  }\n}\n",
        "raml-http:mediaType": "application/json"
      }
    },
    {
      "@id": "amf://id#188",
      "@type": [
        "doc:DataType",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "amf://id#161",
        "@type": [
          "shacl:NodeShape",
          "shacl:Shape",
          "raml-shapes:Shape",
          "doc:DomainElement"
        ],
        "schema-org:description": "Common properties for all resources returned by the API.\n",
        "shacl:closed": false,
        "shacl:name": "Resource",
        "shacl:property": {
          "@id": "amf://id#3",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#4",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "ETag of this resource for caching purposes.\n__This property will be ignored when creating an object.__\n",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "etag"
          },
          "shacl:minCount": 1,
          "shacl:name": "etag",
          "shacl:path": {
            "@id": "data:etag"
          }
        }
      }
    },
    {
      "@id": "amf://id#189",
      "@type": [
        "doc:DataType",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "amf://id#86",
        "@type": [
          "shacl:NodeShape",
          "shacl:Shape",
          "raml-shapes:Shape",
          "doc:DomainElement"
        ],
        "doc:examples": {
          "@id": "amf://id#165",
          "@type": [
            "doc:Example",
            "doc:DomainElement"
          ],
          "doc:strict": true,
          "doc:structuredValue": {
            "@id": "amf://id#166",
            "@type": "data:Object",
            "data:available": {
              "@id": "file://test/demo-api/types/product.raml#/shape/example/default-example/object_1/scalar_7",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:boolean",
                "@value": "true"
              }
            },
            "data:etag": {
              "@id": "file://test/demo-api/types/product.raml#/shape/example/default-example/object_1/scalar_8",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "W\\sd3deef3rgrgf4r"
              }
            },
            "data:id": {
              "@id": "file://test/demo-api/types/product.raml#/shape/example/default-example/object_1/scalar_2",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "we2322-4f4f4f-f4f4ff-f4f4ff4"
              }
            },
            "data:name": {
              "@id": "file://test/demo-api/types/product.raml#/shape/example/default-example/object_1/scalar_3",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "Acme Product"
              }
            },
            "data:quantity": {
              "@id": "file://test/demo-api/types/product.raml#/shape/example/default-example/object_1/scalar_4",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:integer",
                "@value": "200"
              }
            },
            "data:unit": {
              "@id": "file://test/demo-api/types/product.raml#/shape/example/default-example/object_1/scalar_5",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "ml"
              }
            },
            "data:upc": {
              "@id": "file://test/demo-api/types/product.raml#/shape/example/default-example/object_1/scalar_6",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "123456789101"
              }
            }
          },
          "shacl:raw": "  id: we2322-4f4f4f-f4f4ff-f4f4ff4\n  name: Acme Product\n  quantity: 200\n  unit: ml\n  upc: \"123456789101\"\n  available: true\n  etag: \"W\\\\sd3deef3rgrgf4r\"\n"
        },
        "schema-org:description": "A single product representing an item in the store.",
        "schema-org:name": "A product resource",
        "shacl:closed": false,
        "shacl:name": "Product",
        "shacl:property": [
          {
            "@id": "amf://id#87",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#88",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "doc:examples": {
                "@id": "amf://id#89",
                "@type": [
                  "doc:Example",
                  "doc:DomainElement"
                ],
                "doc:strict": true,
                "doc:structuredValue": {
                  "@id": "amf://id#90",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "042100005264"
                  }
                },
                "shacl:raw": "042100005264"
              },
              "schema-org:description": "The Universal Produc Code. It consists of 12 numerical digits. However, because of the\ninteger precision limitation in JavaScript it is represented as a string.\n",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "upc",
              "shacl:pattern": "^[0-9]{12,12}$"
            },
            "shacl:minCount": 1,
            "shacl:name": "upc",
            "shacl:path": {
              "@id": "data:upc"
            }
          },
          {
            "@id": "amf://id#3",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#4",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "ETag of this resource for caching purposes.\n__This property will be ignored when creating an object.__\n",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "etag"
            },
            "shacl:minCount": 1,
            "shacl:name": "etag",
            "shacl:path": {
              "@id": "data:etag"
            }
          },
          {
            "@id": "amf://id#91",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#92",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "doc:examples": {
                "@id": "amf://id#93",
                "@type": [
                  "doc:Example",
                  "doc:DomainElement"
                ],
                "doc:strict": true,
                "doc:structuredValue": {
                  "@id": "amf://id#94",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "Acme product - mentol flavor, 500 ml."
                  }
                },
                "shacl:raw": "Acme product - mentol flavor, 500 ml."
              },
              "schema-org:description": "Product name",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "name"
            },
            "shacl:minCount": 1,
            "shacl:name": "name",
            "shacl:path": {
              "@id": "data:name"
            }
          },
          {
            "@id": "amf://id#96",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#97",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "Product id. It is a UUID of the database record.\n__This property will be ignored when creating an object.__\nIt will be available when the product is stored in the datastore.\n",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "id",
              "shacl:pattern": "^[0-9a-zA-Z-]+$"
            },
            "shacl:minCount": 1,
            "shacl:name": "id",
            "shacl:path": {
              "@id": "data:id"
            }
          },
          {
            "@id": "amf://id#98",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#99",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "doc:examples": {
                "@id": "amf://id#100",
                "@type": [
                  "doc:Example",
                  "doc:DomainElement"
                ],
                "doc:strict": true,
                "doc:structuredValue": {
                  "@id": "amf://id#101",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "ml"
                  }
                },
                "shacl:raw": "ml"
              },
              "schema-org:description": "The unit of measuremet for the quantity property.",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "unit"
            },
            "shacl:minCount": 1,
            "shacl:name": "unit",
            "shacl:path": {
              "@id": "data:unit"
            }
          },
          {
            "@id": "amf://id#102",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#103",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "doc:examples": {
                "@id": "amf://id#104",
                "@type": [
                  "doc:Example",
                  "doc:DomainElement"
                ],
                "doc:strict": true,
                "doc:structuredValue": {
                  "@id": "amf://id#105",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:boolean",
                    "@value": "true"
                  }
                },
                "shacl:raw": "true"
              },
              "schema-org:description": "Product current availability in the store.\nProduct may be not available but the users still can order it with later delivery date.\n",
              "shacl:datatype": {
                "@id": "xsd:boolean"
              },
              "shacl:name": "available"
            },
            "shacl:minCount": 1,
            "shacl:name": "available",
            "shacl:path": {
              "@id": "data:available"
            }
          },
          {
            "@id": "amf://id#106",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#107",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "doc:examples": {
                "@id": "amf://id#108",
                "@type": [
                  "doc:Example",
                  "doc:DomainElement"
                ],
                "doc:strict": true,
                "doc:structuredValue": {
                  "@id": "amf://id#109",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:integer",
                    "@value": "500"
                  }
                },
                "shacl:raw": "500"
              },
              "schema-org:description": "The quantity of the product in the one unit of measurement.\nSee `unit` property for more information.\n",
              "shacl:datatype": {
                "@id": "raml-shapes:number"
              },
              "shacl:name": "quantity"
            },
            "shacl:minCount": 1,
            "shacl:name": "quantity",
            "shacl:path": {
              "@id": "data:quantity"
            }
          }
        ]
      },
      "doc:references": {
        "@id": "amf://id#188",
        "@type": [
          "doc:DataType",
          "doc:Fragment",
          "doc:Unit"
        ],
        "doc:encodes": {
          "@id": "amf://id#161",
          "@type": [
            "shacl:NodeShape",
            "shacl:Shape",
            "raml-shapes:Shape",
            "doc:DomainElement"
          ],
          "schema-org:description": "Common properties for all resources returned by the API.\n",
          "shacl:closed": false,
          "shacl:name": "Resource",
          "shacl:property": {
            "@id": "amf://id#3",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#4",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "ETag of this resource for caching purposes.\n__This property will be ignored when creating an object.__\n",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "etag"
            },
            "shacl:minCount": 1,
            "shacl:name": "etag",
            "shacl:path": {
              "@id": "data:etag"
            }
          }
        }
      }
    },
    {
      "@id": "amf://id#190",
      "@type": [
        "doc:DataType",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "amf://id#63",
        "@type": [
          "shacl:NodeShape",
          "shacl:Shape",
          "raml-shapes:Shape",
          "doc:DomainElement"
        ],
        "doc:examples": {
          "@id": "amf://id#64",
          "@type": [
            "doc:Example",
            "doc:DomainElement"
          ],
          "doc:strict": true,
          "doc:structuredValue": {
            "@id": "amf://id#65",
            "@type": "data:Object",
            "data:thumb": {
              "@id": "file://test/demo-api/types/image.raml#/shape/example/default-example/object_1/scalar_3",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "https://domain.com/profile/pawel.psztyc/image/thumb"
              }
            },
            "data:url": {
              "@id": "file://test/demo-api/types/image.raml#/shape/example/default-example/object_1/scalar_2",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "https://domain.com/profile/pawel.psztyc/image"
              }
            }
          },
          "shacl:raw": "  url: https://domain.com/profile/pawel.psztyc/image\n  thumb: https://domain.com/profile/pawel.psztyc/image/thumb\n"
        },
        "schema-org:description": "An image object representing an image object strored in the file store.\nThe image can be only included in the response. It has no effect if the Image appear in the\nrequest. Endpoint handles image creation on it's own and clients can't process images\nexcept of sending image data.\n",
        "shacl:closed": false,
        "shacl:name": "image",
        "shacl:property": [
          {
            "@id": "amf://id#66",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#67",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "The URL of the image.\nTo resize the image and crop it to a square, append the query string **?sz=x**, where x is the dimension in pixels of each side.\n",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "url"
            },
            "shacl:minCount": 1,
            "shacl:name": "url",
            "shacl:path": {
              "@id": "data:url"
            }
          },
          {
            "@id": "amf://id#68",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#69",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "An URL to the thumbnail of the image. Thumbnails are 60x60px cropped images of the original image.\n",
              "schema-org:name": "Thumbnail",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "thumb"
            },
            "shacl:minCount": 1,
            "shacl:name": "thumb",
            "shacl:path": {
              "@id": "data:thumb"
            }
          }
        ]
      }
    },
    {
      "@id": "amf://id#191",
      "@type": [
        "doc:DataType",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "amf://id#8",
        "@type": [
          "shacl:NodeShape",
          "shacl:Shape",
          "raml-shapes:Shape",
          "doc:DomainElement"
        ],
        "doc:examples": {
          "@id": "amf://id#9",
          "@type": [
            "doc:Example",
            "doc:DomainElement"
          ],
          "doc:strict": true,
          "doc:structuredValue": {
            "@id": "amf://id#10",
            "@type": "data:Object",
            "data:height": {
              "@id": "file://test/demo-api/types/dimensions.raml#/shape/example/default-example/object_1/scalar_3",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:integer",
                "@value": "160"
              }
            },
            "data:width": {
              "@id": "file://test/demo-api/types/dimensions.raml#/shape/example/default-example/object_1/scalar_2",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:integer",
                "@value": "200"
              }
            }
          },
          "shacl:raw": "  width: 200\n  height: 160\n"
        },
        "schema-org:description": "A dimmensions of an object like image.\n",
        "shacl:closed": false,
        "shacl:name": "Dimension",
        "shacl:property": [
          {
            "@id": "amf://id#11",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#12",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "Width of the shape.\n",
              "shacl:datatype": {
                "@id": "raml-shapes:number"
              },
              "shacl:name": "width"
            },
            "shacl:minCount": 1,
            "shacl:name": "width",
            "shacl:path": {
              "@id": "data:width"
            }
          },
          {
            "@id": "amf://id#13",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#14",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "Height of the shape.\n",
              "shacl:datatype": {
                "@id": "raml-shapes:number"
              },
              "shacl:name": "height"
            },
            "shacl:minCount": 1,
            "shacl:name": "height",
            "shacl:path": {
              "@id": "data:height"
            }
          },
          {
            "@id": "amf://id#15",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#16",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "A unit that describes the dimension. It can be, for example, `px` for\npixels, `pt` for points, `%` for percentage.\n",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:defaultValue": {
                "@id": "amf://id#17",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "px"
                }
              },
              "shacl:defaultValueStr": "px",
              "shacl:name": "unit?"
            },
            "shacl:minCount": 0,
            "shacl:name": "unit",
            "shacl:path": {
              "@id": "data:unit"
            }
          }
        ]
      }
    },
    {
      "@id": "amf://id#192",
      "@type": [
        "doc:DataType",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "amf://id#24",
        "@type": [
          "shacl:NodeShape",
          "shacl:Shape",
          "raml-shapes:Shape",
          "doc:DomainElement"
        ],
        "doc:examples": {
          "@id": "amf://id#25",
          "@type": [
            "doc:Example",
            "doc:DomainElement"
          ],
          "doc:strict": true,
          "doc:structuredValue": {
            "@id": "amf://id#26",
            "@type": "data:Object",
            "data:birthday": {
              "@id": "file://test/demo-api/types/app-person.raml#/shape/example/default-example/object_1/scalar_4",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "1983-10-20"
              }
            },
            "data:etag": {
              "@id": "file://test/demo-api/types/app-person.raml#/shape/example/default-example/object_1/scalar_12",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "W\\244m4n5kj3gbn2nj4k4n4"
              }
            },
            "data:favouriteNumber": {
              "@id": "file://test/demo-api/types/app-person.raml#/shape/example/default-example/object_1/scalar_13",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:integer",
                "@value": "10"
              }
            },
            "data:favouriteTime": {
              "@id": "file://test/demo-api/types/app-person.raml#/shape/example/default-example/object_1/scalar_14",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "10:29:52"
              }
            },
            "data:gender": {
              "@id": "file://test/demo-api/types/app-person.raml#/shape/example/default-example/object_1/scalar_5",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "male"
              }
            },
            "data:id": {
              "@id": "file://test/demo-api/types/app-person.raml#/shape/example/default-example/object_1/scalar_2",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "R34fg663H9KW9MMSKISIhTs1dR7Hss7e"
              }
            },
            "data:image": {
              "@id": "file://test/demo-api/types/app-person.raml#/shape/example/default-example/object_1/object_7",
              "@type": "data:Object",
              "data:thumb": {
                "@id": "file://test/demo-api/types/app-person.raml#/shape/example/default-example/object_1/object_7/scalar_9",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "https://domain.com/profile/pawel.psztyc/image/thumb"
                }
              },
              "data:url": {
                "@id": "file://test/demo-api/types/app-person.raml#/shape/example/default-example/object_1/object_7/scalar_8",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "https://domain.com/profile/pawel.psztyc/image"
                }
              }
            },
            "data:language": {
              "@id": "file://test/demo-api/types/app-person.raml#/shape/example/default-example/object_1/scalar_11",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "en_GB"
              }
            },
            "data:name": {
              "@id": "file://test/demo-api/types/app-person.raml#/shape/example/default-example/object_1/scalar_3",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "Pawel Psztyc"
              }
            },
            "data:nillable": {
              "@id": "file://test/demo-api/types/app-person.raml#/shape/example/default-example/object_1/scalar_15",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:nil",
                "@value": "null"
              }
            },
            "data:tagline": {
              "@id": "file://test/demo-api/types/app-person.raml#/shape/example/default-example/object_1/scalar_10",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "Some text about me."
              }
            },
            "data:url": {
              "@id": "file://test/demo-api/types/app-person.raml#/shape/example/default-example/object_1/scalar_6",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "https://domain.com/profile/pawel.psztyc"
              }
            }
          },
          "shacl:raw": "  id: \"R34fg663H9KW9MMSKISIhTs1dR7Hss7e\"\n  name: \"Pawel Psztyc\"\n  birthday: \"1983-10-20\"\n  gender: male\n  url: \"https://domain.com/profile/pawel.psztyc\"\n  image:\n    url: https://domain.com/profile/pawel.psztyc/image\n    thumb: https://domain.com/profile/pawel.psztyc/image/thumb\n  tagline: Some text about me.\n  language: en_GB\n  etag: \"W\\\\244m4n5kj3gbn2nj4k4n4\"\n  favouriteNumber: 10\n  favouriteTime: 10:29:52\n  nillable: null\n\n"
        },
        "schema-org:description": "An object representing a person in the API.\nThis object will be used in all methods returning a Person or list of people.\n",
        "schema-org:name": "A person resource",
        "shacl:closed": false,
        "shacl:name": "AppPerson",
        "shacl:property": [
          {
            "@id": "amf://id#27",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#28",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "The person's favourite time of day",
              "shacl:datatype": {
                "@id": "xsd:time"
              },
              "shacl:name": "favouriteTime"
            },
            "shacl:minCount": 1,
            "shacl:name": "favouriteTime",
            "shacl:path": {
              "@id": "data:favouriteTime"
            }
          },
          {
            "@id": "amf://id#29",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#30",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "doc:examples": {
                "@id": "amf://id#31",
                "@type": [
                  "doc:Example",
                  "doc:DomainElement"
                ],
                "doc:strict": true,
                "doc:structuredValue": {
                  "@id": "amf://id#32",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:integer",
                    "@value": "25"
                  }
                },
                "shacl:raw": "25"
              },
              "raml-shapes:multipleOf": 5,
              "schema-org:name": "Favourite number",
              "shacl:datatype": {
                "@id": "raml-shapes:number"
              },
              "shacl:maxInclusive": 9999,
              "shacl:minInclusive": 0,
              "shacl:name": "favouriteNumber"
            },
            "shacl:minCount": 1,
            "shacl:name": "favouriteNumber",
            "shacl:path": {
              "@id": "data:favouriteNumber"
            }
          },
          {
            "@id": "amf://id#33",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#34",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "shacl:datatype": {
                "@id": "xsd:boolean"
              },
              "shacl:defaultValue": {
                "@id": "amf://id#35",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:boolean",
                  "@value": "false"
                }
              },
              "shacl:defaultValueStr": "false",
              "shacl:name": "newsletter"
            },
            "shacl:minCount": 0,
            "shacl:name": "newsletter",
            "shacl:path": {
              "@id": "data:newsletter"
            }
          },
          {
            "@id": "amf://id#36",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#37",
              "@type": [
                "raml-shapes:FileShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "raml-shapes:fileType": [
                "image/png",
                "image/jpeg",
                "image/jpg",
                "image/gif"
              ],
              "shacl:maxLength": 1000,
              "shacl:minLength": 10
            },
            "shacl:minCount": 0,
            "shacl:name": "fietype",
            "shacl:path": {
              "@id": "data:fietype"
            }
          },
          {
            "@id": "amf://id#3",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#4",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "ETag of this resource for caching purposes.\n__This property will be ignored when creating an object.__\n",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "etag"
            },
            "shacl:minCount": 1,
            "shacl:name": "etag",
            "shacl:path": {
              "@id": "data:etag"
            }
          },
          {
            "@id": "amf://id#38",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#39",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "The brief description (tagline) of this person.",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "tagline"
            },
            "shacl:minCount": 1,
            "shacl:name": "tagline",
            "shacl:path": {
              "@id": "data:tagline"
            }
          },
          {
            "@id": "amf://id#40",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#41",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "doc:examples": {
                "@id": "amf://id#42",
                "@type": [
                  "doc:Example",
                  "doc:DomainElement"
                ],
                "doc:strict": true,
                "doc:structuredValue": {
                  "@id": "amf://id#43",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "John Smith"
                  }
                },
                "shacl:raw": "John Smith"
              },
              "schema-org:description": "Person full name. The input will be rejected if this property is not set while creating new object.",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "name",
              "shacl:pattern": "^[0-9a-zA-Z ]+$"
            },
            "shacl:minCount": 1,
            "shacl:name": "name",
            "shacl:path": {
              "@id": "data:name"
            }
          },
          {
            "@id": "amf://id#44",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#45",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "doc:examples": {
                "@id": "amf://id#46",
                "@type": [
                  "doc:Example",
                  "doc:DomainElement"
                ],
                "doc:strict": true,
                "doc:structuredValue": {
                  "@id": "amf://id#47",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "raml-shapes:dateTimeOnly",
                    "@value": "2018-04-09T19:10:15"
                  }
                },
                "shacl:raw": "2018-04-09T19:10:15"
              },
              "shacl:datatype": {
                "@id": "raml-shapes:dateTimeOnly"
              },
              "shacl:name": "created"
            },
            "shacl:minCount": 0,
            "shacl:name": "created",
            "shacl:path": {
              "@id": "data:created"
            }
          },
          {
            "@id": "amf://id#48",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#49",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "The URL of this person's profile.",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "url"
            },
            "shacl:minCount": 1,
            "shacl:name": "url",
            "shacl:path": {
              "@id": "data:url"
            }
          },
          {
            "@id": "amf://id#50",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#51",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "A unique identifier of a person.\n\nIt is a 32 bit string containing alphanumeric characters.\n",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:maxLength": 32,
              "shacl:minLength": 32,
              "shacl:name": "id",
              "shacl:pattern": "^[A-Za-z0-9]*$"
            },
            "shacl:minCount": 1,
            "shacl:name": "id",
            "shacl:path": {
              "@id": "data:id"
            }
          },
          {
            "@id": "amf://id#52",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#53",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "The user's preferred language for rendering.",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "language"
            },
            "shacl:minCount": 1,
            "shacl:name": "language",
            "shacl:path": {
              "@id": "data:language"
            }
          },
          {
            "@id": "amf://id#54",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#55",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "Very unpractical property to have in a data store.\n",
              "shacl:datatype": {
                "@id": "xsd:integer"
              },
              "shacl:name": "age"
            },
            "shacl:minCount": 0,
            "shacl:name": "age",
            "shacl:path": {
              "@id": "data:age"
            }
          },
          {
            "@id": "amf://id#56",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#57/linked_1",
              "@type": [
                "raml-shapes:UnionShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "doc:link-label": "amf_inline_type_1",
              "doc:link-target": {
                "@id": "amf://id#57"
              }
            },
            "shacl:minCount": 1,
            "shacl:name": "nillable",
            "shacl:path": {
              "@id": "data:nillable"
            }
          },
          {
            "@id": "amf://id#60",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#61",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "The person's date of birth, represented as YYYY-MM-DD.",
              "shacl:datatype": {
                "@id": "xsd:date"
              },
              "shacl:name": "birthday"
            },
            "shacl:minCount": 1,
            "shacl:name": "birthday",
            "shacl:path": {
              "@id": "data:birthday"
            }
          },
          {
            "@id": "amf://id#62",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#63/linked_1",
              "@type": [
                "shacl:NodeShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "doc:link-label": "image",
              "doc:link-target": {
                "@id": "amf://id#63"
              }
            },
            "shacl:minCount": 1,
            "shacl:name": "image",
            "shacl:path": {
              "@id": "data:image"
            }
          },
          {
            "@id": "amf://id#72",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#73",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "doc:examples": [
                {
                  "@id": "amf://id#77",
                  "@type": [
                    "doc:Example",
                    "doc:DomainElement"
                  ],
                  "doc:strict": true,
                  "doc:structuredValue": {
                    "@id": "amf://id#78",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "female"
                    }
                  },
                  "schema-org:name": "Women",
                  "shacl:raw": "female"
                },
                {
                  "@id": "amf://id#79",
                  "@type": [
                    "doc:Example",
                    "doc:DomainElement"
                  ],
                  "doc:strict": true,
                  "doc:structuredValue": {
                    "@id": "amf://id#80",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "male"
                    }
                  },
                  "schema-org:name": "Man",
                  "shacl:raw": "male"
                },
                {
                  "@id": "amf://id#81",
                  "@type": [
                    "doc:Example",
                    "doc:DomainElement"
                  ],
                  "doc:strict": true,
                  "doc:structuredValue": {
                    "@id": "amf://id#82",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "other"
                    }
                  },
                  "schema-org:name": "Elmo",
                  "shacl:raw": "other"
                }
              ],
              "schema-org:description": "The person's gender. Possible values includes, but are not limited to, the following values:\n* \"male\" - Male gender.\n* \"female\" - Female gender.\n* \"other\" - Other.\n",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:in": {
                "@id": "amf://id#73/list",
                "@type": "rdfs:Seq",
                "rdfs:_1": {
                  "@id": "amf://id#74",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "male"
                  }
                },
                "rdfs:_2": {
                  "@id": "amf://id#75",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "female"
                  }
                },
                "rdfs:_3": {
                  "@id": "amf://id#76",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "other"
                  }
                }
              },
              "shacl:name": "gender?"
            },
            "shacl:minCount": 0,
            "shacl:name": "gender",
            "shacl:path": {
              "@id": "data:gender"
            }
          }
        ]
      },
      "doc:references": [
        {
          "@id": "amf://id#190",
          "@type": [
            "doc:DataType",
            "doc:Fragment",
            "doc:Unit"
          ],
          "doc:encodes": {
            "@id": "amf://id#63",
            "@type": [
              "shacl:NodeShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#64",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#65",
                "@type": "data:Object",
                "data:thumb": {
                  "@id": "file://test/demo-api/types/image.raml#/shape/example/default-example/object_1/scalar_3",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "https://domain.com/profile/pawel.psztyc/image/thumb"
                  }
                },
                "data:url": {
                  "@id": "file://test/demo-api/types/image.raml#/shape/example/default-example/object_1/scalar_2",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "https://domain.com/profile/pawel.psztyc/image"
                  }
                }
              },
              "shacl:raw": "  url: https://domain.com/profile/pawel.psztyc/image\n  thumb: https://domain.com/profile/pawel.psztyc/image/thumb\n"
            },
            "schema-org:description": "An image object representing an image object strored in the file store.\nThe image can be only included in the response. It has no effect if the Image appear in the\nrequest. Endpoint handles image creation on it's own and clients can't process images\nexcept of sending image data.\n",
            "shacl:closed": false,
            "shacl:name": "image",
            "shacl:property": [
              {
                "@id": "amf://id#66",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape"
                ],
                "raml-shapes:range": {
                  "@id": "amf://id#67",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "schema-org:description": "The URL of the image.\nTo resize the image and crop it to a square, append the query string **?sz=x**, where x is the dimension in pixels of each side.\n",
                  "shacl:datatype": {
                    "@id": "xsd:string"
                  },
                  "shacl:name": "url"
                },
                "shacl:minCount": 1,
                "shacl:name": "url",
                "shacl:path": {
                  "@id": "data:url"
                }
              },
              {
                "@id": "amf://id#68",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape"
                ],
                "raml-shapes:range": {
                  "@id": "amf://id#69",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "schema-org:description": "An URL to the thumbnail of the image. Thumbnails are 60x60px cropped images of the original image.\n",
                  "schema-org:name": "Thumbnail",
                  "shacl:datatype": {
                    "@id": "xsd:string"
                  },
                  "shacl:name": "thumb"
                },
                "shacl:minCount": 1,
                "shacl:name": "thumb",
                "shacl:path": {
                  "@id": "data:thumb"
                }
              }
            ]
          }
        },
        {
          "@id": "amf://id#188",
          "@type": [
            "doc:DataType",
            "doc:Fragment",
            "doc:Unit"
          ],
          "doc:encodes": {
            "@id": "amf://id#161",
            "@type": [
              "shacl:NodeShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "Common properties for all resources returned by the API.\n",
            "shacl:closed": false,
            "shacl:name": "Resource",
            "shacl:property": {
              "@id": "amf://id#3",
              "@type": [
                "shacl:PropertyShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "raml-shapes:range": {
                "@id": "amf://id#4",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "schema-org:description": "ETag of this resource for caching purposes.\n__This property will be ignored when creating an object.__\n",
                "shacl:datatype": {
                  "@id": "xsd:string"
                },
                "shacl:name": "etag"
              },
              "shacl:minCount": 1,
              "shacl:name": "etag",
              "shacl:path": {
                "@id": "data:etag"
              }
            }
          }
        }
      ]
    },
    {
      "@id": "amf://id#193",
      "@type": [
        "doc:Module",
        "doc:Unit"
      ],
      "doc:declares": {
        "@id": "amf://id#194",
        "@type": [
          "shacl:NodeShape",
          "shacl:Shape",
          "raml-shapes:Shape",
          "doc:DomainElement"
        ],
        "shacl:closed": false,
        "shacl:name": "TypeFromLibray",
        "shacl:property": {
          "@id": "amf://id#195",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#196",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:datatype": {
              "@id": "raml-shapes:number"
            },
            "shacl:name": "age"
          },
          "shacl:minCount": 1,
          "shacl:name": "age",
          "shacl:path": {
            "@id": "data:age"
          }
        }
      },
      "doc:usage": "This is a Library raml"
    }
  ]
}